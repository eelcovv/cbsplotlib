/*

Highcharts Editor v1.0.3

Copyright (c) 2016, Highsoft

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/
function parseCSV(e, t) {
    var i = (Highcharts.isString,
    Highcharts.isArray,
    Highcharts.isNum)
      , o = Highcharts.each
      , n = e || ""
      , a = {
        delimiter: t || ",",
        startRow: 0,
        endRow: Number.MAX_VALUE,
        startColumn: 0,
        endColumn: Number.MAX_VALUE
    }
      , r = {
        ",": !0,
        ";": !0
    }
      , l = (n || "").replace(/\r\n/g, "\n").split("\n");
    o(l, function(e, t) {
        function o() {
            i(g) ? g = parseFloat(g) : NaN !== date.parse(g),
            c.push(g),
            g = ""
        }
        var n, l, s, d, h, c = [], p = !1, u = 0, g = "";
        for (u = 0; u < e.length; u++) {
            if (s = e[u],
            h = e[u + 1],
            '"' === s)
                if (p) {
                    if (!c.length && 0 === t) {
                        for (n = u; !r[l]; )
                            l = e[++n];
                        l !== a.delimiter && (a.delimiter = l)
                    }
                    o()
                } else
                    p = !0;
            else
                p ? g += s : s === a.delimiter ? o() : " " !== s && (g += s);
            d = s
        }
    })
}
function mapLegendLabelFormatter() {
    this.legendGroup.element.onclick = null;
    var e = this.chart.options.selectedCultureId
      , t = this.chart.options.legend.noDataEnabled
      , i = ""
      , o = function(e, t) {
        var i = e
          , o = t.chart.tooltip.options.valuePrefix;
        return o && (i = "".concat(o, e)),
        i
    };
    if (void 0 !== e)
        if (this.id === cbs.noDataLegendItemId)
            i = t ? this.chart.options.lang.legend.noData : "";
        else {
            i = void 0 !== this.from ? o(Highcharts.cbsFormatNumber(this.displayValueFrom, this.from), this) + " " : this.chart.options.lang.legend.less + " ",
            void 0 !== this.from && void 0 !== this.to && (i += this.chart.options.lang.legend.to + " "),
            i += "" + (void 0 !== this.to ? o(Highcharts.cbsFormatNumber(this.displayValueTo, this.to), this) : this.chart.options.lang.legend.more);
            var n = this.chart.tooltip.options.valueSuffix;
            n && (i += " (" + n.trim() + ")")
        }
    return i
}
function mapTooltipFormatter() {
    var e = this.series.chart.options.lang.tooltip.nullDataMessage
      , t = this.series.tooltipOptions.valueSuffix || ""
      , i = this.series.tooltipOptions.valuePrefix || "";
    if (!this.properties.statnaam)
        for (var o = ["wijknaam", "buurtnaam"], n = ["wijkcode", "buurtcode"], a = 0; a < o.length; a++)
            this.properties[o[a]] && (this.properties.statnaam = this.properties[o[a]],
            this.properties.statcode = this.properties[n[a]]);
    var r = this.properties ? this.properties.statnaam + ": " : "";
    if (this.series.tooltipOptions.shared) {
        var l = this
          , s = "<span><b>" + r + "</b><br/>";
        return this.series.chart.series.forEach(function(o) {
            if (o.options.isSerie) {
                var n = o.data.filter(function(e) {
                    if (e.statcode === l.properties.statcode)
                        return e
                })[0];
                if (n) {
                    var a = "." === n.valueString ? e : i + Highcharts.cbsFormatNumber(n.valueString) + t;
                    s += o.name + ": <b>" + a + "</b><br/>"
                }
            }
        }),
        s += "</span>"
    }
    var d = "." === this.valueString ? e : i + Highcharts.cbsFormatNumber(this.valueString) + t;
    return r + "<b>" + d + "</b>"
}
function chartTooltipFormatter() {
    var e = '<span style="color:' + this.color + '">â– </span> ' + this.series.name + ": <b>"
      , t = Highcharts.cbsFormatNumber(this.yString);
    return this.series.tooltipOptions.valuePrefix && (e += this.series.tooltipOptions.valuePrefix),
    this.negative && this.series.chart.options.barType && this.series.chart.options.barType.negative && (t = t.substring(1)),
    e += t,
    this.series.tooltipOptions.valueSuffix && (e += this.series.tooltipOptions.valueSuffix),
    e += "</b><br/>"
}
function bubbleAxisFormatter() {
    if (!(void 0 === this.chart.series || this.chart.series.length <= 0)) {
        var e = this.chart.series.map(function(e) {
            if (void 0 === e.options.isSerie || e.options.isSerie === !0)
                return e.visible
        }).indexOf(!0);
        if (this.isDataClass && e >= 0 && void 0 !== this.chart.series[e].points) {
            var t = this.chart.series[e].data.map(function(e) {
                return e
            }).filter(function(e) {
                return void 0 !== e.value && null !== e.value && 0 !== e.value && void 0 !== e.marker && e.marker.radius
            }).sort(function(e, t) {
                return e.value - t.value
            });
            if (t.length < 1)
                return;
            var i = this.chart.tooltip.options.valuePrefix
              , o = this.chart.tooltip.options.valueSuffix
              , n = function(e, t) {
                var i;
                if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(e))
                    return i = e.substring(1).split(""),
                    3 === i.length && (i = [i[0], i[0], i[1], i[1], i[2], i[2]]),
                    i = "0x" + i.join(""),
                    "rgba(" + [i >> 16 & 255, i >> 8 & 255, 255 & i].join(",") + "," + t + ")";
                throw new Error("Bad Hex")
            }
              , a = function(e, t, i, o) {
                e.color = o,
                e.legendSymbol.attr("x", i - t),
                e.legendSymbol.attr("y", 0),
                e.legendItem.attr("x", 2 * i + 12);
                var a = 2 * t;
                e.legendSymbol.attr("width", a),
                e.legendSymbol.attr("height", a),
                e.legendSymbol.attr("rx", t),
                e.legendSymbol.attr("ry", t),
                e.legendSymbol.attr("fill", n(o, 1)),
                e.legendSymbol.element.setAttribute("stroke", o),
                e.legendGroup.element.onclick = null
            }
              , r = this.chart.options.plotOptions.mapbubble
              , l = this.chart.options.mapbubble.legend.minValue ? this.chart.options.mapbubble.legend.minValue : t[0].valueString
              , s = r.minSize / 2
              , d = this.chart.options.mapbubble.legend.maxValue ? this.chart.options.mapbubble.legend.maxValue : t[t.length - 1].valueString
              , h = r.maxSize / 2
              , c = this.chart.options.colorAxis.dataClasses.length
              , p = c - 1
              , u = 2 * h;
            this.chart.legend.itemHeight = u,
            this.chart.legend.symbolHeight = u,
            this.chart.legend.symbolWidth = u;
            var g = "";
            g = 0 === this.index ? d : this.index === p ? l : this.chart.options.mapbubble.legend.middleValue ? this.chart.options.mapbubble.legend.middleValue : Math.floor((parseFloat(l.replace(/,/g, ".")) + parseFloat(d.replace(/,/g, "."))) / 2);
            var m = h - s
              , b = m / (c - 1)
              , f = s + b * (c - 1 - this.index);
            a(this, f, h, t[0].color);
            var v = u * this.index
              , y = 16
              , x = v + 2 * f - y;
            this.legendItem.attr("transform", "translate(0," + x + ")"),
            this.legendSymbol.attr("transform", "translate(0," + v + ")");
            var G = Highcharts.cbsFormatNumber(g.toString());
            i && (G = "".concat(i, G));
            var M = this.chart.options.selectedCultureId;
            return 0 === this.index && (G += "en" === M ? " or more" : " of meer"),
            this.index === p && (G += "en" === M ? " or less" : " of minder"),
            o && (G += " (" + o.trim() + ")"),
            G
        }
    }
}
function plotOptionsMapPointEventsSelect(e) {
    var t = e.target.series.points.filter(function(t) {
        if (t.statcode === e.target.statcode)
            return t
    });
    this.series.chart.tooltip.isHidden = !0,
    this.series.chart.tooltip.refresh(t[0]);
    var i = this.series.chart.container
      , o = i.firstChild;
    if (void 0 !== cbs.cloneToolTip && void 0 !== cbs.cloneTooltipText && void 0 !== o) {
        jQuery.contains(o, cbs.cloneToolTip) && o.removeChild(cbs.cloneToolTip);
        var n = cbs.cloneTooltipText.innerText;
        if (jQuery.contains(i, cbs.cloneTooltipText) && i.removeChild(cbs.cloneTooltipText),
        n == this.series.chart.tooltip.label.div.innerText)
            return cbs.cloneToolTip = void 0,
            void (cbs.cloneTooltipText = void 0)
    }
    cbs.cloneToolTip = this.series.chart.tooltip.label.element.cloneNode(!0),
    cbs.cloneTooltipText = this.series.chart.tooltip.label.div.cloneNode(!0),
    o.appendChild(cbs.cloneToolTip),
    i.appendChild(cbs.cloneTooltipText)
}
function plotOptionsMapPointEventsClick() {
    var e = this.series.chart.container
      , t = e.firstChild;
    if (void 0 !== cbs.cloneToolTip && void 0 !== cbs.cloneTooltipText && void 0 !== t) {
        jQuery.contains(t, cbs.cloneToolTip) && t.removeChild(cbs.cloneToolTip);
        var i = cbs.cloneTooltipText.innerText;
        if (jQuery.contains(e, cbs.cloneTooltipText) && e.removeChild(cbs.cloneTooltipText),
        i == this.series.chart.tooltip.label.div.innerText)
            return
    }
    cbs.cloneToolTip = this.series.chart.tooltip.label.element.cloneNode(!0),
    cbs.cloneTooltipText = this.series.chart.tooltip.label.div.cloneNode(!0),
    e.appendChild(cbs.cloneTooltipText),
    t.appendChild(cbs.cloneToolTip)
}
function plotOptionsPointEventsClick() {
    var e = this.chart.container
      , t = e.firstChild;
    if (void 0 !== cbs.cloneToolTip && void 0 !== cbs.cloneTooltipText && void 0 !== t) {
        jQuery.contains(t, cbs.cloneToolTip) && t.removeChild(cbs.cloneToolTip);
        var i = cbs.cloneTooltipText.innerText;
        if (jQuery.contains(e, cbs.cloneTooltipText) && e.removeChild(cbs.cloneTooltipText),
        i == this.chart.tooltip.label.div.innerText)
            return
    }
    cbs.cloneToolTip = this.chart.tooltip.label.element.cloneNode(!0),
    cbs.cloneTooltipText = this.chart.tooltip.label.div.cloneNode(!0),
    e.appendChild(cbs.cloneTooltipText),
    t.appendChild(cbs.cloneToolTip)
}
function mapConfig(e, t, i, o) {
    return {
        "accessibility--pointDescriptionFormatter": function(e) {
            return e.value
        },
        "chart--type": "map",
        "chart--mapType": "map",
        "chart--geoType": o,
        "chart--geoUrl": e,
        "chart--geoServiceCbsUrl": null,
        "chart--geoProperty": i.code,
        "chart--geoNameProperty": i.name,
        "chart--geoProperty--searchForRegionEnabled": !1,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "chart--animation": !1,
        "colorAxis--dataClassColor": "category",
        "colorAxis--dataClasses": [{
            to: 5.5,
            displayValueTo: "5,50"
        }, {
            from: 5.5,
            to: 10,
            displayValueFrom: "5,50",
            displayValueTo: "10"
        }, {
            from: 10,
            to: 50,
            displayValueFrom: "10",
            displayValueTo: "50"
        }, {
            from: 50,
            to: 100,
            displayValueFrom: "50",
            displayValueTo: "100"
        }, {
            from: 100,
            displayValueFrom: "100"
        }],
        "legend--labelFormatter": mapLegendLabelFormatter,
        "legend--layout": "vertical",
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--floating": !0,
        "legend--padding": 0,
        "legend--valueDecimals": 0,
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--symbolPadding": 10,
        "legend--itemMarginBottom": 6,
        "legend--squareSymbol": !1,
        "legend--itemStyle": {
            fontWeight: "normal",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "plotOptions--series--dataLabels--allowOverlap": !0,
        "plotOptions--series--color": "#F2F2F2",
        "plotOptions--map--allAreas": !0,
        "plotOptions--map--point--events--select": plotOptionsMapPointEventsSelect,
        "plotOptions--map--point--events--click": plotOptionsMapPointEventsClick,
        "plotOptions--map--borderWidth": t,
        "tooltip--pointFormatter": mapTooltipFormatter,
        "tooltip--useHTML": !0,
        "tooltip--shared": !1,
        "plotOptions--map--states--select--enabled": !1,
        "title--align": "left"
    }
}
function mapBubbleConfig(e, t, i, o, n) {
    return {
        "accessibility--pointDescriptionFormatter": function(e) {
            return e.value
        },
        "chart--type": "map",
        "chart--mapType": "mapbubble",
        "chart--geoUrl": e,
        "chart--geoType": n,
        "chart--geoServiceCbsUrl": null,
        "chart--geoProperty": i.code,
        "chart--geoNameProperty": i.name,
        "chart--geoProperty--searchForRegionEnabled": !1,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "chart--events--load": function() {
            this.options.chart.forExport && this.legend.update()
        },
        "chart--animation": !1,
        "chart--className": o,
        "colorAxis--dataClasses": [{
            index: 0,
            from: 0,
            to: 0
        }, {
            index: 1,
            from: 1,
            to: 1
        }, {
            index: 2,
            from: 2,
            to: 2
        }],
        "legend--layout": "vertical",
        "legend--verticalAlign": "bottom",
        "legend--align": "left",
        "legend--itemStyle": {
            fontWeight: "normal",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--useHTML": !1,
        "legend--labelFormatter": bubbleAxisFormatter,
        "plotOptions--mapbubble--minSize": 15,
        "plotOptions--mapbubble--maxSize": 45,
        "plotOptions--mapbubble--sizeBy": "width",
        "plotOptions--mapbubble--className": "bubbleMapStyleSerie",
        "mapbubble--legend--minValue": null,
        "mapbubble--legend--middleValue": null,
        "mapbubble--legend--maxValue": null,
        "plotOptions--series--dataLabels--allowOverlap": !0,
        "plotOptions--series--displayNegative": !1,
        "plotOptions--series--zThreshold": 1,
        "plotOptions--map--allAreas": !0,
        "plotOptions--map--borderWidth": t,
        "plotOptions--mapbubble--marker--fillOpacity": .5,
        "plotOptions--mapbubble--marker--lineColor": "#FFFFFF",
        "plotOptions--mapbubble--marker--lineWidth": .5,
        "plotOptions--mapbubble--point--events--select": plotOptionsMapPointEventsSelect,
        "plotOptions--mapbubble--point--events--click": plotOptionsMapPointEventsClick,
        "tooltip--pointFormatter": mapTooltipFormatter,
        "tooltip--useHTML": !0,
        "tooltip--shared": !1,
        "plotOptions--mapbubble--states--select--enabled": !1,
        "title--align": "left",
        "responsive--rules": [{
            condition: {
                maxWidth: 600
            },
            chartOptions: {
                legend: {
                    floating: !0
                }
            }
        }]
    }
}
function lineConfig(e, t) {
    var i = {
        "chart--type": e,
        "plotOptions--series--pointPlacement": null,
        "chart--polar": !1,
        "chart--marginBottom": 180,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "chart--animation": !1,
        "accessibility--pointDescriptionFormatter": function(e) {
            return e.value
        },
        "accessibility--enabled": !0,
        "title--align": "left",
        "title--margin": 35,
        "subtitle--align": "left",
        "xAxis--drawHorizontalBorders": !1,
        "xAxis--lineColor": "#666666",
        "xAxis--lineWidth": 1,
        "xAxis--tickColor": "#C6C6C6",
        "xAxis--tickLength": 9,
        "xAxis--title--align": "high",
        "xAxis--title--style": {
            color: "#000000"
        },
        "xAxis--title--useHTML": !0,
        "xAxis--title--x": -12,
        "xAxis--labels--y": 30,
        "xAxis--labels--autoRotation": !1,
        "xAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "xAxis--startOnTick": !1,
        "xAxis--showFirstLabel": !0,
        "xAxis--endOnTick": !1,
        "xAxis--showLastLabel": !0,
        "xAxis--tickmarkPlacement": "on",
        "yAxis--lineColor": "#666666",
        "yAxis--lineWidth": 0,
        "yAxis--tickColor": "#C6C6C6",
        "yAxis--tickLength": 9,
        "yAxis--title--text": null,
        "yAxis--title--useHTML": !0,
        "yAxis--gridLineColor": "#666666",
        "yAxis--gridLineWidth": .25,
        "yAxis--showFirstLabel": !0,
        "yAxis--showLastLabel": !0,
        "yAxis--tickmarkPlacement": "on",
        "yAxis--gridLineInterpolation": null,
        "yAxis--labels--enabled": !0,
        "yAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "yAxis--endOnTick": !0,
        "yAxis--startOnTick": !0,
        "yAxis--labels--formatter": cbs.exportable.yAxisLabelFormatter,
        "yAxis--plotLines": [{
            value: "0",
            width: 2,
            color: "#666666",
            zIndex: 0
        }],
        "yAxis--softMin": 0,
        "legend--enabled": !0,
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--padding": 0,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolPadding": 10,
        "legend--itemDistance": 25,
        "legend--squareSymbol": !1,
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--itemMarginBottom": 6,
        "legend--useHTML": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions-series-marker--enabled": !1,
        "plotOptions--series--lineWidth": 1.5,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--enabled": !0,
        "tooltip--shared": !0,
        "tooltip--followPointer": !0,
        "tooltip--backgroundColor": "white",
        "tooltip--useHTML": !0,
        credits: {
            enabled: !1
        }
    };
    return t && (i["series[0]--type"] = t,
    i["series[0]--zIndex"] = -100),
    i
}
function areaConfig(e) {
    return {
        "chart--type": "area",
        "plotOptions-series--stacking": e,
        "plotOptions--series--pointPlacement": null,
        "chart--polar": !1,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "chart--animation": !1,
        "accessibility--pointDescriptionFormatter": function(e) {
            return e.value
        },
        "accessibility--enabled": !0,
        "title--align": "left",
        "title--margin": 35,
        "subtitle--align": "left",
        "xAxis--drawHorizontalBorders": !1,
        "xAxis--lineColor": "#666666",
        "xAxis--lineWidth": 1,
        "xAxis--tickColor": "#C6C6C6",
        "xAxis--tickLength": 9,
        "xAxis--title--align": "high",
        "xAxis--title--style": {
            color: "#000000"
        },
        "xAxis--title--useHTML": !0,
        "xAxis--title--x": -12,
        "xAxis--labels--y": 30,
        "xAxis--labels--autoRotation": !1,
        "xAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "xAxis--startOnTick": !1,
        "xAxis--showFirstLabel": !0,
        "xAxis--endOnTick": !1,
        "xAxis--showLastLabel": !0,
        "xAxis--tickmarkPlacement": "on",
        "yAxis--lineColor": "#666666",
        "yAxis--lineWidth": 0,
        "yAxis--tickColor": "#C6C6C6",
        "yAxis--tickLength": 9,
        "yAxis--title--text": null,
        "yAxis--title--useHTML": !0,
        "yAxis--gridLineColor": "#666666",
        "yAxis--gridLineWidth": .25,
        "yAxis--showFirstLabel": !0,
        "yAxis--showLastLabel": !0,
        "yAxis--endOnTick": !0,
        "yAxis--startOnTick": !0,
        "yAxis--tickmarkPlacement": "on",
        "yAxis--gridLineInterpolation": null,
        "yAxis--labels--enabled": !0,
        "yAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "yAxis--labels--formatter": cbs.exportable.yAxisLabelFormatter,
        "yAxis--reversedStacks": !1,
        "yAxis--plotLines": [{
            value: "0",
            width: 2,
            color: "#666666",
            zIndex: 8
        }],
        "legend--enabled": !0,
        "legend--reversed": !1,
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--padding": 0,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolPadding": 10,
        "legend--itemDistance": 25,
        "legend--squareSymbol": !1,
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--itemMarginBottom": 6,
        "legend--useHTML": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions--area--lineColor": "#ffffff",
        "plotOptions-series-marker--enabled": !1,
        "plotOptions-series--lineWidth": 2,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--enabled": !0,
        "tooltip--shared": !0,
        "tooltip--followPointer": !0,
        "tooltip--backgroundColor": "white",
        "tooltip--useHTML": !0,
        credits: {
            enabled: !1
        }
    }
}
function barConfig(e, t, i) {
    var o = "bar"
      , n = cbs.renderer.itemMargin
      , a = 42 + n
      , r = {
        "chart--type": o,
        "chart--inverted": !0,
        "chart--spacingLeft": a,
        "chart--marginRight": 45,
        "chart--animation": !1,
        "plotOptions-series--stacking": e,
        "plotOptions--series--pointPlacement": null,
        "plotOptions--bar--pointPadding": .04,
        "plotOptions--bar--groupPadding": .08,
        "plotOptions--bar--borderWidth": 1,
        "chart--polar": !1,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "title--align": "left",
        "title--x": n - a,
        "subtitle--align": "left",
        "xAxis--drawHorizontalBorders": !1,
        "xAxis--lineColor": "#666666",
        "xAxis--lineWidth": 1,
        "xAxis--tickColor": "#C6C6C6",
        "xAxis--tickLength": 0,
        "xAxis--title--align": "high",
        "xAxis--title--style": {
            color: "#000000"
        },
        "xAxis--title--useHTML": !0,
        "xAxis--title--rotation": 0,
        "xAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "xAxis--tickmarkPlacement": "between",
        "xAxis--startOnTick": !1,
        "xAxis--showFirstLabel": !0,
        "xAxis--endOnTick": !1,
        "xAxis--showLastLabel": !0,
        "yAxis--lineColor": "#666666",
        "yAxis--lineWidth": 0,
        "yAxis--tickColor": "#C6C6C6",
        "yAxis--tickLength": 9,
        "yAxis--title--text": null,
        "yAxis--title--useHTML": !0,
        "yAxis--gridLineColor": "#666666",
        "yAxis--gridLineWidth": .25,
        "yAxis--showFirstLabel": !0,
        "yAxis--showLastLabel": !0,
        "yAxis--endOnTick": !0,
        "yAxis--startOnTick": !0,
        "yAxis--tickmarkPlacement": "on",
        "yAxis--gridLineInterpolation": null,
        "yAxis--labels--enabled": !0,
        "yAxis--labels--autoRotation": !1,
        "yAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "yAxis--labels--formatter": cbs.exportable.yAxisLabelFormatter,
        "yAxis--reversedStacks": !1,
        "yAxis--plotLines": [{
            value: "0",
            width: 2,
            color: "#666666",
            zIndex: 4
        }],
        "legend--align": "left",
        "legend--reversed": !1,
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--padding": 0,
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--squareSymbol": !1,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolPadding": 10,
        "legend--itemDistance": 25,
        "legend--itemMarginBottom": 6,
        "legend--useHTML": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions--series--maxPointWidth": 60,
        "tooltip--shared": !0,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--followPointer": !0,
        "tooltip--useHTML": !0,
        credits: {
            enabled: !1
        }
    };
    return null == e ? (r["plotOptions--bar--borderWidth"] = .5,
    "percent" == i && (r["yAxis--max"] = "100",
    r["yAxis--endOnTick"] = !0)) : "percent" == e && (r["yAxis--max"] = "100",
    r["yAxis--endOnTick"] = !0),
    "negative" == t && (r["barType--negative"] = !0),
    r
}
function columnConfig(e, t, i) {
    var o = "column"
      , n = {
        "chart--type": o,
        "chart--inverted": !1,
        "chart--animation": !1,
        "plotOptions-series--stacking": e,
        "plotOptions--series--pointPlacement": null,
        "plotOptions--column--pointPadding": .04,
        "plotOptions--column--groupPadding": .08,
        "plotOptions--column--borderWidth": 1,
        "chart--polar": !1,
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "title--align": "left",
        "title--margin": 35,
        "subtitle--align": "left",
        "xAxis--drawHorizontalBorders": !1,
        "xAxis--lineColor": "#666666",
        "xAxis--lineWidth": 1,
        "xAxis--tickColor": "#C6C6C6",
        "xAxis--tickLength": 0,
        "xAxis--title--align": "high",
        "xAxis--title--style": {
            color: "#000000"
        },
        "xAxis--title--useHTML": !0,
        "xAxis--title--x": -12,
        "xAxis--labels--autoRotation": !1,
        "xAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "xAxis--tickmarkPlacement": "between",
        "xAxis--startOnTick": !1,
        "xAxis--showFirstLabel": !0,
        "xAxis--endOnTick": !1,
        "xAxis--showLastLabel": !0,
        "yAxis--lineColor": "#666666",
        "yAxis--lineWidth": 0,
        "yAxis--tickColor": "#C6C6C6",
        "yAxis--tickLength": 9,
        "yAxis--title--text": null,
        "yAxis--title--useHTML": !0,
        "yAxis--gridLineColor": "#666666",
        "yAxis--gridLineWidth": .25,
        "yAxis--showFirstLabel": !0,
        "yAxis--showLastLabel": !0,
        "yAxis--endOnTick": !0,
        "yAxis--startOnTick": !0,
        "yAxis--tickmarkPlacement": "on",
        "yAxis--gridLineInterpolation": null,
        "yAxis--labels--enabled": !0,
        "yAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "yAxis--labels--formatter": cbs.exportable.yAxisLabelFormatter,
        "yAxis--reversedStacks": !1,
        "yAxis--plotLines": [{
            value: "0",
            width: 2,
            color: "#666666",
            zIndex: 4
        }],
        "legend--enabled": !0,
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--padding": 0,
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--squareSymbol": !1,
        "legend--reversed": !1,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolPadding": 10,
        "legend--itemDistance": 25,
        "legend--itemMarginBottom": 6,
        "legend--useHTML": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions--series--maxPointWidth": 60,
        "plotOptions--series--marker--enabled": !1,
        "tooltip--shared": !0,
        "tooltip--followPointer": !0,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--useHTML": !0,
        credits: {
            enabled: !1
        }
    };
    return t && (n["series[0]--type"] = t,
    n["series[0]--zIndex"] = 100,
    n["series[0]--lineWidth"] = 1.5),
    null == e ? (n["legend--reversed"] = !1,
    n["plotOptions--column--borderWidth"] = .5,
    "percent" == i && (n["yAxis--max"] = "100",
    n["yAxis--endOnTick"] = !0)) : "percent" == e && (n["yAxis--max"] = "100",
    n["yAxis--endOnTick"] = !0),
    n
}
function polarConfig() {
    var e = "line";
    return {
        "chart--type": e,
        "chart--polar": !0,
        "chart--inverted": !1,
        "chart--animation": !1,
        "plotOptions-series--stacking": null,
        "plotOptions--series--pointPlacement": "on",
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "title--align": "left",
        "subtitle--align": "left",
        "xAxis--lineColor": "#666666",
        "xAxis--lineWidth": 0,
        "xAxis--tickColor": "#666666",
        "xAxis--tickLength": 9,
        "xAxis--labels--style": {
            color: "#000000"
        },
        "xAxis--title--align": "high",
        "xAxis--title--style": {
            color: "#000000"
        },
        "xAxis--title--useHTML": !0,
        "xAxis--tickmarkPlacement": "on",
        "pane--startAngle": 90,
        "yAxis--lineColor": "#666666",
        "yAxis--lineWidth": 0,
        "yAxis--tickColor": "#666666",
        "yAxis--tickLength": 9,
        "yAxis--gridLineColor": "#666666",
        "yAxis--gridLineWidth": .25,
        "yAxis--showFirstLabel": !0,
        "yAxis--showLastLabel": !1,
        "yAxis--gridLineInterpolation": "polygon",
        "yAxis--labels--enabled": !0,
        "yAxis--labels--style": {
            color: "#000000",
            fontSize: "11px"
        },
        "yAxis--labels--align": "left",
        "yAxis--labels--x": 2,
        "yAxis--labels--y": 10,
        "yAxis--labels--formatter": cbs.exportable.yAxisLabelFormatter,
        "legend--enabled": !0,
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--y": -40,
        "legend--padding": 0,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolHeight": 1,
        "legend--itemMarginBottom": 6,
        "legend--useHTML": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions--series--lineWidth": 1.5,
        "tooltip--shared": !0,
        "tooltip--followPointer": !0,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--useHTML": !0,
        credits: {
            enabled: !1
        }
    }
}
function pieConfig() {
    return {
        "chart--type": "pie",
        "chart--events--render": function() {
            cbs.renderer.renderAdditionalElements(this)
        },
        "chart--animation": !1,
        "title--align": "left",
        "title--margin": -12,
        "subtitle--align": "left",
        "legend--enabled": !0,
        "legend--useHTML": !0,
        "legend--align": "left",
        "legend--verticalAlign": "bottom",
        "legend--padding": 0,
        "legend--itemStyle": {
            fontWeight: "normal",
            color: "#000000",
            fontSize: "12px"
        },
        "legend--itemHiddenStyle": {
            color: "#757575"
        },
        "legend--symbolRadius": 0,
        "legend--symbolHeight": 10,
        "legend--symbolWidth": 25,
        "legend--squareSymbol": !1,
        "legend--symbolPadding": 10,
        "legend--itemDistance": 25,
        "legend--itemMarginBottom": 6,
        "plotOptions--pie--shadow": !1,
        "plotOptions--pie--allowPointSelect": !0,
        "plotOptions--series--events--click": plotOptionsPointEventsClick,
        "plotOptions--series--lineWidth": 1.5,
        "plotOptions--series--size": "60%",
        "plotOptions--series--innerSize": "40%",
        "plotOptions--series--showInLegend": !0,
        "plotOptions--series--dataLabels--enabled": !0,
        "plotOptions--series--dataLabels--connectorColor": "#000000",
        "plotOptions--series--dataLabels--connectorWidth": 0,
        "plotOptions--series--dataLabels--softConnector": !1,
        "plotOptions--series--dataLabels--connectorPadding": 0,
        "plotOptions--series--dataLabels--distance": 12,
        "tooltip--pointFormatter": chartTooltipFormatter,
        "tooltip--shared": !0,
        "tooltip--useHTML": !0,
        "tooltip--followPointer": !0,
        credits: {
            enabled: !1
        }
    }
}
var highed = {
    schemas: {},
    meta: {
        chartTemplates: {},
        fonts: []
    },
    plugins: {},
    services: {},
    resources: {
        logo: '<?xml version="1.0" encoding="utf-8"?><!-- Generator: Adobe Illustrator 16.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" id="Warstwa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"     width="425.197px" height="141.732px" viewBox="0 0 425.197 141.732" enable-background="new 0 0 425.197 141.732"     xml:space="preserve"><g>    <path fill="#eeeaea" d="M138.475,69.712h-17.02v9.77c0,1.037-0.813,1.851-1.849,1.851c-1.037,0-1.85-0.813-1.85-1.851V57.725        c0-1.037,0.813-1.852,1.85-1.852c1.036,0,1.849,0.813,1.849,1.852v8.436h17.02v-8.436c0-1.037,0.814-1.852,1.85-1.852        c1.036,0,1.85,0.813,1.85,1.852v21.754c0,1.037-0.814,1.851-1.85,1.851c-1.036,0-1.85-0.813-1.85-1.851V69.712z"/>    <path fill="#eeeaea" d="M156.973,79.479c0,1.037-0.814,1.851-1.852,1.851s-1.852-0.813-1.852-1.851V57.725        c0-1.037,0.814-1.852,1.852-1.852s1.852,0.813,1.852,1.852V79.479z"/>    <path fill="#eeeaea" d="M184.125,70.378c0-1.036,0.814-1.774,1.852-1.774c1.034,0,1.852,0.813,1.852,1.849v5.847        c0,0.444-0.226,1.109-0.595,1.479c-2.367,2.369-5.549,3.773-9.176,3.773c-7.178,0-12.949-5.771-12.949-12.948        c0-7.181,5.771-12.949,12.949-12.949c3.627,0,6.809,1.405,9.176,3.771c0.738,0.74,0.738,1.852,0,2.592        c-0.741,0.738-1.922,0.813-2.663,0.072c-1.702-1.699-3.923-2.736-6.513-2.736c-5.104,0-9.249,4.144-9.249,9.25        c0,5.104,4.146,9.25,9.249,9.25c2.367,0,4.441-0.813,6.067-2.222V70.378z"/>    <path fill="#eeeaea" d="M218.162,69.712h-17.019v9.77c0,1.037-0.817,1.851-1.852,1.851c-1.037,0-1.849-0.813-1.849-1.851V57.725        c0-1.037,0.812-1.852,1.849-1.852c1.034,0,1.852,0.813,1.852,1.852v8.436h17.019v-8.436c0-1.037,0.813-1.852,1.849-1.852        c1.037,0,1.852,0.813,1.852,1.852v21.754c0,1.037-0.813,1.851-1.852,1.851c-1.033,0-1.849-0.813-1.849-1.851V69.712z"/>    <path fill="#eeeaea" d="M242.948,81.552c-7.182,0-12.949-5.771-12.949-12.948c0-7.181,5.77-12.949,12.949-12.949        c3.627,0,6.809,1.405,9.176,3.771c0.738,0.74,0.738,1.852,0,2.592c-0.741,0.738-1.925,0.813-2.666,0.072        c-1.699-1.699-3.92-2.736-6.51-2.736c-5.106,0-9.249,4.144-9.249,9.25c0,5.104,4.143,9.25,9.249,9.25        c2.59,0,4.884-0.962,6.586-2.664c0.74-0.741,1.849-0.741,2.59,0c0.738,0.738,0.738,1.85,0,2.589        C249.756,80.146,246.574,81.552,242.948,81.552z"/>    <path fill="#eeeaea" d="M281.569,69.712h-17.02v9.77c0,1.037-0.813,1.851-1.852,1.851c-1.034,0-1.85-0.813-1.85-1.851V57.725        c0-1.037,0.813-1.852,1.85-1.852c1.035,0,1.852,0.813,1.852,1.852v8.436h17.02v-8.436c0-1.037,0.813-1.852,1.853-1.852        c1.034,0,1.849,0.813,1.849,1.852v21.754c0,1.037-0.813,1.851-1.849,1.851c-1.037,0-1.853-0.813-1.853-1.851V69.712z"/>    <path fill="#eeeaea" d="M308.758,57.503l10.507,20.646c0.223,0.443,0.445,1.036,0.445,1.554c0,1.036-0.668,1.628-1.702,1.628        c-0.741,0-1.481-0.222-2.001-1.258l-3.253-6.438h-13.547l-3.183,6.438c-0.517,1.036-1.256,1.258-1.994,1.258        c-1.037,0-1.702-0.593-1.702-1.628c0-0.519,0.22-1.109,0.442-1.554l10.506-20.646c0.668-1.405,2.002-1.628,2.74-1.628        C306.76,55.875,308.09,56.096,308.758,57.503z M300.985,70.083h9.988l-4.957-9.99L300.985,70.083z"/>    <path fill="#eeeaea" d="M340.159,56.023c4.441,0,8.064,3.255,8.064,7.694c0,3.923-2.813,6.884-6.511,7.549l6.731,7.104        c0.664,0.666,0.889,1.85,0.146,2.516c-0.736,0.741-2.145,0.521-2.886-0.296l-8.729-9.176h-6.511v8.142        c0,1.034-0.815,1.774-1.854,1.774c-1.033,0-1.85-0.813-1.85-1.851V57.873c0-1.035,0.814-1.85,1.85-1.85H340.159z M330.468,59.575        v8.288h9.691c2.59,0,4.367-1.776,4.367-4.146c0-2.365-1.777-4.144-4.367-4.144L330.468,59.575L330.468,59.575z"/>    <path fill="#eeeaea" d="M365.047,59.575h-9.249c-1.033,0-1.849-0.74-1.849-1.776c0-1.034,0.813-1.773,1.849-1.773h22.201        c1.037,0,1.852,0.74,1.852,1.773c0,1.037-0.813,1.776-1.852,1.776h-9.249V79.48c0,1.037-0.813,1.851-1.849,1.851        c-1.037,0-1.854-0.813-1.854-1.851V59.575z"/>    <path fill="#eeeaea" d="M388.724,66.013c0-9.25,5.698-10.359,9.99-10.359c1.035,0,1.85,0.813,1.85,1.85        c0,1.036-0.813,1.851-1.85,1.851c-3.479,0-6.29,0.738-6.29,6.66v5.18c0,9.25-5.698,10.358-9.989,10.358        c-1.035,0-1.85-0.813-1.85-1.85s0.814-1.85,1.85-1.85c3.479,0,6.289-0.74,6.289-6.66V66.013z"/></g><polygon fill="#8087E8" points="67.981,30.52 56.757,56.73 42.009,91.171 76.301,76.685 94.465,69.013 "/><polygon fill="#30426B" points="73.7,62.25 76.302,76.685 94.466,69.013 "/><polygon fill="#6699A1" points="67.981,30.52 73.7,62.251 94.465,69.013 "/><polygon fill="#78758C" points="73.7,62.25 94.466,69.013 56.758,56.729 42.009,91.171 76.302,76.685 "/><polygon fill="#A3EDBA" points="42.009,91.171 56.757,56.73 26.442,46.855 "/><polygon fill="#6699A1" points="76.302,76.685 79.628,95.13 94.466,69.013 "/><polygon fill="#8087E8" points="67.981,30.52 56.757,56.73 73.7,62.251 "/></svg>'
    },
    download: function(e, t, i) {
        if ("function" == typeof window.saveAs || "object" == typeof window.saveAs)
            return void highed.fileSave(e, t, i);
        var o = highed.dom.cr("a");
        i = i || "application/octet-stream",
        o.download = e || "unkown",
        o.href = "data:" + i + "," + encodeURIComponent(t),
        highed.dom.ap(document.body, o),
        o.click(),
        document.body.removeChild(o)
    },
    fileSave: function(e, t, i) {
        var o = new Blob([t],{
            type: i
        });
        saveAs(o, e)
    },
    clearObj: function(e) {
        Object.keys(e).forEach(function(t) {
            delete e[t]
        })
    },
    ajax: function(e) {
        function t() {
            try {
                n.send(JSON.stringify(i.data))
            } catch (e) {
                n.send(i.data || !0)
            }
        }
        var i = highed.merge({
            url: !1,
            type: "GET",
            dataType: "json",
            success: !1,
            error: !1,
            data: {},
            autoFire: !0
        }, e)
          , o = {
            json: "application/json",
            xml: "application/xml",
            text: "text/plain",
            octet: "application/octet-stream"
        }
          , n = new XMLHttpRequest
          , a = highed.events();
        return !!i.url && (n.open(i.type, i.url, !0),
        n.setRequestHeader("Content-Type", o[i.dataType] || o.text),
        n.onreadystatechange = function() {
            if (a.emit("ReadyStateChange", n.readyState, n.status),
            4 === n.readyState && 200 === n.status)
                if ("json" === i.dataType)
                    try {
                        var e = JSON.parse(n.responseText);
                        highed.isFn(i.success) && i.success(e, n.responseURL),
                        a.emit("OK", e)
                    } catch (e) {
                        highed.isFn(i.error) && i.error(e.toString(), n.responseText),
                        a.emit("Error", e.toString(), n.status)
                    }
                else
                    highed.isFn(i.success) && i.success(n.responseText, n.responseURL),
                    a.emit("OK", n.responseText);
            else
                4 === n.readyState && (a.emit("Error", n.status, n.statusText),
                highed.isFn(i.error) && i.error(n.status, n.statusText))
        }
        ,
        i.autoFire && t(),
        {
            on: a.on,
            fire: t,
            request: n
        })
    },
    uuid: function() {
        var e, t = (new Date).getTime();
        return window.performance && "function" == typeof window.performance.now && (t += window.performance.now()),
        e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(e) {
            var i = (t + 16 * Math.random()) % 16 | 0;
            return t = Math.floor(t / 16),
            ("x" === e ? i : 3 & i | 8).toString(16)
        })
    },
    arrToObj: function(e) {
        var t = {};
        return !highed.isArr(e) && !highed.isBasic(e) || e === !1 ? e : (highed.isStr(e) && (e = e.split(" ")),
        e.forEach(function(e) {
            t[e] = !0
        }),
        t)
    },
    uncamelize: function(e) {
        var t = "";
        if (!e)
            return e;
        if (e.length < 0 || !e)
            return e;
        for (var i = 0; i < e.length; i++)
            e[i] === e[i].toUpperCase() && (e[i + 1] && e[i + 1] === e[i + 1].toUpperCase() || e[i - 1] && e[i - 1] === e[i - 1].toUpperCase() || (t += " ")),
            t += e[i];
        return t[0].toUpperCase() + t.substr(1)
    },
    clamp: function(e, t, i) {
        return i < e ? e : i > t ? t : i
    },
    hexToRgb: function(e) {
        if (0 === e.indexOf("rgba"))
            return e = e.substr(5).replace(")", "").split(","),
            {
                r: parseInt(e[0], 10),
                g: parseInt(e[1], 10),
                b: parseInt(e[2], 10),
                a: parseInt(e[3], 10)
            };
        4 === e.length && (e += e[e.length - 1],
        e += e[e.length - 1],
        e += e[e.length - 1]);
        var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
        return t ? {
            r: parseInt(t[1], 16),
            g: parseInt(t[2], 16),
            b: parseInt(t[3], 16)
        } : {
            r: 0,
            g: 0,
            b: 0
        }
    },
    invertHexColor: function(e) {
        var t = highed.hexToRgb(e)
          , i = 0;
        return t.r = 255 - t.r,
        t.g = 255 - t.g,
        t.b = 255 - t.b,
        i = t.r << 16,
        i |= t.g << 8,
        i |= t.b,
        "#" + i
    },
    getContrastedColor: function(e) {
        var t = highed.hexToRgb(e)
          , i = (t.r + t.g + t.b) / 3;
        return i > 150 ? "#000" : "#FFF"
    },
    toBool: function(e) {
        return "true" === e || e === !0 || "on" === e
    },
    setAttr: function(e, t, i, o) {
        var n = e;
        if (n) {
            if (highed.isArr(e))
                return void e.forEach(function(e) {
                    highed.setAttr(e, t, i, o)
                });
            t = t.replace(/\-\-/g, ".").replace(/\-/g, ".").split("."),
            t.forEach(function(e, a) {
                if (a === t.length - 1)
                    n[e] = i;
                else if ("undefined" == typeof n[e])
                    n = n[e] = {};
                else if (n = n[e],
                highed.isArr(n)) {
                    if (o > n.length - 1)
                        for (var r = n.length; r <= o; r++)
                            n.push({});
                    o >= 0 && (n = n[o])
                }
            })
        }
    },
    getAttr: function(e, t, i) {
        var o = e
          , n = !1;
        return !!o && (highed.isArr(e) ? (e.forEach(function(e) {
            n = highed.getAttr(e, t)
        }),
        n) : (t = t.replace(/\-\-/g, ".").replace(/\-/g, ".").split("."),
        t.forEach(function(e, a) {
            a === t.length - 1 ? "undefined" != typeof o && (n = o[e]) : "undefined" == typeof o[e] ? o = o[e] = {} : (o = o[e],
            highed.isArr(o) && i >= 0 && i < o.length && (o = o[i]))
        }),
        n))
    },
    merge: function(e, t) {
        return e && t ? (Object.keys(t).forEach(function(i) {
            highed.isNull(t[i]) || highed.isBasic(t[i]) ? e[i] = t[i] : highed.isArr(t[i]) ? (e[i] = [],
            t[i].forEach(function(t) {
                highed.isNull(t) || highed.isBasic(t) ? e[i].push(t) : e[i].push(highed.merge(highed.isArr(t) ? [] : {}, t))
            })) : t[i].tagName && t[i].appendChild && t[i].removeChild && t[i].style ? e[i] = t[i] : (e[i] = e[i] || {},
            highed.merge(e[i], t[i]))
        }),
        e) : e || t
    },
    isNull: function(e) {
        return "undefined" == typeof e || null === e
    },
    isStr: function(e) {
        return "string" == typeof e || e instanceof String
    },
    isNum: function(e) {
        return !isNaN(parseFloat(e)) && isFinite(e)
    },
    isFn: function(e) {
        return e && "function" == typeof e || e instanceof Function
    },
    isArr: function(e) {
        return !highed.isNull(e) && e.constructor.toString().indexOf("Array") > -1
    },
    isBool: function(e) {
        return e === !0 || e === !1
    },
    isBasic: function(e) {
        return !highed.isArr(e) && (highed.isStr(e) || highed.isNum(e) || highed.isBool(e) || highed.isFn(e))
    }
};
if (function() {
    function e() {
        a || (document.body ? (a = !0,
        n.forEach(function(e) {
            e()
        })) : window.setTimeout(e, 100))
    }
    function t() {
        var e = !1;
        return function(t) {
            (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0, 4))) && (e = !0)
        }(navigator.userAgent || navigator.vendor || window.opera),
        e
    }
    var i = ["error", "warn", "notice", "verbose"]
      , o = 0
      , n = []
      , a = !1
      , r = {}
      , l = !1
      , s = {
        codeMirrorTheme: "neo",
        helpURL: "http://www.highcharts.com/products/highcharts-editor",
        defaultLanguage: "en",
        includeCDNInExport: !0,
        stickyChartProperties: {}
    };
    e(),
    highed.option = function(e, t) {
        if (highed.isBasic(e)) {
            if (s[e])
                return t && (s[e] = t),
                s[e]
        } else
            highed.merge(s, e);
        return !1
    }
    ,
    highed.options = function(e) {
        Object.keys(e || {}).forEach(function(t) {
            highed.option(t, e[t])
        })
    }
    ,
    highed.serializeEditorOptions = function() {
        return highed.merge({}, s)
    }
    ,
    highed.ready = function(e) {
        highed.isFn(e) && (a ? e() : n.push(e))
    }
    ,
    highed.log = function(e) {
        var t = Array.prototype.slice.call(arguments);
        t.splice(0, 1),
        e <= o && console.log.apply(void 0, [i[e - 1] + ":"].concat(t))
    }
    ,
    highed.setLogLevel = function(e) {
        e <= i.length && (o = e)
    }
    ,
    highed.include = function(e, t, i) {
        function o() {
            return n < e.length - 1 && highed.include(e[++n], o),
            highed.isFn(t) && t()
        }
        var n;
        return highed.isArr(e) ? (n = -1,
        o()) : r[e] ? (highed.log(3, "script already included, skipping:", e),
        t()) : (highed.log(3, "including script", e),
        r[e] = !0,
        i || e.lastIndexOf(".css") === e.length - 4 ? (n = document.createElement("link"),
        n.rel = "stylesheet",
        n.type = "text/css",
        n.href = e,
        n.onload = t) : (n = document.createElement("script"),
        n.src = e,
        n.onload = t),
        void document.head.appendChild(n))
    }
    ,
    highed.onPhone = function() {
        return l
    }
    ,
    l = t(),
    highed.ready(function() {
        highed.include("https://maxcdn.bootstrapcdn.com/font-awesome/4.6.0/css/font-awesome.min.css"),
        highed.include("https://fonts.googleapis.com/css?family=Roboto:400,300,100,700|Source Sans:400,300,100", !1, !0)
    })
}(),
function() {
    var e = highed.option("defaultLanguage")
      , t = {};
    highed.getLocalizedStr = function(i) {
        if (t[e]) {
            if (t[e][i])
                return t[e][i]
        } else if (t.en[i])
            return t.en[i];
        return "bad localized string: " + i
    }
    ,
    highed.getLocalizedStrFromLang = function(e, i) {
        if (t[i]) {
            if (t[i][e])
                return t[i][e]
        } else if (t.en[e])
            return t.en[e];
        return "bad localized string: " + e
    }
    ,
    highed.L = highed.getLocalizedStr,
    highed.installLanguage = function(e) {
        e && e.language && e.entries && (t[e.language] = e.entries)
    }
    ,
    highed.installLanguageFromURL = function(e, t) {
        highed.ajax({
            url: e,
            success: function(e) {
                if (e)
                    return highed.installLanguage(e) ? t && t(!1) : t && t(!0)
            },
            error: function(e) {
                return t && t(e)
            }
        })
    }
    ,
    highed.setLang = function(i) {
        return !!t[i] && (e = i,
        !0)
    }
}(),
highed.installLanguage({
    language: "en",
    entries: {
        confirmNewChart: "Are you sure you want to abandon the current chart and start over?",
        previewChart: "Preview Chart",
        "projectIcon.tooltip": "Project options",
        newChart: "New Chart",
        saveProject: "Save Project",
        loadProject: "Load Project",
        exportPNG: "Export as PNG",
        exportJPEG: "Export as JPEG",
        exportSVG: "Export as SVG",
        exportPDF: "Export as PDF",
        exportPNGPrint: "Export PNG for print",
        exportJPEGPrint: "Export JPEG for print",
        exportSVGPrint: "Export SVG for print",
        downloadJPEG: "Download JPEG image",
        downloadPDF: "Download PDF document",
        downloadPNG: "Download PNG image",
        downloadSVG: "Download SVG vector image",
        drillUpText: "Back to {series.name}",
        loading: "Loading...",
        noData: "No data to display",
        printChart: "Print chart",
        resetZoom: "Reset zoom",
        resetZoomTitle: "Reset zoom level 1:1",
        help: "Help",
        licenseInfo: "License Information",
        stepDone: "Done",
        stepStart: "Start",
        stepImport: "Import",
        stepTemplates: "Templates",
        stepCustomize: "Customize",
        stepExport: "Export",
        stepData: "Data",
        doneCaption: "Close & Generate Chart",
        dgDeleteRow: "Really delete the selected rows?",
        dgWithSelected: "With Selected Rows:",
        dgImportBtn: "IMPORT",
        dgExportBtn: "EXPORT",
        dgNewBtn: "NEW",
        dgAddRow: "ADD ROW",
        dgDataImported: "Data imported",
        dgDataImporting: "Importing data",
        dgNewCol: "New Column",
        dgSortAsc: "Sort Ascending",
        dgSortDec: "Sort Descending",
        dgSortAscMonth: "Sort as Month Names Ascending",
        dgSortDecMonth: "Sort as Month Names Decending",
        dgDelCol: "Delete Column",
        dgDelColConfirm: "Really delete the column?",
        dgInsColBefore: "Insert Column Before",
        dgInsColAfter: "Insert Column After",
        customizeSimple: "SIMPLE",
        customizeAdvanced: "ADVANCED",
        searchRegion: "Search for Region",
        "option.cat.title": "Titles",
        "option.subcat.titles": "Main titles",
        "option.cat.general": "General",
        "option.subcat.size": "Chart size",
        "option.subcat.interaction": "Chart Interaction",
        "option.cat.appearance": "Appearance",
        "option.subcat.fonts": "Fonts",
        "option.subcat.titlestyle": "Title Style",
        "option.subcat.seriescolors": "Series Colors",
        "option.subcat.chartarea": "Chart Area",
        "option.subcat.plotarea": "Plot Area",
        "option.cat.axes": "Axes",
        "option.subcat.axessetup": "Axes Setup",
        "option.subcat.xaxis": "X-Axis",
        "option.subcat.yaxis": "Y-Axis",
        "option.cat.series": "Data Series",
        "option.cat.labels": "Value Labels",
        "option.subcat.labels": "Value Labels",
        "option.cat.legend": "Legend",
        "option.cat.legendMapBubble": "Legend",
        "option.subcat.general": "General",
        "option.subcat.placement": "Placement",
        "option.subcat.legendappearance": "Appearance",
        "option.cat.tooltip": "Tooltip",
        "option.subcat.colorborder": "Color and Border",
        "option.cat.exporting": "Print Media",
        "option.cat.localization": "Localization",
        "option.subcat.numberformat": "Number formatting",
        "option.subcat.exportbutton": "Exporting button and menu",
        "option.subcat.zoombutton": "Zoom button",
        "option.cat.credits": "Credits",
        "option.subcat.cultureSettings": "Preview settings",
        "option.subcat.unitOfMeasure": "Unit of Measure",
        "option.subcat.searchForRegion": "Search for Region",
        "option.subcat.mapLegend": "Legend",
        "option.subcat.mapLegendLabels": "Legend texts",
        "option.subcat.legend": "Legend",
        "option.text.title.text": "Chart title",
        "option.tooltip.title.text": "The main chart title.",
        "option.text.yAxis.title.text": "Title",
        "option.tooltip.yAxis.title.text": "The Y axis title. It can contain basic HTML text markup like &lt;b&gt;, &lt;i&gt; and spans with style..",
        "option.text.chart.height": "Height",
        "option.tooltip.chart.height": "The height of the chart.",
        "option.text.chart.width": "Width",
        "option.tooltip.chart.width": "The width of the chart.",
        "option.text.chart.zoomType": "Allow zooming",
        "option.tooltip.chart.zoomType": "Decides in what dimensions the user can zoom by dragging the mouse. Can be one of <code>x</code>, <code>y</code> or <code>xy</code>.",
        "option.text.chart.polar": "Polar (radar) projection",
        "option.tooltip.chart.polar": "When true, cartesian charts like line, spline, area and column are transformed into the polar coordinate system. Requires <code>highcharts-more.js</code>.",
        "option.text.chart.style": "Font family",
        "option.tooltip.chart.style": "The font to use throughout the chart",
        "option.text.title.style": "Main title style",
        "option.tooltip.title.style": "Styling for the main chart title",
        "option.text.subtitle.style": "Subtitle style",
        "option.tooltip.subtitle.style": "Styling for the chart's subtitle, normally displayed with smaller fonts below the main title",
        "option.text.colors": "Colors",
        "option.tooltip.colors": "Default colors for the data series, or for individual points in a pie series or a column series with individual colors. Colors will be picked in succession. If a color is explicitly set for each series in the <em>Data series</em> view, that color will take precedence.",
        "option.text.chart.backgroundColor": "Background color",
        "option.tooltip.chart.backgroundColor": "Background color for the full chart area",
        "option.text.chart.borderWidth": "Border width",
        "option.tooltip.chart.borderWidth": "The pixel width of the outer chart border.",
        "option.text.chart.borderRadius": "Border corner radius",
        "option.tooltip.chart.borderRadius": "The corner radius of the outer chart border.",
        "option.text.chart.borderColor": "Border color",
        "option.tooltip.chart.borderColor": "The color of the outer chart border.",
        "option.text.chart.plotBackgroundColor": "Background color",
        "option.tooltip.chart.plotBackgroundColor": "Background color for the plot area, the area inside the axes",
        "option.text.chart.plotBackgroundImage": "Background image URL",
        "option.tooltip.chart.plotBackgroundImage": "The online URL for an image to use as the plot area background",
        "option.text.chart.plotBorderWidth": "Border width",
        "option.tooltip.chart.plotBorderWidth": "The pixel width of the plot area border.",
        "option.text.chart.plotBorderColor": "Border color",
        "option.tooltip.chart.plotBorderColor": "The color of the inner chart or plot area border.",
        "option.text.chart.inverted": "Inverted axes",
        "option.tooltip.chart.inverted": '<p>Whether to invert the axes so that the x axis is vertical and y axis is horizontal. When true, the x axis is <a href="#xAxis.reversed">reversed</a> by default. If a bar series is present in the chart, it will be inverted automatically.</p>\r\n\r\n<p>Inverting the chart doesn\'t have an effect if there are no cartesian series in the chart, or if the chart is <a href="#chart.polar">polar</a>.</p>',
        "option.text.xAxis.title.style": "X axis title",
        "option.tooltip.xAxis.title.style": "Styling and text for the X axis title",
        "option.text.xAxis.title.text": "Title",
        "option.tooltip.xAxis.title.text": "The X axis title. It can contain basic HTML text markup like &lt;b&gt;, &lt;i&gt; and spans with style.",
        "option.text.xAxis.tickInterval": "Tick interval",
        "option.tooltip.xAxis.tickInterval": "The display interval of the ticks (when not specified, this is 1). A value of 2 will show every 2nd tick. ",
        "option.text.xAxis.type": "Type",
        "option.tooltip.xAxis.type": "The type of axis",
        "option.text.xAxis.opposite": "Opposite side of chart",
        "option.tooltip.xAxis.opposite": "Whether to display the axis on the opposite side of the normal. The normal is on the left side for vertical axes and bottom for horizontal, so the opposite sides will be right and top respectively. This is typically used with dual or multiple axes.",
        "option.text.xAxis.reversed": "Reversed direction",
        "option.tooltip.xAxis.reversed": "Whether to reverse the axis so that the highest number is closest to the origin. If the chart is inverted, the x axis is reversed by default.",
        "option.text.xAxis.labels.format": "Axis labels format",
        "option.tooltip.xAxis.labels.format": "<p>A format string for the axis labels. The value is available through a variable <code>{value}</code>.</p><p><b>Units</b> can be added for example like <code>{value} USD</code>.</p><p><b>Formatting</b> can be added after a colon inside the variable, for example <code>USD {value:.2f}</code> to display two decimals, or <code>{value:%Y-%m-%d}</code> for a certain time format.",
        "option.text.xAxis.labels.hideGrouped": "Hide subcategory labels",
        "option.tooltip.xAxis.labels.hideGrouped": "Hide the subcategory labels and only show the category labels",
        "option.text.yAxis.title.style": "Y axis title style",
        "option.tooltip.yAxis.title.style": "Styling and text for the X axis title",
        "option.text.yAxis.type": "Type",
        "option.tooltip.yAxis.type": "The type of axis",
        "option.text.yAxis.opposite": "Opposite side of chart",
        "option.tooltip.yAxis.opposite": "Whether to display the axis on the opposite side of the normal. The normal is on the left side for vertical axes and bottom for horizontal, so the opposite sides will be right and top respectively. This is typically used with dual or multiple axes.",
        "option.text.yAxis.reversed": "Reversed direction",
        "option.tooltip.yAxis.reversed": "Whether to reverse the axis so that the highest number is closest to the origin. If the chart is inverted, the x axis is reversed by default.",
        "option.text.yAxis.labels.format": "Axis labels format",
        "option.tooltip.yAxis.labels.format": "<p>A format string for the axis labels. The value is available through a variable <code>{value}</code>.</p><p><b>Units</b> can be added for example like <code>{value} USD</code>.</p><p><b>Formatting</b> can be added after a colon inside the variable, for example <code>USD {value:.2f}</code> to display two decimals, or <code>{value:%Y-%m-%d}</code> for a certain time format.",
        "option.text.yAxis.tickInterval": "Tick interval",
        "option.tooltip.yAxis.tickInterval": "The display interval of the ticks (optional). When not specified, this is automatically calculated. Note: the interval may differ if the chart area is too small to draw all the ticks.",
        "option.text.yAxis.min": "Axis minimum",
        "option.tooltip.yAxis.min": "Fixed minimum for the y axis to start at (optional). This number must correspond with the tick interval (i.e. the minimum value should be equal to, or a multitude of the tick interval).",
        "option.text.yAxis.max": "Axis maximum",
        "option.tooltip.yAxis.max": "Fixed maximum for the y axis to end at (optional). This number must correspond with the tick interval (i.e. the maximum value should be equal to, or a multitude of the tick interval).",
        "option.text.yAxis.plotLine": "Baseline",
        "option.tooltip.yAxis.plotLine": "Move the grey baseline from zero to the selected value.",
        "option.text.series.type": "Series type",
        "option.tooltip.series.type": "The type of series",
        "option.text.series.color": "Color",
        "option.tooltip.series.color": 'The main color of the series. If no color is given here, the color is pulled from the array of default colors as given in the "Appearance" section.',
        "option.text.series.negativeColor": "Negative color",
        "option.tooltip.series.negativeColor": "The negative color of the series below the threshold. Threshold is default zero, this can be changed in the advanced settings.",
        "option.text.series.colorByPoint": "Color by point",
        "option.tooltip.series.colorByPoint": 'Use one color per point. Colors can be changed in the "Appearance" section.',
        "option.text.series.dashStyle": "Dash style",
        "option.tooltip.series.dashStyle": "A name for the dash style to use for the graph. Applies only to series type having a graph, like <code>line</code>, <code>spline</code>, <code>area</code> and <code>scatter</code> in  case it has a <code>lineWidth</code>. The value for the <code>dashStyle</code> include:\r\n\t\t    <ul>\r\n\t\t    \t<li>Solid</li>\r\n\t\t    \t<li>ShortDash</li>\r\n\t\t    \t<li>ShortDot</li>\r\n\t\t    \t<li>ShortDashDot</li>\r\n\t\t    \t<li>ShortDashDotDot</li>\r\n\t\t    \t<li>Dot</li>\r\n\t\t    \t<li>Dash</li>\r\n\t\t    \t<li>LongDash</li>\r\n\t\t    \t<li>DashDot</li>\r\n\t\t    \t<li>LongDashDot</li>\r\n\t\t    \t<li>LongDashDotDot</li>\r\n\t\t    </ul>",
        "option.text.series.marker.enabled": "Enable point markers",
        "option.tooltip.series.marker.enabled": "Enable or disable the point marker. If <code>null</code>, the markers are hidden when the data is dense, and shown for more widespread data points.",
        "option.text.series.marker.symbol": "Marker symbol",
        "option.tooltip.series.marker.symbol": '<p>A predefined shape or symbol for the marker. When null, the symbol is pulled from options.symbols. Other possible values are "circle", "square", "diamond", "triangle" and "triangle-down".</p>\r\n\r\n<p>Additionally, the URL to a graphic can be given on this form:  "url(graphic.png)". Note that for the image to be applied to exported charts, its URL needs to be accessible by the export server.</p>\r\n\r\n<p>Custom callbacks for symbol path generation can also be added to <code>Highcharts.SVGRenderer.prototype.symbols</code>. The callback is then used by its method name, as shown in the demo.</p>',
        "option.text.plotOptions.series.dataLabels.enabled": "Enable data labels",
        "option.tooltip.plotOptions.series.dataLabels.enabled": "Show small labels next to each data value (point, column, pie slice etc)",
        "option.text.plotOptions.series.dataLabels.style": "Text style",
        "option.tooltip.plotOptions.series.dataLabels.style": "Styles for the label.",
        "option.text.plotOptions.mapbubble.minSize": "Min size",
        "option.tooltip.plotOptions.mapbubble.minSize": "Define the size of the smallest bubble",
        "option.text.plotOptions.mapbubble.maxSize": "Max size",
        "option.tooltip.plotOptions.mapbubble.maxSize": "Define the size of the largest bubble",
        "option.text.mapbubble.legend.minValue": "Smallest value",
        "option.tooltip.mapbubble.legend.minValue": "All values from 'largest value' and up are presented as the largest bubble size found in the legend. 'Smallest value' and all values below are presented as the smallest bubble size found in the legend. Zero values are not displayed, all regions in the map are required to have a value. <br><br>Set 'medium value' to a fitting value halfway 'largest value' and 'smallest value'.",
        "option.text.mapbubble.legend.middleValue": "Medium value",
        "option.tooltip.mapbubble.legend.middleValue": "All values from 'largest value' and up are presented as the largest bubble size found in the legend. 'Smallest value' and all values below are presented as the smallest bubble size found in the legend. Zero values are not displayed, all regions in the map are required to have a value. <br><br>Set 'medium value' to a fitting value halfway 'largest value' and 'smallest value'.",
        "option.text.mapbubble.legend.maxValue": "Largest value",
        "option.tooltip.mapbubble.legend.maxValue": "All values from 'largest value' and up are presented as the largest bubble size found in the legend. 'Smallest value' and all values below are presented as the smallest bubble size found in the legend. Zero values are not displayed, all regions in the map are required to have a value. <br><br>Set 'medium value' to a fitting value halfway 'largest value' and 'smallest value'.",
        "option.text.legend.enabled": "Enable legend",
        "option.tooltip.legend.enabled": "Enable or disable the legend.",
        "option.text.legend.noData.enabled": "Show the 'No data' element in the legend",
        "option.tooltip.legend.noData.enabled": "Enable or disable the 'No data' element in the legend, use this when your dataset contains 'null' values.",
        "option.text.legend.align": "Horizontal alignment",
        "option.tooltip.legend.align": "<p>The horizontal alignment of the legend box within the chart area. Valid values are <code>left</code>, <code>center</code> and <code>right</code>.</p>\r\n\r\n<p>In the case that the legend is aligned in a corner position, the <code>layout</code> option will determine whether to place it above/below or on the side of the plot area.</p>",
        "option.text.legend.x": "Horizontal offset",
        "option.tooltip.legend.x": "The pixel offset of the legend relative to its alignment",
        "option.text.legend.verticalAlign": "Vertical alignment",
        "option.tooltip.legend.verticalAlign": "<p>The vertical alignment of the legend box. Can be one of <code>top</code>, <code>middle</code> or  <code>bottom</code>. Vertical position can be further determined by the <code>y</code> option.</p>\r\n\r\n<p>In the case that the legend is aligned in a corner position, the <code>layout</code> option will determine whether to place it above/below or on the side of the plot area.</p>",
        "option.text.legend.y": "Vertical offset",
        "option.tooltip.legend.y": "The pixel offset of the legend relative to its alignment",
        "option.text.legend.floating": "Float on top of plot area",
        "option.tooltip.legend.floating": "When the legend is floating, the plot area ignores it and is allowed to be placed below it.",
        "option.text.legend.itemStyle": "Text style",
        "option.tooltip.legend.itemStyle": "CSS styles for each legend item. Only a subset of CSS is supported, notably those options related to text.",
        "option.text.legend.itemHiddenStyle": "Text style hidden",
        "option.tooltip.legend.itemHiddenStyle": "CSS styles for each legend item when the corresponding series or point is hidden. Only a subset of CSS is supported, notably those options related to text. Properties are inherited from <code>style</code> unless overridden here.",
        "option.text.legend.backgroundColor": "Background color",
        "option.tooltip.legend.backgroundColor": "The background color of the legend.",
        "option.text.legend.borderWidth": "Border width",
        "option.tooltip.legend.borderWidth": "The width of the drawn border around the legend.",
        "option.text.legend.borderRadius": "Border corner radius",
        "option.tooltip.legend.borderRadius": "The border corner radius of the legend.",
        "option.text.legend.borderColor": "Border color",
        "option.tooltip.legend.borderColor": "The color of the drawn border around the legend.",
        "option.text.tooltip.enabled": "Enable tooltip",
        "option.tooltip.tooltip.enabled": "Enable or disable the tooltip. The tooltip is the information box that appears on mouse-over or touch on a point.",
        "option.text.tooltip.shared": "Shared between series",
        "option.tooltip.tooltip.shared": "When the tooltip is shared, the entire plot area will capture mouse movement or touch events. Tooltip texts for series types with ordered data (not pie, scatter, flags etc) will be shown in a single bubble. This is recommended for single series charts and for tablet/mobile optimized charts.",
        "option.text.tooltip.backgroundColor": "Background color",
        "option.tooltip.tooltip.backgroundColor": "The background color of the tooltip",
        "option.text.tooltip.borderWidth": "Border width",
        "option.tooltip.tooltip.borderWidth": '<p>The pixel width of the tooltip border.</p>\r\n\r\n<p>In <a href="http://www.highcharts.com/docs/chart-design-and-style/style-by-css">styled mode</a>, the stroke width is set in the <code>.highcharts-tooltip-box</code> class.</p>',
        "option.text.tooltip.borderRadius": "Border corner radius",
        "option.tooltip.tooltip.borderRadius": "The radius of the rounded border corners.",
        "option.text.tooltip.borderColor": "Border color",
        "option.tooltip.tooltip.borderColor": "The border color of the tooltip. If no color is given, the corresponding series color is used.",
        "option.text.exporting.enabled": "Enable exporting",
        "option.tooltip.exporting.enabled": "Enable the context button on the top right of the chart, allowing end users to download image exports.",
        "option.text.exporting.sourceWidth": "Exported width",
        "option.tooltip.exporting.sourceWidth": "The width of the original chart when exported.",
        "option.text.exporting.sourceHeight": "Exported height",
        "option.tooltip.exporting.sourceHeight": "The height of the original chart when exported.",
        "option.text.exporting.scale": "Scaling factor",
        "option.tooltip.exporting.scale": "The export scale. Note that this is overridden if width is set.",
        "option.text.lang.decimalPoint": "Decimal point",
        "option.tooltip.lang.decimalPoint": "The decimal point used for all numbers",
        "option.text.lang.thousandsSep": "Thousands separator",
        "option.tooltip.lang.thousandsSep": "The thousands separator used for all numbers",
        "option.text.lang.contextButtonTitle": "Context button title",
        "option.tooltip.lang.contextButtonTitle": "Exporting module menu. The tooltip title for the context menu holding print and export menu items.",
        "option.text.lang.printChart": "Print chart",
        "option.tooltip.lang.printChart": "Exporting module only. The text for the menu item to print the chart.",
        "option.text.lang.downloadPNG": "Download PNG",
        "option.tooltip.lang.downloadPNG": "Exporting module only. The text for the PNG download menu item.",
        "option.text.lang.downloadJPEG": "Download JPEG",
        "option.tooltip.lang.downloadJPEG": "Exporting module only. The text for the JPEG download menu item.",
        "option.text.lang.downloadPDF": "Download PDF",
        "option.tooltip.lang.downloadPDF": "Exporting module only. The text for the PDF download menu item.",
        "option.text.lang.downloadSVG": "Download SVG",
        "option.tooltip.lang.downloadSVG": "Exporting module only. The text for the SVG download menu item.",
        "option.text.lang.resetZoom": "Reset zoom button",
        "option.tooltip.lang.resetZoom": "The text for the label appearing when a chart is zoomed.",
        "option.text.lang.legend.less": "Text describing the lower limit",
        "option.tooltip.lang.legend.less": "The legend text that is shown when the first value of the legend-boundary is left blank (eg. less than).",
        "option.text.lang.legend.to": "Text in between values",
        "option.tooltip.lang.legend.to": "The legend text that is shown in between the legend-boundary values (eg. to).",
        "option.text.lang.legend.more": "Text describing the upper limit",
        "option.tooltip.lang.legend.more": "The legend text that is shown when the last legend-boundary value is left blank (eg. more than).",
        "option.text.credits.enabled": "Enable credits",
        "option.tooltip.credits.enabled": "Whether to show the credits text",
        "option.text.credits.text": "Credits text",
        "option.tooltip.credits.text": "The text for the credits label",
        "option.text.credits.href": "Link",
        "option.tooltip.credits.href": "The URL for the credits label",
        "template.line.title": "Line",
        "template.line.subtype.line": "Line",
        "template.line.subtype.spline": "Spline",
        "template.line.subtype.combination": "Column combination",
        "template.column.title": "Column",
        "template.column.subtype.basic": "Column",
        "template.column.subtype.percent": "Column percentage",
        "template.column.subtype.stacked": "Column stacked",
        "template.column.subtype.stacked.percent": "Column stacked percentage",
        "template.column.subtype.combination": "Line combination",
        "template.bar.title": "Bar",
        "template.bar.subtype.basic": "Bar",
        "template.bar.subtype.percent": "Bar percentage",
        "template.bar.subtype.stacked": "Bar stacked",
        "template.bar.subtype.stacked.percent": "Bar stacked percentage",
        "template.bar.subtype.stacked.negative": "Bar with negative stack",
        "template.area.title": "Area",
        "template.area.subtype.stacked": "Stacked",
        "template.area.subtype.percentage": "Percentage",
        "template.pie.title": "Pie",
        "template.pie.subtype.donut": "Donut",
        "template.polar.title": "Polar",
        "template.polar.subtype.spider": "Spider line",
        "template.stacked.title": "Stacked",
        "template.stacked.subtype.column": "Column",
        "template.stacked.subtype.bar": "Bar",
        "template.stacked.subtype.area": "Area",
        "template.maps.title": "Maps",
        "template.maps.subtype.laborRegion": "Labor region [AM]",
        "template.maps.subtype.securityRegion": "Security region [VR]",
        "template.maps.subtype.province": "Province [PV]",
        "template.maps.subtype.municipality": "Municipality [GM]",
        "template.maps.subtype.water": "Water boards [WS]",
        "template.maps.subtype.agricultural": "Agricultural areas [LB]",
        "template.maps.subtype.youthcare": "Youth care [JZ]",
        "template.maps.subtype.tourist": "Tourist [TR]",
        "template.maps.subtype.healthcare": "Health services [GG]",
        "template.maps.subtype.corop": "COROP [CR]",
        "template.maps.subtype.coropplus": "COROP plus [CP]",
        "template.maps.subtype.district": "District [WK]",
        "template.maps.subtype.neighborhood": "Neighborhood [BU]",
        "template.choropleth.title": "Choropleth",
        "template.bubbleChart.title": "Bubblechart",
        "maps.legend.less": "Less than",
        "maps.legend.to": "to",
        "maps.legend.more": "or more",
        "maps.legend.noData": "No data",
        "maps.loadmap.error": "Unable to load map",
        "maps.tooltip.nullDataMessage": "Data is unavailable or confidential",
        "option.cat.dataLayout": "Data Layout",
        "option.subcat.series": "Series",
        "option.subcat.highlightedValues": "Highlighted Values",
        "option.cat.cbsSpecific": "CBS Specific",
        "option.subcat.colors": "CBS Style",
        "option.subcat.sources": "Source",
        "option.subcat.mapLegendBubbleValues": "Bubble values",
        "option.subcat.mapLegendBubbleSize": "Bubble size",
        "option.cat.yAxisRight": "Right Y Axis",
        "option.subcat.yAxisRight": "Right Y Axis",
        "option.subcat.yAxisRight.series": "Series of the right Y Axis",
        "option.cat.bubblemap": "Bubblemap",
        "option.text.color.settings": "Color Settings",
        "option.tooltip.color.settings": "Cold colors or Warm colors for the data series",
        "option.color.palette.warm": "Warm",
        "option.color.palette.cold": "Cold",
        "option.text.mapColor.settings": "Color Settings",
        "option.tooltip.mapColor.settings": "Color palette for the map",
        "option.color.palette.red": "Red",
        "option.color.palette.blue": "Blue",
        "option.color.palette.green": "Green",
        "option.color.palette.purple": "Purple",
        "option.text.title.color": "Title color",
        "option.tooltip.title.color": "Change the color of the chart title",
        "option.title.color.black": "Black",
        "option.title.color.blue": "Blue",
        "option.text.legend": "Enable legend",
        "option.tooltip.legend": "Enable or disable the legend",
        "option.text.sources": "Source",
        "option.tooltip.sources": "Source of the data",
        "option.text.footNote": "Footnote",
        "option.tooltip.footNote": "The footnote that is displayed at the bottom of the chart.<br>Use the enter key to add line breaks.<br>Use the sup HTML tag for superscript text, eg. &lt;sup&gt;1)&lt;/sup&gt; will be displayed as <sup>1)</sup>",
        "option.text.culture.selection": "Language",
        "option.tooltip.culture.selection": "Language setting for the chart preview",
        "option.text.yAxisRight.title": "Right Y Axis title",
        "option.tooltip.yAxisRight.title": "The Right Y Axis title, normally displayed vertically along the Y Axis",
        "option.text.yAxisRight.labelFormat": "Axis label format",
        "option.tooltip.yAxisRight.labelFormat": "<p>A format string for the axis labels. The value is available through a variable <code>{value}</code>.</p><p><b>Units</b> can be added for example like <code>{value} USD</code>.</p><p><b>Formatting</b> can be added after a colon inside the variable, for example <code>USD {value:.2f}</code> to display two decimals, or <code>{value:%Y-%m-%d}</code> for a certain time format",
        "option.text.yAxisRight.min": "Axis minimum value",
        "option.tooltip.yAxisRight.min": "The minimum value of the right Axis",
        "option.text.yAxisRight.max": "Axis maximum value",
        "option.tooltip.yAxisRight.max": "The maximum value of the right Axis",
        "option.text.yAxisRight.tickInterval": "Axis tick interval value",
        "option.tooltip.yAxisRight.tickInterval": "The tick interval of the right Axis",
        "option.text.yAxisRight.type": "Right Y Axis type",
        "option.tooltip.yAxisRight.type": "The type of right Y Axis",
        "option.text.yAxisRight.seriesType": "Series type",
        "option.tooltip.yAxisRight.seriesType": "The type of the series",
        "option.text.legend.bandWidth": "Bandwidth",
        "option.tooltip.legend.bandWidth": "Specify the color ranges for the map chart here. Each number marks a transition to the next color. Optional the first an last number can be left blank to create infinite boundaries like resp. <5 or >100",
        "option.text.chart.description": "Description",
        "option.tooltip.chart.description": "Chart description for accessibility",
        "option.text.series.description": "Description",
        "option.tooltip.series.description": "Serie description for accessibility",
        "option.text.chart.searchForRegionEnabled": "Enable search for region",
        "option.tooltip.chart.searchForRegionEnabled": "Enable search for region, gives a textbox for searching for regions",
        "option.text.tooltip.valueSuffix": "Unit of Measure (suffix)",
        "option.tooltip.tooltip.valueSuffix": "Unit of Measure value (suffix)",
        "option.text.tooltip.valuePrefix": "Unit of Measure (prefix)",
        "option.tooltip.tooltip.valuePrefix": "Unit of Measure value (prefix)",
        "option.culture.dutch": "Dutch",
        "option.culture.english": "English",
        sourcesPrefix: "Source: CBS,",
        "help.title": "Highcharts help",
        "help.text": "More information and instructions for Highcharts can be found on the Intranet. Please search for the Intranet workspace: Highcharts 5. All manuals and QRCs can be found there.",
        "exporter.exportHTML": "Export Html",
        "exporter.exportJSON": "Export JSON",
        "exporter.exportSVG": "Export SVG",
        "exporter.exportPlugins": "Plugins",
        "exporter.downloadButton": "Export"
    }
}),
highed.dom = {
    isVisible: function(e) {
        var t = window.getComputedStyle(e);
        return "none" !== t.display
    },
    ap: function(e) {
        var t = Array.prototype.slice.call(arguments);
        return t.splice(0, 1),
        e = highed.dom.get(e),
        highed.isNull(e) || "undefined" == typeof e.appendChild ? highed.log(1, "target is not a valid DOM node (highed.dom.ap)") : t.forEach(function(t) {
            highed.isArr(t) ? t.forEach(function(t) {
                highed.dom.ap(e, t)
            }) : "undefined" != typeof t && "undefined" != typeof t.appendChild ? e.appendChild(t) : t !== !1 && highed.log(1, "child is not valid (highed.dom.ap)")
        }),
        e
    },
    insertBefore: function(e, t) {
        var i = Array.prototype.slice.call(arguments);
        return i.splice(0, 2),
        e = highed.dom.get(e),
        highed.isNull(e) || "undefined" == typeof e.insertBefore ? highed.log(1, "target is not a valid DOM node (highed.dom.ap)") : i.forEach(function(i) {
            highed.isArr(i) ? i.forEach(function(t) {
                highed.dom.ap(e, t)
            }) : "undefined" != typeof i && "undefined" != typeof i.insertBefore ? e.insertBefore(i, t) : i !== !1 && highed.log(1, "child is not valid (highed.dom.ap)")
        }),
        e
    },
    options: function(e, t, i) {
        if (highed.isNull(t))
            ;
        else if (highed.isArr(t))
            t.forEach(function(t) {
                highed.dom.ap(e, highed.dom.cr("option", "", t, t))
            }),
            i && (e.selectedIndex = i);
        else if (highed.isStr(t))
            try {
                highed.dom.options(e, JSON.parse(t))
            } catch (e) {
                highed.log(e + " in highed.options (json parser)")
            }
        else
            Object.keys(t).forEach(function(i) {
                highed.dom.ap(e, highed.dom.cr("option", "", t[i], i))
            })
    },
    showOnHover: function(e, t) {
        return highed.isArr(t) ? void t.forEach(function(t) {
            highed.dom.showOnHover(e, t)
        }) : (highed.dom.on(e, "mouseover", function() {
            highed.dom.style(t, {
                opacity: 1,
                "pointer-events": "auto"
            })
        }),
        void highed.dom.on(e, "mouseout", function() {
            highed.dom.style(t, {
                opacity: 0,
                "pointer-events": "none"
            })
        }))
    },
    cr: function(e, t, i, o) {
        var n = !1;
        return "undefined" != typeof e ? (n = document.createElement(e),
        "undefined" != typeof t && (n.className = t),
        "undefined" != typeof i && (n.innerHTML = i),
        "undefined" != typeof o && (n.id = o)) : highed.log(1, "no node type supplied (highed.dom.cr"),
        n
    },
    style: function(e, t) {
        return highed.isArr(e) ? (e.forEach(function(e) {
            highed.dom.style(e, t)
        }),
        e) : !(!e || !e.style) && (Object.keys(t).forEach(function(i) {
            e.style[i] = t[i]
        }),
        e)
    },
    on: function(e, t, i, o) {
        function n() {
            if (highed.isFn(i))
                return i.apply(o, arguments)
        }
        var a = [];
        return e ? highed.isArr(t) ? (t.forEach(function(t) {
            a.push(highed.dom.on(e, t, i, o))
        }),
        function() {
            a.forEach(function(e) {
                e()
            })
        }
        ) : (e === document.body && "resize" === t,
        e && e.forEach && e.forEach(function(e) {
            a.push(highed.dom.on(e, t, i))
        }),
        a.length > 0 ? function() {
            a.forEach(function(e) {
                e()
            })
        }
        : (e.addEventListener ? e.addEventListener(t, n, !1) : e.attachEvent("on" + t, n, !1),
        function() {
            window.removeEventListener ? e.removeEventListener(t, n, !1) : e.detachEvent("on" + t, n)
        }
        )) : function() {}
    },
    nodefault: function(e) {
        return e.cancelBubble = !0,
        e.preventDefault(),
        e.stopPropagation(),
        e.stopImmediatePropagation(),
        !1
    },
    val: function(e, t) {
        if ("SELECT" !== e.tagName)
            return "INPUT" === e.tagName ? "checkbox" === e.type ? (highed.isNull(t) || (e.checked = highed.toBool(t)),
            e.checked) : (highed.isNull(t) || (e.value = t),
            e.value) : (highed.isNull(t) || (e.innerHTML = t),
            e.innerText);
        if (e.selectedIndex >= 0) {
            if (!highed.isNull(t))
                for (var i = 0; i < e.options.length; i++)
                    if (e.options[i].id === t) {
                        e.selectedIndex = i;
                        break
                    }
            return e.options[e.selectedIndex].id
        }
        return !1
    },
    size: function(e) {
        return {
            w: e.clientWidth,
            h: e.clientHeight
        }
    },
    pos: function(e, t) {
        if (t) {
            var i = e.getBoundingClientRect();
            return {
                x: i.left + (window.scrollX || 0),
                y: i.top + (window.scrollY || 0)
            }
        }
        return {
            x: e.offsetLeft,
            y: e.offsetTop
        }
    },
    get: function(e) {
        return e && e.appendChild ? e : document.getElementById(e) || !1
    },
    containsChild: function(e) {
        var t = Array.prototype.slice.call(arguments);
        t.splice(0, 1),
        e = highed.dom.get(e);
        var i = Array.prototype.slice.call(e.children);
        if (e && i)
            return t.every(function(e) {
                return i.some(function(t) {
                    return e === t
                })
            })
    }
},
highed.events = function() {
    function e(o, n, a) {
        var r = ++i;
        return highed.isArr(n) ? n.forEach(function(t) {
            e(o, t, a)
        }) : (t[o] = t[o] || [],
        t[o].push({
            id: r,
            fn: n,
            context: a
        }),
        function() {
            t[o] = t[o].filter(function(e) {
                return e.id !== r
            })
        }
        )
    }
    var t = {}
      , i = 0;
    return {
        on: e,
        emit: function(e) {
            var i = Array.prototype.slice.call(arguments);
            return i.splice(0, 1),
            "undefined" != typeof t[e] ? (t[e].forEach(function(e) {
                highed.isFn(e.fn) && e.fn.apply(e.context, i)
            }),
            t[e].length) : 0
        }
    }
}
,
highed.ready(function() {
    var e = highed.dom.cr("input")
      , t = !1;
    e.type = "file",
    e.accept = ".csv",
    highed.dom.ap(document.body, e),
    highed.dom.style(e, {
        display: "none"
    }),
    highed.readLocalFile = function(i) {
        var o = highed.merge({
            type: "text",
            multiple: !1,
            accept: ".csv"
        }, i);
        e.accept = o.accept,
        highed.isFn(t) && t(),
        t = highed.dom.on(e, "change", function() {
            function i(e) {
                var t = new FileReader;
                return t.onloadstart = function(e) {
                    highed.isFn(o.progress) && o.progress(Math.round(e.loaded / e.total * 100))
                }
                ,
                t.onload = function(i) {
                    var n = t.result;
                    if ("json" === o.type)
                        try {
                            n = JSON.parse(n)
                        } catch (e) {
                            highed.isFn(o.error) && o.error(e)
                        }
                    highed.isFn(o.success) && o.success({
                        filename: e.name,
                        size: e.size,
                        data: n
                    })
                }
                ,
                t
            }
            for (var n = 0; n < e.files.length; n++)
                o.type && "text" !== o.type && "json" !== o.type ? "binary" === o.type ? i(e.files[n]).readAsBinaryString(e.files[n]) : "b64" === o.type && i(e.files[n]).readAsDataURL(e.files[n]) : i(e.files[n]).readAsText(e.files[n]);
            t(),
            e.value = ""
        }),
        e.multiple = o.multiple,
        e.click()
    }
}),
highed.installTemplate = function(e, t) {
    var i = highed.merge({
        title: "",
        config: {},
        tooltipText: ""
    }, t);
    "undefined" == typeof highed.meta.chartTemplates && (highed.meta.chartTemplates = {}),
    "undefined" != typeof highed.meta.chartTemplates[e] && i.title.length && (highed.meta.chartTemplates[e].templates[i.title] = i)
}
,
highed.flushTemplates = function() {
    highed.meta.chartTemplates = {}
}
,
highed.addTemplateType = function(e, t) {
    "undefined" == typeof highed.meta.chartTemplates && (highed.meta.chartTemplates = {}),
    "undefined" == typeof highed.meta.chartTemplates[e] && (highed.meta.chartTemplates[e] = {
        title: t,
        templates: {}
    })
}
,
highed.installMultipleTemplates = function(e) {
    "undefined" == typeof highed.meta.chartTemplates && (highed.meta.chartTemplates = {}),
    highed.isArr(e) && e.forEach(function(e) {
        e.type && e.template && highed.installTemplate(e.type, e.template)
    })
}
,
"undefined" == typeof cbs)
    var cbs = {};
if (cbs.formatter = function() {
    function e(e) {
        return e.replace(/[\\\/|&:;$%@"'`<>()+,.?*~]|sup/g, "")
    }
    return {
        fileName: e
    }
}(),
Highcharts.cbsFormatNumber = function(e, t, i, o) {
    i = void 0 == i ? Highcharts.defaultOptions.lang.thousandsSep : i,
    o = void 0 == o ? Highcharts.defaultOptions.lang.decimalPoint : o,
    "number" == typeof e ? e = e.toString() : void 0 != e && null != e || (e = "");
    var n = t || 0 == t ? t.toString() : e;
    e = e ? e.replace(/[\s,.]/g, "") : "";
    var a = n.split(".");
    1 == a.length && (a = n.split(","));
    var r = a[0] || ""
      , l = r.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + i)
      , s = r && r.length > 0 ? e.substring(r.length) : null
      , d = l;
    return s && (d += o + s),
    d
}
,
"undefined" == typeof cbs)
    var cbs = {};
if (cbs.print = function() {
    var e, t, i = 2, o = 3, n = function(i, n) {
        var a = "map" == n.chart.mapType;
        return "map" == n.chart.type && a ? (e = 378,
        t = 500) : (e = 378 * o,
        t = 228 * o),
        n.exporting.sourceWidth && (e = "map" == n.chart.type && a ? n.exporting.sourceWidth : n.exporting.sourceWidth * o),
        n.exporting.sourceHeight && (t = "map" == n.chart.type && a ? n.exporting.sourceHeight : n.exporting.sourceHeight * o),
        {
            type: i,
            filename: n.title.text,
            sourceWidth: e,
            sourceHeight: t,
            scale: 1
        }
    }, a = function(e) {
        var t = e.xAxis[0]
          , n = e.yAxis[0]
          , a = t && t.tickLength > 0 ? t.tickLength : 0
          , r = 10
          , l = t.labels && t.labels.hideGrouped ? "0px" : "22.5px"
          , s = cbs.renderer.itemMargin
          , d = 10
          , h = -50
          , c = "22.5px"
          , p = 23 * i
          , u = 9 * i
          , g = 9 * i
          , m = 23 * i
          , b = 6 * i
          , f = 4.5
          , v = n.plotLines ? n.plotLines[0].value : void 0
          , y = "31.5px"
          , x = -1;
        switch (e.chart.type) {
        case "bar":
            r = 0,
            d += s + 50,
            x = 0;
            break;
        case "column":
            x = 0;
            break;
        case "area":
            x = 0;
            break;
        case "line":
            1 == e.chart.polar && (f = 0)
        }
        var G = highed.merge(t, {
            labels: {
                style: {
                    fontSize: l,
                    fontFamily: '"Akko Pro Light", "Calibri Light"'
                },
                groupedOptions: [{
                    style: {
                        fontSize: "22.5px"
                    },
                    y: r
                }]
            },
            title: {
                style: {
                    fontSize: "22.5px",
                    fontFamily: '"Akko Pro Light", "Calibri Light"'
                }
            },
            tickLength: a * i,
            tickWidth: 2
        })
          , M = highed.merge(n, {
            labels: {
                style: {
                    fontSize: "22.5px",
                    fontFamily: '"Akko Pro Light", "Calibri Light"',
                    color: "#000000"
                }
            },
            title: {
                style: {
                    fontSize: "22.5px",
                    fontFamily: '"Akko Pro Light", "Calibri Light"',
                    color: "#000000"
                }
            },
            gridLineWidth: .25 * o,
            plotLines: [{
                value: v,
                width: f,
                color: "#666666",
                zIndex: x
            }]
        });
        if ("map" == e.chart.type) {
            var y = "10.5px"
              , C = "7.5px";
            return "district" != e.chart.geoType && "neighborhood" != e.chart.geoType || (h = 12),
            "map" == e.chart.type && "mapbubble" == e.chart.mapType && (C = "13px",
            y = "18.2px"),
            {
                settings: {
                    forPrint: !0
                },
                title: {
                    style: {
                        fontSize: y,
                        fontFamily: '"Soho Pro Medium", "Cambria Bold"'
                    },
                    x: s - h
                },
                chart: {
                    spacingLeft: h
                },
                legend: {
                    itemStyle: {
                        fontSize: C,
                        fontFamily: '"Akko Pro Light", "Calibri Light"'
                    },
                    itemDistance: 14.5,
                    symbolPadding: 5.7,
                    symbolHeight: 5.7,
                    symbolWidth: 14.5,
                    itemMarginBottom: 3.8
                }
            }
        }
        return {
            settings: {
                forPrint: !0
            },
            chart: {
                spacingLeft: d
            },
            title: {
                style: {
                    fontSize: y,
                    fontFamily: '"Soho Pro Medium", "Cambria Bold"'
                },
                margin: 35 * i,
                x: s - d
            },
            yAxis: [M],
            xAxis: [G],
            legend: {
                itemStyle: {
                    fontSize: c,
                    fontFamily: '"Akko Pro Light", "Calibri Light"'
                },
                itemDistance: p,
                symbolPadding: u,
                symbolHeight: g,
                symbolWidth: m,
                itemMarginBottom: b
            },
            plotOptions: {
                series: {
                    lineWidth: 1.5 * o,
                    dataLabels: {
                        style: {
                            fontSize: "22.5px",
                            fontFamily: '"Akko Pro Light", "Calibri Light"',
                            fontWeight: "normal"
                        }
                    }
                }
            }
        }
    };
    return {
        exportChartOptions: a,
        exportOptions: n
    }
}(),
"undefined" == typeof cbs)
    var cbs = {};
if (cbs.exportable = function() {
    function e() {
        var e = this.series.chart.options.lang.tooltip.nullDataMessage
          , t = this.series.tooltipOptions.valueSuffix || ""
          , i = this.series.tooltipOptions.valuePrefix || "";
        if (!this.properties.statnaam)
            for (var o = ["wijknaam", "buurtnaam"], n = ["wijkcode", "buurtcode"], a = 0; a < o.length; a++)
                this.properties[o[a]] && (this.properties.statnaam = this.properties[o[a]],
                this.properties.statcode = this.properties[n[a]]);
        var r = this.properties ? this.properties.statnaam + ": " : "";
        if (this.series.tooltipOptions.shared) {
            var l = this
              , s = "<span><b>" + r + "</b><br/>";
            return chart.options.series.forEach(function(o) {
                if (o.isSerie) {
                    var n = o.data.filter(function(e) {
                        if (e.statcode === l.properties.statcode)
                            return e
                    })[0];
                    if (n) {
                        var a = "." === n.valueString ? e : i + Highcharts.cbsFormatNumber(n.valueString) + t;
                        s += o.name + ": <b>" + a + "</b><br/>"
                    }
                }
            }),
            s += "</span>"
        }
        var d = "." === this.valueString ? e : i + Highcharts.cbsFormatNumber(this.valueString) + t;
        return r + "<b>" + d + "</b>"
    }
    function t() {
        var e, t = this.axis, i = this.value, n = t.categories, a = this.dateTimeLabelFormat, r = (Highcharts.getOptions().lang,
        t.options.labels.format);
        return r ? e = o(r, this) : n ? e = i : this.chart.options.barType && this.chart.options.barType.negative ? e = i < 0 ? Highcharts.numberFormat(i, -1).substring(1) : Highcharts.numberFormat(i, -1) : a && (e = Highcharts.dateFormat(a, i)),
        void 0 === e && (e = Math.abs(i) >= 1e3 ? Highcharts.numberFormat(i, -1) : Highcharts.numberFormat(i, -1, void 0, "")),
        e
    }
    function i() {
        var e = "";
        if (void 0 !== this.point.value && null !== this.point.value && this.point.plotX && this.point.plotY ? e = this.point.valueString : this.point.yString && (e = this.point.yString),
        "pie" === this.series.chart.options.chart.type) {
            var t = (100 * this.point.y / this.series.total).toFixed(1);
            e = Highcharts.cbsFormatNumber(t) + " %"
        } else
            e = "." === e ? "" : e && this.series.chart.options.barType && this.series.chart.options.barType.negative && 0 == e.indexOf("-") ? e.substring(1) : Highcharts.cbsFormatNumber(e);
        return e
    }
    function o(e, t) {
        for (var i, o, n, a, r, l, s, d = "{", h = !1, c = []; e && (s = e.indexOf(d),
        s !== -1); ) {
            if (i = e.slice(0, s),
            h) {
                for (o = i.split(":"),
                n = o.shift().split("."),
                r = n.length,
                l = t,
                a = 0; a < r; a++)
                    l = l[n[a]];
                if (l < 0 && t.chart.options.barType && t.chart.options.barType.negative && (l *= -1),
                o.length) {
                    var p, u = o.join(":"), g = /f$/, m = /\.([0-9])/, b = Highcharts.getOptions().lang;
                    g.test(u) ? (p = u.match(m),
                    p = p ? p[1] : -1,
                    null !== l && (l = Highcharts.numberFormat(l, p, b.decimalPoint, b.thousandsSep))) : l = Highcharts.dateFormat(format, l)
                } else
                    l = Highcharts.numberFormat(l, -1);
                c.push(l)
            } else
                c.push(i);
            e = e.slice(s + 1),
            h = !h,
            d = h ? "}" : "{"
        }
        return c.push(e),
        c.join("")
    }
    function n(e, t) {
        var i = document.createElement("script");
        i.src = e,
        i.type = "text/javascript",
        i.onload = function() {
            ++t < incl.length && n(incl[t], t)
        }
        ,
        document.head.appendChild(i)
    }
    function a(e, t) {
        if ("undefined" != typeof e.forEach)
            e.forEach(t);
        else
            for (var i = 0; i < e.length; i++)
                t && t(e[i])
    }
    function r() {
        if (chart) {
            for (var e in chart.series) {
                var t = chart.series[e];
                t.options.isSerie ? t.options.name === cbs.selectedSerie && t.options.periode === cbs.selectedPeriod ? t.visible || t.show() : t.hide() : t.show()
            }
            chart.reflow(),
            chart.legend.update()
        }
    }
    function l(e) {
        return jQuery.getJSON(e).done(function(e) {
            cl(e),
            chart && chart.update({
                accessibility: {
                    pointDescriptionFormatter: cbs.pointDescriptionFormatter
                },
                chart: {
                    map: e
                },
                plotOptions: {
                    map: {
                        point: {
                            events: {
                                click: cbs.plotOptionsMapPointEventsClick,
                                select: cbs.plotOptionsMapPointEventsSelect
                            }
                        }
                    },
                    mapbubble: {
                        point: {
                            events: {
                                click: cbs.plotOptionsMapPointEventsClick,
                                select: cbs.plotOptionsMapPointEventsSelect
                            }
                        }
                    },
                    series: {
                        dataLabels: {
                            formatter: cbs.dataLabelFormatter
                        }
                    }
                },
                legend: {
                    labelFormatter: cbs.legendLabelFormatter
                }
            }),
            cbs.setSerieVisibility()
        })
    }
    function s(e, t, i) {
        if (void 0 !== t && null !== t && void 0 !== i && null !== i && void 0 !== e && null !== e) {
            var o = [];
            return e.series.forEach(function(e) {
                e.options.isSerie && e.data.forEach(function(n) {
                    e.options.isSerie && void 0 !== e.options.periode && e.options.periode === t && void 0 !== e.options.name && e.options.name === i && null !== n.value && o.push(n.categorie)
                })
            }),
            o
        }
    }
    function d(e, t, i, o) {
        if (e) {
            if (void 0 === t || null === t || void 0 === i || null === i || void 0 === o || null === o || void 0 === e || null === e)
                return;
            e.series.forEach(function(e) {
                e.options.isSerie && e.data.forEach(function(n) {
                    void 0 !== n.options.categorie && n.options.categorie.toLowerCase() === t.toLocaleLowerCase() && e.options.periode === i && e.options.name === o && n.select(!0, !1)
                })
            })
        }
    }
    return {
        mapTooltipFormatter: e,
        yAxisLabelFormatter: t,
        dataLabelFormatter: i,
        customValueExpressionFormatter: o,
        include: n,
        each: a,
        setSerieVisibility: r,
        downloadGeoJson: l,
        regionSearchInit: s,
        onRegionSearchAutoComplete: d
    }
}(),
"undefined" == typeof cbs)
    var cbs = {};
if (cbs.renderer = function() {
    function e() {
        cbs.renderer.logo && (cbs.renderer.logo.destroy(),
        cbs.renderer.logo = null),
        cbs.renderer.footNote && (cbs.renderer.footNote.destroy(),
        cbs.renderer.footNote = null),
        cbs.renderer.source && (cbs.renderer.source.destroy(),
        cbs.renderer.source = null),
        cbs.renderer.yAxisTitle && (cbs.renderer.yAxisTitle.destroy(),
        cbs.renderer.yAxisTitle = null),
        cbs.renderer.xAxisBg && (cbs.renderer.xAxisBg.destroy(),
        cbs.renderer.xAxisBg = null)
    }
    function t(e) {
        if (e) {
            cbs.renderer.clearCanvas();
            var t = e.options.chart.type
              , i = e.options.plotOptions.series.stacking
              , o = e.options.settings.forPrint
              , n = "map" == e.options.chart.mapType
              , a = o && 0 == n ? 1.4 : 1;
            if (o && n && (a = .7),
            cbs.renderer.logoWidth = cbs.renderer.defaultLogoWidth * a,
            cbs.renderer.logoHeight = cbs.renderer.defaultLogoHeight * a,
            "map" === t || "pie" == t || e.options.chart.polar)
                cbs.renderer.renderDefaultLayout(e);
            else {
                if (e.options.yAxis.length > 0 && e.options.yAxis[0].cbsTitle) {
                    var r = 11
                      , l = e.plotTop - cbs.renderer.itemMargin - 6
                      , s = e.renderer.text(e.options.yAxis[0].cbsTitle, r, l, !0);
                    o && (s = e.renderer.text(e.options.yAxis[0].cbsTitle, r, l - 15, !0).css({
                        fontSize: f,
                        fontFamily: v
                    })),
                    "bar" == t && (r = "percent" == i ? e.chartWidth - 44 : e.chartWidth - 26,
                    l = e.plotTop + e.plotHeight + 40,
                    s = e.renderer.text(e.options.yAxis[0].cbsTitle, r, l, !0),
                    o && (s = e.renderer.text(e.options.yAxis[0].cbsTitle, r, l + 20, !0).css({
                        fontSize: f,
                        fontFamily: v
                    })),
                    s.attr({
                        align: "right"
                    })),
                    cbs.renderer.yAxisTitle = s.add()
                }
                "bar" != t ? cbs.renderer.renderHorizontalXAxisLayout(e) : cbs.renderer.renderVerticalXAxisLayout(e)
            }
            cbs.renderer.calculateMarginBottom(e)
        }
    }
    function i(e) {
        cbs.renderer.clearCanvas();
        var t = cbs.renderer.itemMargin
          , i = t
          , o = e.chartHeight
          , n = e.options.footNote && e.options.footNote.text
          , a = e.options.settings.forPrint;
        if (n) {
            o -= t,
            cbs.renderer.renderFootNote(e, i, o);
            var r = cbs.renderer.footNote.getBBox().height
              , l = t - r;
            l && (cbs.renderer.footNote.attr({
                y: o + l
            }),
            a && "map" != e.options.chart.type && cbs.renderer.footNote.attr({
                y: o + l + 23
            })),
            o -= r
        }
        var s = e.options.sources && e.options.sources.text;
        if (s) {
            o -= t,
            cbs.renderer.renderSource(e, i, o);
            var d = cbs.renderer.source.getBBox().height;
            o -= d
        }
        if (o -= cbs.renderer.logoHeight + cbs.renderer.itemMargin,
        cbs.renderer.renderLogo(e, i, o),
        e.options.chart.polar || "pie" == e.options.chart.type || "map" == e.options.chart.type) {
            var h = e.legend.group ? e.legend.group.getBBox().height : 0;
            cbs.renderer.positionLegend(e, i, o - cbs.renderer.itemMargin - h)
        } else
            e.options.legend.y = o - e.chartHeight
    }
    function o(e) {
        var t = cbs.renderer.cornerRadius
          , i = cbs.renderer.itemMargin
          , o = cbs.renderer.logoHeight
          , n = e.plotBox.x || 0
          , a = e.plotBox.y + e.plotBox.height
          , r = e.options.settings.hasGroupedCategories
          , l = e.options.settings.forPrint
          , s = l ? 55 : 32
          , d = r ? s : e.xAxis[0].labelGroup.getBBox().height + (e.options.xAxis[0].tickLength || 0)
          , h = Array.isArray(e.xAxis) && e.xAxis[0].axisTitle ? e.xAxis[0].axisTitle.getBBox().height : 0
          , c = d + h + i + o + i;
        c += i;
        var p = e.yAxis[0].width - 2 * t;
        cbs.renderer.xAxisBg = e.renderer.path(["M", n, a, "v", c - t, "a", t, t, 0, 0, 0, t, t, "h", p, "a", t, t, 0, 0, 0, t, -t, "v", -c + t, "z"]).attr({
            "stroke-width": 0,
            fill: "#efefef",
            zIndex: -1
        }).add(),
        cbs.renderer.renderLogo(e, n + i, a + c - i - o);
        var u = a + c + 2 * i
          , g = e.legend.group ? e.legend.group.getBBox().height : 0
          , m = 10
          , b = cbs.renderer.positionLegend(e, n, u) ? u + g - 2 + i + m : u
          , f = e.options.sources && e.options.sources.text;
        f && cbs.renderer.renderSource(e, n, b);
        var v = f ? b + i + m : b;
        cbs.renderer.renderFootNote(e, n, v)
    }
    function n(e) {
        var t = cbs.renderer.cornerRadius
          , i = cbs.renderer.itemMargin
          , o = cbs.renderer.logoHeight
          , n = e.plotBox.x || 0
          , a = e.plotBox.y || 0
          , r = e.plotBox.height
          , l = n - i;
        cbs.renderer.xAxisBg = e.renderer.path(["M", n, a, "h", -(l - t), "a", t, t, 0, 0, 0, -t, t, "v", r - 2 * t, "a", t, t, 0, 0, 0, t, t, "h", l - t, "z"]).attr({
            "stroke-width": 0,
            fill: "#efefef",
            zIndex: -1
        }).add();
        var s = n - l + i;
        cbs.renderer.renderLogo(e, s, a + r - i - o),
        s -= i;
        var d = cbs.renderer.yAxisTitle ? cbs.renderer.yAxisTitle.getBBox().height + i : 0
          , h = e.legend.group ? e.legend.group.getBBox().height : 0
          , c = e.yAxis[0].labelGroup.getBBox().height + (e.options.yAxis[0].tickLength || 0) + i
          , p = a + r + c + i + d
          , u = cbs.renderer.positionLegend(e, s, p) ? p + h + 2 * i : p
          , g = e.options.sources && e.options.sources.text;
        g && cbs.renderer.renderSource(e, s, u);
        var m = g ? u + 2 * i : u;
        cbs.renderer.renderFootNote(e, s, m)
    }
    function a() {
        var e = this
          , t = Object.keys(e).filter(function(t) {
            return "function" != typeof e[t]
        })
          , i = [];
        return t.forEach(function(t) {
            var o = t + ":"
              , n = e[t];
            n && "object" != typeof n ? "string" == typeof n && (n = "'" + n + "'") : n = "null",
            o += n,
            i.push(o)
        }),
        i.join(",")
    }
    function r(e, t, i) {
        var o = 156
          , n = cbs.renderer.logoHeight / o
          , a = 1;
        cbs.renderer.logo = e.renderer.g("logo").attr({
            zIndex: 1,
            transform: "translate(" + (t - a) + "," + i + ") scale(" + n + ")"
        });
        var r = {
            fill: "#929292",
            "stroke-width": 3
        };
        e.renderer.path(["M", 41.3, 34.1, "V", 42, "H", 23.8, "h", -5.5, "v", 5.5, "v", 7.9, "v", 5.5, "h", 5.5, "h", 17.5, "v", 7.9, "H", 10.4, "V", 34.1, "H", 41.3, "M", 46.8, 28.6, "H", 9.9, "c", -2.8, 0, -5, 2.2, -5, 5, "v", 40.6, "h", 41.9, "V", 55.3, "h", -23, "v", -7.9, "h", 23, "V", 28.6, "L", 46.9, 28.6, "z"]).attr(r).add(cbs.renderer.logo),
        e.renderer.path(["M", 67.3, 11.4, "v", 17.2, "v", 5.5, "h", 5.5, "h", 21.3, "v", 34.6, "H", 59.4, "V", 11.4, "H", 67.3, "M", 67.2, 60.8, "h", 5.5, "h", 7.9, "h", 5.5, "v", -5.5, "v", -7.9, "v", -5.5, "h", -5.5, "h", -7.9, "h", -5.5, "v", 5.5, "v", 7.9, "V", 60.8, "M", 67.8, 5.9, "H", 53.9, "v", 68.3, "h", 45.7, "V", 33.6, "c", 0, -2.8, -2.2, -5, -5, -5, "H", 72.8, "V", 11.2, "C", 72.8, 8.4, 70.5, 5.9, 67.8, 5.9, "L", 67.8, 5.9, "z", "M", 72.7, 55.3, "v", -7.9, "h", 7.9, "v", 7.9, "H", 72.7, "L", 72.7, 55.3, "z"]).attr(r).add(cbs.renderer.logo),
        e.renderer.path(["M", 94, 86.8, "v", 8, "H", 23.8, "h", -5.5, "v", 5.5, "v", 7, "v", 5.5, "h", 5.5, "H", 94, "v", 33.9, "H", 10.4, "v", -7.9, "h", 70.3, "h", 5.5, "v", -5.5, "v", -7.1, "v", -5.5, "h", -5.5, "H", 10.4, "V", 86.8, "H", 94, "M", 99.5, 81.3, "H", 4.9, "v", 44.9, "h", 75.8, "v", 7.1, "H", 4.9, "v", 13.9, "c", 0, 2.8, 2.2, 5, 5, 5, "h", 84.6, "c", 2.8, 0, 5, -2.2, 5, -5, "v", -39.9, "H", 23.8, "v", -7, "h", 75.7, "V", 81.3, "L", 99.5, 81.3, "z"]).attr(r).add(cbs.renderer.logo),
        cbs.renderer.logo.add()
    }
    function l(e, t, i) {
        var o = e.options.settings.forPrint
          , n = "map" == e.options.chart.mapType
          , a = e.options.sources.prefix + " " + e.options.sources.text;
        o ? "map" == e.options.chart.type && n ? cbs.renderer.source = e.renderer.text(a, t, i).css({
            fontSize: "7.5px",
            fontFamily: v
        }).add() : cbs.renderer.source = e.renderer.text(a, t, i + 20).css({
            fontSize: f,
            fontFamily: v
        }).add() : cbs.renderer.source = e.renderer.text(a, t, i).add()
    }
    function s(e, t, i) {
        var o = e.options.footNote && e.options.footNote.text
          , n = "map" == e.options.chart.mapType
          , a = e.options.settings.forPrint;
        if (o) {
            var r = e.options.footNote.text
              , l = ""
              , s = /<sup>\d\)<\/sup>/g
              , d = r.split(/(?:\r\n|\r|\n)/g) || [];
            e.options.isExporting ? l = d.join("<br>") : d.forEach(function(e) {
                var t = e.match(s) || [];
                if (t) {
                    var i = e.split(s) || [];
                    t.forEach(function(t, o) {
                        e = "<span class='footnote-ref'>" + t + "</span><span>" + i.pop() + "</span>"
                    })
                }
                l += "<div class='footnote-line'>" + e + "</div>"
            }),
            a ? "map" == e.options.chart.type && n ? cbs.renderer.footNote = e.renderer.text(l, t, i, !0).css({
                fontSize: "7.5px",
                fontFamily: v
            }).add() : cbs.renderer.footNote = e.renderer.text(l, t, i + 40, !0).css({
                width: e.chartWidth - t - cbs.renderer.itemMargin,
                fontSize: f,
                fontFamily: v
            }).add() : cbs.renderer.footNote = e.renderer.text(l, t, i, !0).css({
                width: e.chartWidth - t - cbs.renderer.itemMargin
            }).add()
        }
        return o
    }
    function d(e, t, i) {
        var o = e.legend && e.legend.group;
        return o && e.legend.group.translate(t, i),
        o
    }
    function h(e) {
        if (e) {
            var t = cbs.renderer.itemMargin
              , i = t
              , o = e.options.chart.type
              , n = e.options.chart.geoType
              , a = e.options.settings.forPrint;
            cbs.renderer.footNote && (i += Math.ceil(cbs.renderer.footNote.getBBox().height) + t),
            cbs.renderer.source && (i += Math.ceil(cbs.renderer.source.getBBox().height) + t);
            var r = e.legend && e.legend.group;
            if (r && (i += Math.ceil(e.legend.group.getBBox().height) + t,
            "map" === o && ("district" === n || "neighborhood" === n ? i += "mapbubble" === e.options.chart.mapType ? 10 : 18 : i -= 82),
            a && (i += 2 * t)),
            "map" !== o)
                if ("bar" === o) {
                    if (i += e.yAxis[0].labelGroup.getBBox().height + (e.options.yAxis[0].tickLength || 0) + t,
                    cbs.renderer.yAxisTitle) {
                        var l = cbs.renderer.yAxisTitle ? Math.ceil(cbs.renderer.yAxisTitle.getBBox().height) + t : 0;
                        i += l
                    }
                } else
                    cbs.renderer.xAxisBg && (i += cbs.renderer.xAxisBg.getBBox().height + t);
            ("map" === o || e.options.chart.polar) && (i += cbs.renderer.logoHeight + t,
            a && (i += 3 * t)),
            i = Math.ceil(i);
            var s = i - (e.options.chart.marginBottom || 0);
            (s < -1 || s > 1) && e.update({
                chart: {
                    marginBottom: i
                }
            })
        }
    }
    var c, p, u, g;
    const m = 20
      , b = 30
      , f = "22.5px"
      , v = '"Akko Pro Light", "Calibri Light"';
    var y = m
      , x = b
      , G = 12
      , M = 6;
    return {
        footNote: c,
        source: p,
        yAxisTitle: u,
        xAxisBg: g,
        logoWidth: y,
        logoHeight: x,
        defaultLogoWidth: m,
        defaultLogoHeight: b,
        itemMargin: G,
        cornerRadius: M,
        printFontFamily: v,
        printFontSize: f,
        renderAdditionalElements: t,
        renderDefaultLayout: i,
        renderLogo: r,
        renderSource: l,
        renderFootNote: s,
        positionLegend: d,
        renderHorizontalXAxisLayout: o,
        renderVerticalXAxisLayout: n,
        clearCanvas: e,
        createExportableVariables: a,
        calculateMarginBottom: h
    }
}(),
function() {
    highed.showDimmer = function(e, t, i, o) {
        function n() {
            highed.dom.style(a, {
                opacity: 0,
                "pointer-events": "none"
            }),
            highed.isFn(r) && (r(),
            r = !1),
            window.setTimeout(function() {
                a.parentNode && a.parentNode.removeChild(a)
            }, 300)
        }
        var a = highed.dom.cr("div", "highed-dimmer")
          , r = !1;
        return highed.dom.ap(document.body, a),
        highed.dom.style(a, {
            opacity: .7,
            "pointer-events": "auto",
            "z-index": 9999 + (o || 0)
        }),
        i && highed.dom.style(a, {
            opacity: 0
        }),
        r = highed.dom.on(a, "click", function(i) {
            highed.isFn(e) && e(),
            t && n()
        }),
        n
    }
}(),
highed.OverlayModal = function(e, t) {
    function i() {
        s || (highed.dom.style(n, {
            width: r.width + (r.width.toString().indexOf("%") > 0 ? "" : "px"),
            height: r.height + (r.height.toString().indexOf("%") > 0 ? "" : "px"),
            opacity: 1,
            left: "50%",
            top: "50%",
            transform: "translate(-50%, -50%)",
            "pointer-events": "auto",
            "min-width": r.minWidth + "px",
            "min-height": r.minHeight + "px",
            "z-index": r.zIndex
        }),
        highed.dom.style(document.body, {
            "overflow-x": "hidden",
            "overflow-y": "hidden"
        }),
        l = highed.showDimmer(o, !0, !1, r.zIndex - 1e4),
        window.setTimeout(function() {
            a.emit("Show")
        }, 300),
        s = !0)
    }
    function o(e) {
        s && (highed.dom.style(n, {
            width: "0px",
            height: "0px",
            opacity: 0,
            left: "-20000px",
            "pointer-events": "none"
        }),
        highed.dom.style(document.body, {
            "overflow-x": "",
            "overflow-y": ""
        }),
        highed.isFn(l) && l(),
        s = !1,
        e || a.emit("Hide"))
    }
    var n = highed.dom.cr("div", "highed-overlay-modal")
      , a = highed.events()
      , r = highed.merge({
        width: 200,
        height: 200,
        minWidth: 10,
        minHeight: 10,
        showOnInit: !0,
        zIndex: 1e4
    }, t)
      , l = !1
      , s = !1;
    return highed.ready(function() {
        highed.dom.ap(document.body, n)
    }),
    e && highed.dom.ap(n, e),
    o(!0),
    {
        on: a.on,
        show: i,
        hide: o,
        body: n
    }
}
,
highed.HSplitter = function(e, t) {
    function i(e) {
        var t;
        r.allowResize && highed.dom.isVisible(d) && (t = highed.dom.size(l),
        e = e || highed.dom.pos(p).x,
        highed.dom.style(s, {
            width: e + "px"
        }),
        highed.dom.style(d, {
            width: t.w - e + "px"
        }),
        highed.dom.style(p, {
            display: ""
        }))
    }
    function o(t, o) {
        var a, h, c = highed.dom.size(e);
        highed.dom.isVisible(d) ? n() : (highed.dom.style(s, {
            width: "100%"
        }),
        highed.dom.style(p, {
            display: "none"
        })),
        r.responsive && (a = window.getComputedStyle(s),
        "none" === a.float ? (highed.dom.style(d, {
            width: "100%"
        }),
        highed.dom.style(p, {
            display: "none"
        })) : n()),
        highed.dom.style([s, d, l, p], {
            height: (o || c.h) + "px"
        }),
        r.rightMax && highed.dom.style(d, {
            "max-width": r.rightMax + "px"
        }),
        r.leftMax && highed.dom.style(s, {
            "max-width": r.leftMax + "px"
        }),
        h = highed.dom.size(s),
        h.w === r.leftMax && highed.dom.style(d, {
            width: c.w - r.leftMax - 1 + "px"
        }),
        i()
    }
    function n() {
        highed.dom.style(s, {
            width: r.leftWidth + "%"
        }),
        highed.dom.style(d, {
            width: 100 - r.leftWidth + "%"
        })
    }
    var a, r = highed.merge({
        leftWidth: 40,
        noOverflow: !1,
        leftClasses: "",
        rightClasses: "",
        allowResize: !1,
        responsive: !1,
        leftMax: !1,
        rightMax: !1
    }, t), l = highed.dom.cr("div", "highed-hsplitter"), s = highed.dom.cr("div", "panel left " + r.leftClasses), d = highed.dom.cr("div", "panel right " + r.rightClasses), h = highed.dom.cr("div", "highed-hsplitter-body " + r.leftClasses), c = highed.dom.cr("div", "highed-hsplitter-body " + r.rightClasses), p = highed.dom.cr("div", "highed-hsplitter-resize-bar");
    return r.responsive && (s.className += " highed-hsplitter-body-responsive"),
    e = highed.dom.get(e),
    highed.dom.ap(highed.dom.get(e), highed.dom.ap(l, highed.dom.ap(s, h), highed.dom.ap(d, c))),
    n(),
    r.noOverflow && highed.dom.style([l, s, d], {
        "overflow-y": "hidden"
    }),
    r.allowResize && (highed.dom.ap(l, p),
    highed.dom.style(p, {
        left: r.leftWidth + "%"
    }),
    a = highed.Movable(p, "x").on("Moving", function(e) {
        i(e)
    })),
    {
        resize: o,
        left: h,
        right: c
    }
}
,
highed.VSplitter = function(e, t) {
    function i(t, i) {
        var l = highed.dom.size(e);
        highed.dom.style(n, {
            width: (t || l.w) + "px",
            height: (i || l.h) + "px"
        }),
        o.topHeight.toString().indexOf("px") > 0 ? (highed.dom.style(a, {
            height: o.topHeight
        }),
        highed.dom.style(r, {
            height: (i || l.h) - parseInt(o.topHeight, 10) + "px"
        })) : (highed.dom.style(a, {
            height: o.topHeight + "%"
        }),
        highed.dom.style(r, {
            height: 100 - o.topHeight + "%"
        }))
    }
    var o = highed.merge({
        topHeight: 40,
        noOverflow: !1
    }, t)
      , n = highed.dom.cr("div", "highed-vsplitter")
      , a = highed.dom.cr("div", "panel top")
      , r = highed.dom.cr("div", "panel bottom")
      , l = highed.dom.cr("div", "highed-vsplitter-body")
      , s = highed.dom.cr("div", "highed-vsplitter-body");
    return highed.dom.ap(highed.dom.get(e), highed.dom.ap(n, highed.dom.ap(a, l), highed.dom.ap(r, s))),
    o.noOverflow && highed.dom.style([n, a, r], {
        "overflow-y": "hidden"
    }),
    e = highed.dom.get(e),
    {
        resize: i,
        top: l,
        bottom: s
    }
}
,
highed.TabControl = function(e, t, i) {
    function o() {
        v.build(f.map(function(e) {
            return {
                title: e.title,
                click: e.focus,
                selected: e.selected
            }
        }))
    }
    function n(t, i) {
        var o = highed.dom.size(e)
          , n = highed.dom.size(c)
          , a = 0;
        highed.dom.style(h, {
            height: (i || o.h) + "px"
        }),
        highed.dom.style(p, {
            height: (i || o.h) - n.h + "px"
        }),
        b && b.focus(),
        f.forEach(function(e) {
            a += highed.dom.size(e.node).w || 0
        }),
        a > c.scrollWidth ? highed.dom.style(g, {
            display: "block"
        }) : highed.dom.style(g, {
            display: "none"
        })
    }
    function a() {
        f.some(function(e) {
            if (e.visible())
                return e.focus(),
                !0
        })
    }
    function r() {
        highed.dom.style(h, {
            display: "none"
        })
    }
    function l() {
        highed.dom.style(h, {
            display: "block"
        })
    }
    function s() {
        var e = f.filter(function(e) {
            return e.visible()
        }).length;
        e < 2 ? highed.dom.style(c, {
            display: "none"
        }) : highed.dom.style(c, {
            display: ""
        })
    }
    function d(e) {
        function o() {
            g = !1,
            highed.dom.style(d, {
                display: "none"
            }),
            s()
        }
        function a() {
            g = !0,
            highed.dom.style(d, {
                display: ""
            }),
            s()
        }
        function r() {
            var e = highed.dom.size(d)
              , t = highed.dom.pos(d);
            g && (b && (b.node.className = "tab",
            b.selected = !1,
            highed.dom.style(b.body, {
                opacity: 0,
                display: "none"
            })),
            !e || !t || !e.w,
            highed.dom.style(u, {
                width: e.w + "px",
                left: t.x + "px"
            }),
            d.className = "tab tab-selected",
            highed.dom.style(h, {
                opacity: 1,
                display: "block"
            }),
            b = v,
            b.selected = !0,
            l.emit("Focus"),
            m.emit("Focus", v))
        }
        var l = highed.events()
          , d = highed.dom.cr("div", "tab", e.title)
          , h = highed.dom.cr("div", "tab-body")
          , g = !0
          , v = {
            selected: !1
        };
        return e.id && (d.id = e.id),
        i && (h.className += " tab-body-padded"),
        highed.dom.ap(c, d),
        highed.dom.ap(p, h),
        highed.dom.on(d, "click", r),
        v = {
            on: l.on,
            focus: r,
            node: d,
            body: h,
            hide: o,
            show: a,
            title: e.title,
            visible: function() {
                return g
            }
        },
        b || r(),
        t && highed.dom.style(h, {
            overflow: "hidden"
        }),
        f.push(v),
        n(),
        s(),
        v
    }
    var h = highed.dom.cr("div", "highed-tab-control")
      , c = highed.dom.cr("div", "tabs")
      , p = highed.dom.cr("div", "body")
      , u = highed.dom.cr("div", "indicator")
      , g = highed.dom.cr("div", "highed-tab-control-more fa fa-chevron-right")
      , m = highed.events()
      , b = !1
      , f = []
      , v = highed.ContextMenu();
    return highed.dom.on(g, "click", function(e) {
        o(),
        v.show(e.clientX, e.clientY)
    }),
    highed.isNull(e) || highed.ready(function() {
        highed.dom.ap(e, highed.dom.ap(h, highed.dom.ap(c, g, u), p)),
        n(),
        s()
    }),
    {
        container: h,
        on: m.on,
        createTab: d,
        resize: n,
        selectFirst: a,
        show: l,
        hide: r,
        barSize: function() {
            return highed.dom.size(c)
        }
    }
}
,
highed.InspectorField = function(e, t, i, o, n, a) {
    function r(e, t) {
        e = e || o,
        highed.isFn(e) && e(t)
    }
    function l(e) {
        var t = e;
        return highed.isStr(t) && (t = parseFloat(t.replace(/,/g, "."))),
        t
    }
    function s(e, i) {
        var o = "";
        return void 0 != t ? Highcharts.cbsFormatNumber(e, i, o) : ""
    }
    function d() {
        if (i.attributes && i.attributes.length || !i.defaults)
            e = "json",
            i.defaults = i.defaults || {};
        else if (i.attributes = [],
        i.defaults)
            try {
                i.defaults = JSON.parse(i.defaults),
                Object.keys(i.defaults).forEach(function(e) {
                    var t, o = "string", n = i.defaults[e], a = e.toUpperCase();
                    highed.isNum(n) && (o = "number"),
                    n.length && "#" === n[0] && (a.indexOf("BACKGROUND") >= 0 || a.indexOf("COLOR") >= 0) && (o = "color"),
                    i.attributes.push({
                        id: e,
                        title: e,
                        dataType: o,
                        defaults: i.defaults[e],
                        tooltip: "",
                        values: t
                    })
                })
            } catch (e) {
                return void highed.log(3, "property", i.id, "skipped, no way to deduce the object members")
            }
    }
    var h = "^-?[0-9]+([" + Highcharts.defaultOptions.lang.decimalPoint + "][0-9]+)?$"
      , c = function(e, t) {
        var o = highed.dom.cr("div", "highed-field-reset fa fa-undo");
        return "null" === e && (e = null),
        highed.dom.on(o, "click", function() {
            highed.isFn(t) && t(i.defaults || e)
        }),
        o
    }
      , p = {
        string: function(e, o) {
            var n = highed.dom.cr("input", "highed-field-input", "", a)
              , l = c(i.defaults || e || t, function(t) {
                n.value = e = t,
                r(o, t)
            });
            highed.dom.on(n, "change", function(e) {
                r(o, n.value),
                e.cancelBubble = !0
            });
            var s = i.maxLength;
            return s && (n.maxLength = s),
            n.value = void 0 == e || null == e ? t : e,
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), l, n)
        },
        multiline: function(e, o) {
            var n = highed.dom.cr("textarea", "highed-field-input", "", a)
              , l = c(i.defaults || e || t, function(t) {
                n.value = e = t,
                r(o, t)
            });
            highed.dom.on(n, "change", function(e) {
                r(o, n.value),
                e.cancelBubble = !0
            });
            var s = i.maxLength;
            return s && (n.maxLength = s),
            n.value = void 0 == e || null == e ? t : e,
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), l, n)
        },
        stringPattern: function(e, o, n, a) {
            var l = highed.dom.cr("input", "highed-field-input", "", a)
              , s = c(i.defaults || e, function(t) {
                l.value = e = t,
                r(o, t)
            });
            return highed.dom.on(l, "change", function(e) {
                r(o, l.value),
                e.cancelBubble = !0;
            }),
            l.value = void 0 === e || null === e ? t : e,
            l.pattern = n,
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), s, l)
        },
        stringNumber: function(e, i) {
            return p.stringPattern(s(e || t), i, h, a)
        },
        number: function(e, o) {
            var n = highed.dom.cr("input", "highed-field-input", "", a)
              , l = c(i.defaults || e || t, function(t) {
                n.value = e = t,
                r(o, parseFloat(t))
            });
            return n.type = "number",
            highed.isNull(i.custom) || (n.step = parseFloat(i.custom.step),
            n.min = parseFloat(i.custom.minValue),
            n.max = parseFloat(i.custom.maxValue)),
            highed.dom.on(n, "change", function() {
                var e = parseFloat(n.value)
                  , t = n.min && e < n.min
                  , i = n.max && e > n.max;
                t || i || r(o, e)
            }),
            n.value = e || t,
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), l, n)
        },
        range: function(e, o) {
            var n = highed.Slider(!1, {
                min: i.custom.minValue,
                max: i.custom.maxValue,
                step: i.custom.step,
                value: e || t,
                resetTo: t || i.defaults
            });
            return n.on("Change", function(e) {
                r(o, e)
            }),
            n.container
        },
        boolean: function(e, o) {
            var n = highed.dom.cr("input", "", "", a)
              , l = c(i.defaults || e || t, function(t) {
                n.checked = e = highed.toBool(t),
                r(o, e)
            });
            return n.type = "checkbox",
            n.checked = highed.toBool(e || t),
            highed.dom.on(n, "change", function() {
                r(o, n.checked)
            }),
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), l, n)
        },
        color: function(e, o) {
            function n(e, t) {
                e && "null" !== e && "undefined" !== e && "undefined" != typeof e || (e = "#FFFFFF"),
                highed.dom.style(s, {
                    background: e,
                    color: highed.getContrastedColor(e)
                })
            }
            function l() {
                try {
                    e = JSON.parse(e)
                } catch (e) {}
                highed.isArr(e) && (e = "#FFF")
            }
            var s = highed.dom.cr("div", "highed-field-colorpicker", "", a)
              , d = highed.dom.cr("div", "highed-field-reset fa fa-undo")
              , h = e || t || i.defaults;
            return "null" === h && (h = null),
            l(),
            highed.dom.on(s, "click", function(i) {
                highed.pickColor(i.clientX, i.clientY, e || t, function(t) {
                    highed.isArr(e) && (e = "#FFFFFF"),
                    e = t,
                    n(t),
                    r(o, t)
                })
            }),
            highed.dom.on(d, "click", function() {
                e = h,
                l(),
                n(e),
                r(o, e)
            }),
            n(e || t),
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), s, d)
        },
        colorPicker: function(e, i, o) {
            function n(e, t) {
                e && "null" !== e && "undefined" !== e && "undefined" != typeof e || (e = "#FFFFFF"),
                highed.dom.style(s, {
                    background: e,
                    color: highed.getContrastedColor(e)
                })
            }
            function l() {
                try {
                    e = JSON.parse(e)
                } catch (e) {}
                highed.isArr(e) && (e = "#FFF")
            }
            var s = highed.dom.cr("div", "highed-field-colorpicker", "", a + "_color");
            return l(),
            highed.dom.on(s, "click", function(a) {
                highed.pickColor(a.clientX, a.clientY, e || t, i, function(t) {
                    highed.isArr(e) && (e = "#FFFFFF"),
                    e = t,
                    n(t),
                    r(o, t)
                })
            }),
            n(e || t),
            highed.dom.ap(highed.dom.cr("div", ""), s)
        },
        font: function(e, t) {
            return p.cssobject(e, t)
        },
        configset: function(e, t) {
            return p.string(e, t)
        },
        json: function(e, o) {
            function n() {
                document.body && h && (document.getElementById(a) ? h.refresh() : setTimeout(n, 10))
            }
            function l(e) {
                try {
                    e = JSON.parse(e),
                    r(o, e),
                    d.innerHTML = "",
                    highed.dom.style(d, {
                        display: "none",
                        opacity: 0
                    })
                } catch (e) {
                    d.innerHTML = "Syntax error: " + e,
                    highed.dom.style(d, {
                        display: "block",
                        opacity: 1
                    })
                }
            }
            var s = highed.dom.cr("textarea", "highed-field-input", "", a)
              , d = highed.dom.cr("div", "highed-field-error")
              , h = !1
              , p = function(e) {
                h ? h.setValue(JSON.stringify(e, void 0, "\t")) : s.value = JSON.stringify(e, void 0, "\t")
            }
              , u = c(i.defaults || e || t, function(t) {
                e = t,
                p(t),
                r(o, t)
            })
              , g = highed.dom.ap(highed.dom.cr("div", "highed-field-container"), s, u, d);
            return "undefined" != typeof window.CodeMirror ? (h = CodeMirror.fromTextArea(s, {
                lineNumbers: !0,
                mode: "application/json",
                theme: highed.option("codeMirrorTheme")
            }),
            p(e || t || i.defaults),
            h.on("change", function() {
                l(h.getValue())
            }),
            n()) : (p(e || t || i.defaults),
            highed.dom.on(s, "change", function() {
                l(s.value)
            })),
            g
        },
        cssobject: function(e, n) {
            var a = highed.FontPicker(n || o, e || t)
              , l = c(i.defaults || e || t, function(t) {
                e = t,
                a.set(e),
                r(n, t)
            });
            return highed.dom.ap(highed.dom.cr("div", "highed-field-container"), l, a.container)
        },
        options: function(e, o) {
            var n = highed.DropDown(null, a)
              , l = c(i.defaults, function(t) {
                e = t,
                n.selectById(e),
                r(o, t)
            });
            if (highed.isStr(i.values))
                try {
                    i.values = JSON.parse(i.values)
                } catch (e) {
                    i.values = i.values.split(" ")
                }
            return n.addItems(i.values),
            n.addItem({
                title: "auto",
                id: i.defaults
            }),
            n.selectById(e || t || i.defaults),
            n.on("Change", function(e) {
                r(o, e.id())
            }),
            highed.dom.ap(highed.dom.cr("div", "highed-field-container"), n.container, l)
        },
        object: function(e, o) {
            var n = highed.dom.cr("table", "highed-customizer-table", "", a);
            highed.isNull(e || t);
            if (e = e || t || {},
            highed.isStr(e))
                try {
                    e = JSON.parse(e)
                } catch (e) {}
            return i && highed.isArr(i.attributes) && i.attributes.forEach(function(t) {
                e[t.name || t.id] = e[t.name || t.id] || t.defaults || (t.dataType.indexOf("object") >= 0 ? {} : ""),
                t.title = highed.uncamelize(t.title),
                highed.dom.ap(n, highed.InspectorField(t.dataType, e[t.name || t.id] || t.defaults, t, function(i) {
                    e[t.name || t.id] = i,
                    r(o, e)
                }))
            }),
            n
        },
        array: function() {
            function e(e, n) {
                function a(e) {
                    e && (s[g].value = e,
                    r())
                }
                function r() {
                    highed.isFn(o) && o(Object.keys(s).map(function(e) {
                        return s[e].value
                    }))
                }
                var l, c = highed.dom.cr("span", "highed-icon fa fa-trash"), u = highed.dom.cr("tr"), g = ++d;
                highed.isArr(e) && (e = e[g]),
                s[g] = {
                    id: g,
                    row: u,
                    value: e
                },
                l = p[i.subType] ? p[i.subType](e || t[g] || i.defaults, a) : p.string(e, a),
                highed.dom.ap(h, highed.dom.ap(u, highed.dom.ap(highed.dom.cr("td"), l), highed.dom.ap(highed.dom.cr("td"), c))),
                highed.dom.on(c, "click", function(e) {
                    return delete s[g],
                    h.removeChild(u),
                    r(),
                    e.cancelBubble = !0,
                    e.preventDefault(),
                    e.stopPropagation(),
                    e.stopImmediatePropagation(),
                    !1
                }),
                n || a()
            }
            var n = highed.dom.cr("div", "", "", a)
              , r = highed.dom.cr("span", "highed-field-array-add fa fa-plus", "")
              , l = highed.dom.cr("div", "highed-inline-blocks")
              , s = {}
              , d = 0
              , h = highed.dom.cr("table", "highed-field-table");
            if (highed.isStr(t))
                try {
                    t = JSON.parse(t)
                } catch (e) {}
            return highed.dom.ap(n, h),
            highed.dom.on(r, "click", function() {
                e()
            }),
            highed.isArr(t) && t.forEach(function(t) {
                e(t, !0)
            }),
            highed.dom.ap(n, l, r),
            n
        },
        legendDataClassesArray: function() {
            function e(e, t) {
                function i(e) {
                    var t = k;
                    e ? (t.value.to = e,
                    t.value.displayValueTo = Highcharts.cbsFormatNumber(e)) : delete t.value.to,
                    r()
                }
                function n(e) {
                    var t = k
                      , i = c[c.indexOf(k) - 1];
                    e ? (t.value.from = e,
                    t.value.displayValueFrom = Highcharts.cbsFormatNumber(e),
                    i && (i.value.to = e,
                    i.value.displayValueTo = Highcharts.cbsFormatNumber(e))) : e || i || delete t.value.from,
                    r()
                }
                function r() {
                    if (highed.isFn(o)) {
                        var e = c.map(function(e) {
                            var t = e.value
                              , i = l(t.from)
                              , o = l(t.to)
                              , n = {};
                            return highed.isNum(i) && (n.from = i,
                            n.displayValueFrom = t.displayValueFrom),
                            highed.isNum(o) && (n.to = o,
                            n.displayValueTo = t.displayValueTo),
                            n
                        });
                        o(e)
                    }
                }
                function d(e) {
                    legendColors[f()] = e,
                    b(legendColors)
                }
                function b(e) {
                    highed.isFn(o) && o(e, "colors")
                }
                function f() {
                    return k.id % legendColors.length
                }
                var v, y, x = u++, G = highed.dom.cr("span", "highed-icon fa fa-trash", "", "removeLegendItem" + x), M = highed.dom.cr("tr"), C = highed.dom.cr("tr"), k = null;
                highed.isArr(e) && (e = e[x]),
                k = {
                    id: x,
                    rowFrom: M,
                    rowTo: C,
                    value: e || {}
                },
                c.push(k);
                var w = c.indexOf(k) - 1
                  , A = c[w];
                A && (g.removeChild(A.rowTo),
                0 == Object.keys(k.value).length && A.value && A.value.to && (k.value = {
                    from: l(A.value.to)
                }));
                var B = legendColors[f()]
                  , S = k.value
                  , L = void 0 !== S ? s(S.displayValueFrom, S.from) : ""
                  , T = a + "_txt_from_" + x;
                v = p.stringPattern(L, n, h, T),
                highed.dom.ap(g, highed.dom.ap(M, highed.dom.ap(highed.dom.cr("td"), p.colorPicker(B, m, d)), highed.dom.ap(highed.dom.cr("td"), v), highed.dom.ap(highed.dom.cr("td"), G)));
                var F = void 0 !== S ? s(S.displayValueTo, S.to) : "";
                T = a + "_txt_to_" + x,
                y = p.stringPattern(F, i, h, T),
                highed.dom.ap(g, highed.dom.ap(C, highed.dom.ap(highed.dom.cr("td"), ""), highed.dom.ap(highed.dom.cr("td"), y), highed.dom.ap(highed.dom.cr("td"), ""))),
                highed.dom.on(G, "click", function(e) {
                    var t = c.indexOf(k)
                      , i = c[t - 1]
                      , o = c[t + 1];
                    return i && o && (i.value.to = o.value.from,
                    i.value.displayValueTo = o.value.displayValueFrom),
                    c.splice(t, 1),
                    g.removeChild(M),
                    null != C.parentNode && g.removeChild(C),
                    !o && i && highed.dom.ap(g, highed.dom.ap(i.rowTo, highed.dom.ap(highed.dom.cr("td"), i.itemTo), highed.dom.ap(highed.dom.cr("td"), ""))),
                    legendColors.splice(t, 1),
                    b(legendColors),
                    c.forEach(function(e, t) {
                        e.id = t
                    }),
                    u = c.length,
                    r(),
                    e.cancelBubble = !0,
                    e.preventDefault(),
                    e.stopPropagation(),
                    e.stopImmediatePropagation(),
                    !1
                }),
                t || (n(k.value.from),
                i(k.value.to))
            }
            var n = highed.dom.cr("div", "", "", a)
              , r = highed.dom.cr("span", "highed-field-array-add fa fa-plus", "", "addLegendItem")
              , d = highed.dom.cr("div", "highed-inline-blocks")
              , c = []
              , u = 0
              , g = highed.dom.cr("table", "highed-field-table")
              , m = highed.getMapColor("map", i.chartOptions.mapColorSelection);
            return legendColors = i.chartOptions.colors,
            highed.dom.ap(n, g),
            highed.dom.on(r, "click", function() {
                e()
            }),
            highed.isArr(t) && t.forEach(function(t) {
                t.text || e(t, !0)
            }),
            highed.dom.ap(n, d, r),
            n
        }
    }
      , u = highed.dom.cr("span", "highed-icon highed-field-help fa fa-question-circle")
      , g = highed.dom.cr("td", "highed-customizer-table-help")
      , m = highed.dom.cr("td", "highed-field-table-widget-column")
      , b = highed.dom.cr("td")
      , f = highed.dom.cr("span", "highed-customize-type");
    return highed.isNull(t) && (t = ""),
    "cssobject" === e && (e = "object"),
    e && e.indexOf("|") >= 0 && (e = e.indexOf("object") >= 0 ? "object" : e.split("|")[0]),
    highed.isNull(i.custom) || highed.isNull(i.custom.minValue) || highed.isNull(i.custom.maxValue) || highed.isNull(i.custom.step) || (e = "range"),
    e && 0 === e.indexOf("array") && (i.subType = e.substr(6, e.length - 7),
    e = "array",
    "object" === i.subType && d()),
    e && 0 === e.indexOf("legendDataClassesArray") && (i.subType = e.substr(6, e.length - 7),
    e = "legendDataClassesArray",
    "object" === i.subType && d()),
    "object" === e && d(),
    i.tooltip || i.tooltipText || (n = !0),
    highed.onPhone() ? highed.dom.on(u, "click", function() {
        highed.Tooltip(0, 0, i.tooltip || i.tooltipText, !0)
    }) : highed.dom.on([u], "mouseover", function(e) {
        highed.Tooltip(e.clientX, e.clientY, i.tooltip || i.tooltipText)
    }),
    n && (highed.dom.style(u, {
        display: "none"
    }),
    m.colSpan = 2),
    f.className += " highed-customize-type-" + e,
    highed.dom.ap(highed.dom.ap(highed.dom.cr("tr"), highed.dom.ap(b, highed.dom.cr("span", "highed-customize-field-label", i.title), f), highed.dom.ap(m, p[e] ? p[e]() : p.string()), !n && highed.dom.ap(g, u)))
}
,
highed.List = function(e, t) {
    function i(e) {
        function t(t) {
            if (f && (f.selected = !1,
            f.node.className = "item"),
            f = o,
            f.selected = !0,
            i.className = "item item-selected",
            v.emit("Select", e.id),
            m.innerHTML = '<span class="icon fa fa-th-list"></span>' + e.title,
            highed.isFn(e.click))
                return e.click(t)
        }
        var i = highed.dom.cr("a", "item", e.title, e.id)
          , o = {};
        return highed.dom.on(i, "click", t),
        highed.dom.ap(g, i),
        o = {
            id: e.id,
            title: e.title,
            node: i,
            select: t,
            selected: !1
        },
        y.push(o),
        f || t(),
        o
    }
    function o(e) {
        highed.isArr(e) && e.forEach(i)
    }
    function n() {
        g.innerHTML = ""
    }
    function a() {
        var i = highed.dom.size(e);
        highed.dom.size(g);
        t && i.h < 50 && 0 !== i.h && i.h ? (highed.dom.style(m, {
            display: "block"
        }),
        highed.dom.style(g, {
            display: "none"
        })) : t && (highed.dom.style(m, {
            display: "none"
        }),
        highed.dom.style(g, {
            display: ""
        }))
    }
    function r() {
        highed.dom.style(g, {})
    }
    function l() {}
    function s() {
        y.length > 0 && y[0].select()
    }
    function d(e) {
        y.some(function(t) {
            if (e === t.title)
                return t.select(),
                !0
        })
    }
    function h(e) {
        y.some(function(t) {
            if (e === t.id)
                return t.select(),
                !0
        })
    }
    function c() {
        f && f.select()
    }
    function p() {
        return y.length
    }
    function u() {
        return f
    }
    var g = highed.dom.cr("div", "highed-list")
      , m = highed.dom.cr("div", "highed-list-compact", "compact")
      , b = highed.ContextMenu()
      , f = !1
      , v = highed.events()
      , y = [];
    return highed.dom.on(m, "click", function(e) {
        b.build(y.map(function(e) {
            return {
                title: e.title,
                click: e.select,
                selected: e.selected
            }
        })),
        b.show(e.clientX, e.clientY)
    }),
    highed.dom.ap(e, g, m),
    {
        on: v.on,
        addItem: i,
        addItems: o,
        clear: n,
        resize: a,
        show: r,
        hide: l,
        selectFirst: s,
        select: d,
        selectById: h,
        reselect: c,
        selected: u,
        count: p,
        container: g
    }
}
,
function() {
    var e = highed.dom.cr("div", "highed-colorpicker highed-colorpicker-responsive")
      , t = highed.dom.cr("canvas", "picker")
      , i = highed.dom.cr("div", "highed-ok-button", "Close")
      , o = t.getContext("2d");
    highed.ready(function() {
        highed.dom.ap(document.body, e)
    }),
    highed.pickColor = function(n, a, r, l, s) {
        function d() {
            var e = l.length
              , i = m.w
              , n = m.h / e;
            t.width = m.w,
            t.height = m.h,
            o.fillStyle = "#FFF",
            o.fillRect(0, 0, m.w, m.h),
            l.forEach(function(e, t) {
                o.fillStyle = e,
                o.fillRect(0, t * n, i, n)
            })
        }
        function h() {
            highed.dom.style(e, {
                opacity: 0,
                left: "-20000px",
                "pointer-events": "none"
            }),
            b(),
            f(),
            v()
        }
        function c(e, t, i) {
            var o = "#" + (e << 16 | t << 8 | i).toString(16);
            return 5 === o.length ? o.replace("#", "#00") : 6 === o.length ? o.replace("#", "#0") : o
        }
        function p(e) {
            var i = e.clientX || e.touches[0].clientX || 0
              , r = e.clientY || e.touches[0].clientY || 0
              , l = highed.dom.pos(t)
              , d = o.getImageData(i - l.x - n, r - l.y - a, 1, 1).data
              , p = c(d[0] || 0, d[1], d[2]);
            return highed.isFn(s) && s(p),
            e.cancelBubble = !0,
            e.preventDefault(),
            e.stopPropagation(),
            e.stopImmediatePropagation(),
            h(),
            !1
        }
        var u = highed.dom.size(document.body)
          , g = highed.dom.size(e)
          , m = highed.dom.size(t)
          , b = !1
          , f = !1
          , v = !1;
        return n > u.w - g.w && (n = u.w - g.w - 10),
        a > u.h - g.h && (a = u.h - g.h - 10),
        highed.dom.style(e, {
            left: n + "px",
            top: a + "px",
            opacity: 1,
            "pointer-events": "auto"
        }),
        v = highed.showDimmer(h, !0, !0, 5),
        f = highed.dom.on(i, "click", h),
        b = highed.dom.on(t, ["mousedown", "touchstart"], function(e) {
            var i = highed.dom.on(t, ["mousemove", "touchmove"], p)
              , o = highed.dom.on(document.body, ["mouseup", "touchend"], function() {
                i(),
                o()
            });
            p(e)
        }),
        d(),
        {}
    }
    ,
    highed.dom.ap(e, t, i)
}(),
function() {
    highed.AutoComplete = function(e, t, i) {
        function o() {
            g = i,
            v.setAttribute("type", "search"),
            t.selector = v,
            a(t)
        }
        function n(e) {
            var t = function(e) {
                return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
            };
            return function(i, o) {
                var n = [];
                if (void 0 === e || null === e)
                    return void o(n);
                var a = new RegExp(t(i),"i");
                jQuery.each(e, function(e, t) {
                    a.test(t) && n.push(t)
                }),
                o(n.sort())
            }
        }
        function a(e) {
            jQuery(v).typeahead({
                hint: !1,
                highlight: !0,
                minLength: 3
            }, {
                name: "source",
                source: n(e.source),
                limit: void 0 !== e.source ? e.source.length : 0
            }).bind("typeahead:autocompleted", function(t, i) {
                e.onAutoComplete(i)
            }).bind("typeahead:selected", function(t, i) {
                e.onAutoComplete(i)
            })
        }
        function r(e) {
            jQuery(v).unbind(),
            a(e)
        }
        function l() {
            return c(),
            ['<div id="' + b + '">', '<input type="search" class="typeahead form-control" placeholder="' + y + '" title="' + y + '">', "</div>"].join("")
        }
        function s(e, i) {
            var o = ["function autoCompleteRegionSearch(source){", "if(source === undefined || source === null)", "return;", "var substringMatcher = " + n.toString() + ";", 'jQuery("#' + b + ' .typeahead").typeahead({', "hint: false,", "highlight: true,", "minLength: " + t.minChars, "},", "{", 'name: "source",', "source: substringMatcher(source),", "limit: source.length", '}).bind("typeahead:autocompleted", function(obj, value) {', i, '}).bind("typeahead:selected", function(obj, value){' + i, "})", ";", "};"].join("");
            return e + "['autoCompleteRegionSearch'] = " + o
        }
        function d(e, t) {}
        function h() {
            highed.isNull(f) || (g = !1,
            highed.isNull(f.parentElement) || f.parentElement.removeChild(f))
        }
        function c() {
            b = highed.uuid()
        }
        function p(e) {
            if (!highed.isNull(e)) {
                y = e,
                v.setAttribute("placeholder", y),
                v.setAttribute("title", y);
                var t = v.value;
                v.value = "temp",
                v.value = t
            }
        }
        var u = highed.events()
          , g = !1
          , m = highed.uuid()
          , b = m
          , f = highed.dom.cr("div", void 0, void 0, "searchRegionDiv")
          , v = highed.dom.cr("input", "typeahead highed-autoComplete", void 0, "searchRegion")
          , y = !1;
        return e && (e = highed.dom.get(e),
        highed.dom.ap(e, f)),
        highed.dom.ap(f, v),
        o(),
        {
            container: f,
            input: v,
            isVisible: function() {
                return g
            },
            updateTypeAhead: r,
            removeTypeAheadFromDom: h,
            setPlaceHolderText: p,
            embeddable: {
                refreshEmbedId: c,
                getEmbeddableHtml: l,
                getEmbeddableJavaScript: s,
                getEmbeddableJavaScriptInit: d
            },
            on: u.on
        }
    }
}(),
highed.Toolbar = function(e, t) {
    function i(e, t) {
        var i = highed.dom.cr("div", "icon highed-icon fa " + (e.css || ""), "", e.id);
        highed.dom.on(i, "click", function(t) {
            highed.isFn(e.click) && e.click(t)
        }),
        i.title = e.tooltip,
        highed.dom.ap("left" === t ? l : s, i)
    }
    function o(e, t) {
        var i = highed.dom.cr("div", "highed-ok-button highed-toolbar-button", e.title || "");
        e.id && (i.id = e.id),
        highed.dom.on(i, "click", function(t) {
            highed.isFn(e.click) && e.click(t)
        }),
        i.title = e.tooltip,
        highed.dom.ap("left" === t ? l : s, i)
    }
    function n(e, t, i) {
        var o = highed.dom.cr("div", "icon highed-icon fa " + (e.css || ""));
        highed.dom.on(o, "click", function(i) {
            highed.dom.get(i.target);
            return i.target.classList.contains(t.css) && highed.isFn(t.click) ? (i.target.classList.remove(t.css),
            i.target.classList.add(e.css),
            i.target.title = e.tooltip,
            void t.click(i)) : void (i.target.classList.contains(e.css) && highed.isFn(e.click) && (i.target.classList.remove(e.css),
            i.target.classList.add(t.css),
            i.target.title = t.tooltip,
            e.click(i)))
        }),
        o.title = e.tooltip,
        highed.dom.ap("left" === i ? l : s, o)
    }
    var a = highed.merge({
        additionalCSS: []
    }, t)
      , r = highed.dom.cr("div", "highed-toolbar " + a.additionalCSS.join(" "))
      , l = highed.dom.cr("div", "highed-toolbar-left")
      , s = highed.dom.cr("div", "highed-toolbar-right")
      , d = highed.dom.cr("div", "highed-toolbar-center");
    highed.dom.cr("div", "icons");
    return highed.dom.ap(e, highed.dom.ap(r, l, d, s)),
    {
        container: r,
        addIcon: i,
        addToggleIcon: n,
        addButton: o,
        left: l,
        center: d,
        right: s
    }
}
,
function() {
    highed.FontPicker = function(e, t) {
        function i() {
            highed.isFn(e) && e(t)
        }
        function o(e, o) {
            highed.dom.style(h, {
                background: e
            }),
            t.color = e,
            o || i()
        }
        function n(e) {
            if (highed.isStr(e))
                try {
                    e = JSON.parse(e)
                } catch (e) {
                    return void highed.log(0, "Error in FontPicker::set")
                }
            t = highed.merge({
                fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif',
                color: "#333",
                fontSize: "18px",
                fontWeight: "normal",
                fontStyle: "normal"
            }, e),
            s.set("bold" === t.fontWeight),
            d.set("italic" === t.fontStyle),
            o(t.color, !0),
            r.selectById(t.fontFamily),
            l.selectById(t.fontSize.replace("px", ""))
        }
        var a = highed.dom.cr("div", "highed-font-picker")
          , r = highed.DropDown()
          , l = highed.DropDown()
          , s = highed.PushButton(!1, "bold")
          , d = highed.PushButton(!1, "italic")
          , h = highed.dom.cr("span", "font-color", "&nbsp;");
        if (highed.isStr(t))
            try {
                t = JSON.parse(t)
            } catch (e) {}
        return r.addItems(highed.meta.fonts),
        l.addItems([8, 10, 12, 14, 16, 18, 20, 22, 25, 26, 28, 30, 32, 34]),
        n(t),
        r.on("Change", function(e) {
            return t.fontFamily = e.id(),
            i()
        }),
        l.on("Change", function(e) {
            return t.fontSize = e.id() + "px",
            i()
        }),
        s.on("Toggle", function(e) {
            t.fontWeight = e ? "bold" : "normal",
            i()
        }),
        d.on("Toggle", function(e) {
            t.fontStyle = e ? "italic" : "normal",
            i()
        }),
        highed.dom.on(h, "click", function(e) {
            highed.pickColor(e.clientX, e.clientY, t.color, o)
        }),
        highed.dom.ap(a, r.container, highed.dom.ap(highed.dom.cr("div", "highed-font-picker-button-container"), l.container, highed.dom.ap(highed.dom.cr("div", "highed-font-picker-buttons"), s.button, d.button, h))),
        {
            set: n,
            container: a
        }
    }
}(),
highed.WizardStepper = function(e, t, i) {
    function o() {
        var e = f.filter(function(e) {
            return e.visible
        });
        b = 0,
        e.forEach(function(t, i) {
            0 === i ? t.bar.className = "bar bar-first" : i === e.length - 1 ? t.bar.className = "bar bar-last" : t.bar.className = "bar",
            t.number = ++b,
            t.bar.className += " " + ("bottom" === d.indicatorPos ? "bar-bottom" : "bar-top")
        })
    }
    function n(e) {
        function t() {
            m && (m.bubble.innerHTML = "",
            highed.dom.style(m.bubble, {
                height: "",
                width: "",
                bottom: "-4px",
                "font-size": "0px"
            }),
            highed.dom.style(m.body, {
                opacity: 0,
                display: "none",
                "pointer-events": "none"
            }),
            "top" === d.indicatorPos && highed.dom.style(m.bubble, {
                top: "-6px",
                bottom: ""
            }),
            m.label.className = "label-inactive",
            u.innerHTML = e.title + " - " + i.number + "/" + b,
            g.innerHTML = i.number + "/" + b),
            i.bubble.innerHTML = i.number,
            highed.dom.style(i.bubble, {
                height: "25px",
                width: "25px",
                bottom: "-8px",
                "font-size": "16px"
            }),
            highed.dom.style(i.body, {
                opacity: 1,
                display: "block",
                "pointer-events": "auto"
            }),
            "top" === d.indicatorPos && highed.dom.style(i.bubble, {
                top: "-10px"
            }),
            m = i,
            m.label.className = "label-active",
            h.emit("Step", i, b, e)
        }
        var i = {
            number: ++b,
            node: highed.dom.cr("div", "highed-wizstepper-item"),
            label: highed.dom.cr("div", "step-label", e.title, e.id),
            bubble: highed.dom.cr("div", "bubble " + ("bottom" === d.indicatorPos ? "bubble-bottom" : "bubble-top")),
            bar: highed.dom.cr("div", "bar " + ("bottom" === d.indicatorPos ? "bar-bottom" : "bar-top")),
            body: highed.dom.cr("div", "highed-step-body"),
            visible: !0
        };
        return i.title = e.title,
        i.hide = function() {
            highed.dom.style(i.node, {
                display: "none"
            }),
            i.visible && (b--,
            i.visible = !1,
            o())
        }
        ,
        i.visible = function() {
            return visible
        }
        ,
        highed.dom.on(i.node, "click", t),
        m || t(),
        i.activate = t,
        f.push(i),
        o(),
        highed.dom.ap(p, highed.dom.ap(i.node, i.label, i.bar, i.bubble)),
        highed.dom.ap(c, i.body),
        h.emit("AddStep", m, b),
        i
    }
    function a() {
        var e = f.filter(function(e) {
            return e.visible
        });
        m && m.number < b && e[m.number].activate()
    }
    function r() {
        var e = f.filter(function(e) {
            return e.visible
        });
        m && m.number > 1 && e[m.number - 2].activate()
    }
    function l(t, i) {
        var o = highed.dom.size(e);
        highed.dom.style(c, {
            height: (i || o.h) + "px"
        })
    }
    function s() {
        f.some(function(e, t) {
            if (e.visible)
                return e.activate(),
                !0
        })
    }
    var d = highed.merge({
        indicatorPos: "top"
    }, i)
      , h = highed.events()
      , c = highed.dom.cr("div", "highed-wizstepper-body")
      , p = highed.dom.cr("div", "highed-wizstepper-indicators")
      , u = highed.dom.cr("div", "highed-wizstepper-current")
      , g = highed.dom.cr("div", "highed-wizstpper-current-bubble")
      , m = !1
      , b = 0
      , f = []
      , v = highed.ContextMenu();
    return highed.dom.on(u, "click", function(e) {
        var t = f.filter(function(e) {
            return e.visible
        });
        v.build(t.map(function(e) {
            return {
                title: e.title,
                click: e.activate,
                selected: m.title === e.title
            }
        })),
        v.show(e.clientX, e.clientY)
    }),
    highed.dom.ap(t, p, highed.dom.ap(u, g)),
    highed.dom.ap(e, c),
    {
        on: h.on,
        addStep: n,
        next: a,
        resize: l,
        previous: r,
        selectFirst: s,
        body: c
    }
}
,
function() {
    function e() {
        highed.dom.style(t, {
            opacity: 0,
            "pointer-events": "none"
        })
    }
    var t = highed.dom.cr("div", "highed-tooltip highed-tooltip-fixed");
    highed.ready(function() {
        highed.dom.ap(document.body, t)
    }),
    highed.dom.on(t, "mouseout", e),
    highed.dom.on(t, "click", e),
    highed.Tooltip = function(e, i, o, n) {
        var a = highed.dom.size(document.body);
        e < 0 && (e = 0),
        i < 0 && (i = 0),
        e > a.w - 200 && (e = a.w - 200),
        highed.dom.style(t, {
            opacity: 1,
            "pointer-events": "auto",
            left: e - 20 + "px",
            top: i - 20 + "px",
            width: "200px"
        }),
        n && highed.dom.style(t, {
            opacity: 1,
            "pointer-events": "auto",
            width: "90%",
            height: "90%",
            left: "50%",
            top: "50%",
            transform: "translate(-50%, -50%)"
        }),
        t.innerHTML = o
    }
}(),
highed.PushButton = function(e, t, i) {
    function o() {
        i ? a.className += " highed-pushbutton-active" : a.className = a.className.replace(" highed-pushbutton-active", "")
    }
    function n(e) {
        i = e,
        o()
    }
    var a = highed.dom.cr("span", "highed-pushbutton fa fa-" + t)
      , r = highed.events();
    return highed.dom.on(a, "click", function() {
        i = !i,
        o(),
        r.emit("Toggle", i)
    }),
    highed.isNull(e) || e === !1 || highed.dom.ap(e, a),
    o(),
    {
        set: n,
        button: a,
        on: r.on
    }
}
,
highed.Tree = function(e) {
    function t(e, t, o, n, a, p, u) {
        function g() {
            r && (r.className = "parent-title"),
            v.className = "parent-title parent-title-selected",
            r = v,
            l = function() {
                s.emit("Select", e, highed.uncamelize(t), e.dataIndex)
            }
            ,
            s.emit("Select", e, highed.uncamelize(t), e.dataIndex)
        }
        function m() {
            var i = (e.id || t).replace(/\-\-/g, ".").replace(/\-/g, ".");
            e.isArrayParent && (i += ":" + e.dataIndex),
            h[i] = w,
            w || Object.keys(h).forEach(function(e) {
                0 === e.indexOf(i) && (h[e] = !1)
            })
        }
        function b() {
            !w && Object.keys(e.children).length && (y.className = "exp-col-icon fa fa-folder-open-o",
            highed.dom.style(x, {
                display: "block"
            }),
            w = !0,
            m()),
            g()
        }
        function f() {
            u || !p && 0 === Object.keys(e.children).length || (w = !w,
            w ? (y.className = "exp-col-icon fa fa-folder-open-o",
            highed.dom.style(x, {
                display: "block"
            })) : (y.className = "exp-col-icon fa fa-folder-o",
            highed.dom.style(x, {
                display: "none"
            })),
            m())
        }
        var v = highed.dom.cr("div", "parent-title", e.title || highed.uncamelize(t))
          , y = highed.dom.cr("div", "exp-col-icon fa fa-folder-o")
          , x = highed.dom.cr("div", "parent-body")
          , G = highed.dom.cr("div", "node", "", e.id || t)
          , M = highed.dom.cr("div", "right-icons")
          , C = highed.dom.cr("div", "highed-icon fa fa-minus-square-o")
          , k = highed.dom.cr("div", "highed-icon fa fa-plus-square-o")
          , w = !1
          , A = !1;
        if (t || e.title)
            return e.dataIndex = e.dataIndex || a,
            !p && 0 === e.entries.length && 0 === Object.keys(e.children).length,
            (p || e.isArrayParent) && (highed.dom.ap(G, M),
            p && highed.dom.ap(M, k),
            e.isArrayParent && highed.dom.ap(M, C),
            highed.dom.on(C, "click", function() {
                confirm("Really delete the entry?") && (arr = highed.getAttr(n, e.id, a),
                arr = arr.filter(function(e, t) {
                    return t !== a
                }),
                highed.setAttr(n, e.id, arr),
                s.emit("DataUpdate", e.id, arr),
                s.emit("Dirty"))
            }),
            highed.dom.on(k, "click", function() {
                arr = highed.getAttr(n, e.id, a),
                highed.isArr(arr) ? (arr.push({}),
                highed.setAttr(n, e.id, arr)) : highed.setAttr(n, e.id, [{}]),
                highed.isFn(l) && l(),
                i(e.id),
                s.emit("Dirty")
            })),
            highed.dom.ap(o, highed.dom.ap(G, y, v), x),
            highed.dom.style(x, {
                display: "none"
            }),
            u && b(),
            p && (y.className = "exp-col-icon fa fa-list-ul"),
            e.isArrayParent ? d[(e.id || t).replace(/\-\-/g, ".").replace(/\-/g, ".") + ":" + e.dataIndex] = b : d[(e.id || t).replace(/\-\-/g, ".").replace(/\-/g, ".")] = b,
            highed.dom.on(y, "click", f),
            Object.keys(e.entries).length && highed.dom.on(y, "click", g),
            e.entries && Object.keys(e.entries).forEach(function(t) {
                var i = e.entries[t];
                i.id && (d[i.id.replace(/\-\-/g, ".").replace(/\-/g, ".")] = b)
            }),
            p || 0 !== Object.keys(e.children).length || (y.className = "exp-col-icon fa fa-sliders"),
            highed.dom.on(v, "click", function() {
                return c = e.id || t,
                p ? f() : void (A || (b(),
                g()))
            }),
            x
    }
    function i(e) {
        var t = "";
        e && (e = e.replace(/\-\-/g, ".").replace(/\-/g, ".").split("."),
        e.forEach(function(e) {
            e = t + e,
            d[e] && d[e](),
            t += e + "."
        }))
    }
    function o(e, i, n, a) {
        if (e.isInstancedArray) {
            var r = highed.getAttr(n, e.id, a)
              , l = {};
            if (highed.isArr(r))
                return r.forEach(function(t, i) {
                    l[e.shortName + " " + (i + 1)] = {
                        children: e.children,
                        entries: e.entries,
                        dataIndex: i,
                        id: e.id,
                        isArrayParent: !0
                    }
                }),
                o({
                    children: l,
                    entries: []
                }, t(e, e.shortName, i, n, a, !0, !0), n, a)
        }
        e && e.entries && Object.keys(e.entries).forEach(function(t) {
            var i = e.entries[t];
            i.data = n
        }),
        e && e.children && Object.keys(e.children).forEach(function(l) {
            var s = e.children[l]
              , d = highed.dom.cr("div", "parent-body");
            return s.isInstancedArray && (r = highed.getAttr(n, s.id, a),
            highed.isArr(r)) ? o(s, i, n, a) : (d = t(s, l, i, n, s.dataIndex || e.dataIndex || a),
            void o(s, d, n, s.dataIndex || e.dataIndex || a))
        })
    }
    function n() {
        r && highed.isFn(l) && l()
    }
    var a = highed.dom.cr("div", "highed-tree")
      , r = !1
      , l = !1
      , s = highed.events()
      , d = {}
      , h = {}
      , c = !1;
    return highed.dom.ap(e, a),
    {
        on: s.on,
        reselect: n,
        expandTo: i,
        build: function(e, t) {
            a.innerHTML = "",
            o(e, a, t, 0),
            Object.keys(h).forEach(function(e) {
                h[e] && d[e] && d[e]()
            }),
            i(c)
        }
    }
}
,
function() {
    function e() {
        a = window.setTimeout(function() {
            highed.dom.style(t, {
                bottom: "-58px"
            })
        }, 5e3)
    }
    var t = highed.dom.cr("div", "highed-snackbar")
      , i = highed.dom.cr("span", "snackbar-title", "THIS IS A SNACKBAR")
      , o = highed.dom.cr("span", "snackbar-action", "ACTION")
      , n = highed.dom.cr("span", "highed-snackbar-close fa fa-times-circle", "")
      , a = !1
      , r = !1;
    highed.ready(function() {
        highed.dom.ap(document.body, highed.dom.ap(t, i, o, n))
    }),
    highed.dom.on(t, "mouseover", function() {
        window.clearTimeout(a)
    }),
    highed.dom.on(t, "mouseout", function() {
        e()
    }),
    highed.dom.on(n, "click", function() {
        highed.dom.style(t, {
            bottom: "-58px"
        })
    }),
    highed.snackBar = function(n, l, s) {
        i.innerHTML = n.toUpperCase(),
        window.clearTimeout(a),
        l && (o.innerHTML = l.toUpperCase()),
        r && r(),
        highed.dom.style(t, {
            bottom: "10px"
        }),
        highed.dom.style(o, {
            display: l ? "" : "none"
        }),
        r = highed.dom.on(o, "click", s),
        e()
    }
}(),
highed.ContextMenu = function(e) {
    function t(e) {
        var t, i = highed.dom.cr("div", "highed-ctx-item highed-ctx-item-responsive", e.title, e.id), n = highed.dom.cr("div", "highed-ctx-child-icon fa fa-angle-right");
        return "-" === e ? highed.dom.ap(a, highed.dom.cr("div", "highed-ctx-sep")) : (highed.dom.on(i, "click", function() {
            highed.isFn(e.click) && e.click(),
            o()
        }),
        e.selected && (i.className += " highed-ctx-item-selected"),
        highed.isNull(e.children) || (t = highed.ContextMenu(e.children),
        highed.dom.on(i, "mouseenter", function(e) {
            t.show(e.clientX, e.clientY)
        })),
        void highed.dom.ap(a, highed.dom.ap(i, !!e.icon && highed.dom.cr("div", "ctx-child-licon highed-ctx-child-licon-responsive fa fa-" + e.icon), !!e.children && n)))
    }
    function i(e, t) {
        var i = highed.dom.size(document.body)
          , n = highed.dom.size(a);
        l || (e > i.w - n.w - 20 && (e = i.w - n.w - 20),
        t > i.h - n.h - 20 && (t = i.h - n.h - 20),
        highed.dom.style(a, {
            "pointer-events": "auto",
            opacity: 1,
            left: e + "px",
            top: t + "px"
        }),
        l = !0,
        s = highed.showDimmer(o, !0, !0, 10))
    }
    function o() {
        l && (highed.dom.style(a, {
            left: "-2000px",
            "pointer-events": "none",
            opacity: 0
        }),
        highed.isFn(s) && s(),
        l = !1)
    }
    function n(e) {
        return a.innerHTML = "",
        highed.dom.ap(a, r),
        highed.isArr(e) ? e.forEach(t) : void Object.keys(e).forEach(function(i) {
            var o = e[i];
            t(highed.merge({
                title: i
            }, o))
        })
    }
    var a = highed.dom.cr("div", "highed-ctx-container-common highed-ctx-container")
      , r = highed.dom.cr("div", "highed-ctx-close-button", "Close")
      , l = !1
      , s = !1;
    return e && n(e),
    highed.dom.on(r, "click", o),
    highed.ready(function() {
        highed.dom.ap(document.body, a)
    }),
    {
        addEntry: t,
        show: i,
        hide: o,
        build: n
    }
}
,
function() {
    var e = highed.dom.cr("div", "highed-dropdown-items highed-dropdown-items-responsive");
    highed.ready(function() {
        highed.dom.ap(document.body, e)
    }),
    highed.DropDown = function(t, i) {
        function o() {
            e.innerHTML = "",
            A.forEach(function(t) {
                highed.dom.ap(e, t.node),
                t.node.innerHTML = t.title()
            })
        }
        function n() {
            highed.isFn(T) && (T(),
            T = !1),
            B && (k.innerHTML = B.title()),
            highed.dom.style(e, {
                opacity: 0,
                left: "-20000px",
                "pointer-events": "none"
            }),
            L = !1
        }
        function a(t) {
            o();
            var i = highed.dom.pos(C, !0)
              , a = highed.dom.size(C);
            i && i.x || (i = {
                x: 10,
                y: 10
            }),
            a && a.w || (a = {
                w: 200,
                h: 200
            }),
            highed.dom.style(e, {
                opacity: 1,
                "pointer-events": "auto",
                left: i.x + "px",
                top: i.y + a.h + "px",
                width: a.w - 1 + "px",
                "min-height": a.h + "px"
            }),
            T = highed.showDimmer(n, !0, !0, 500),
            L = !0
        }
        function r(e) {
            return (L = !L) ? a(e) : (n(),
            L)
        }
        function l(e) {
            if (e && e.id && (highed.isBasic(e.id) || (e.id = "1234")),
            highed.isBasic(e) && (e = {
                id: e,
                title: e
            }),
            A.filter(function(t) {
                return t.id() === e.id
            }).length > 0)
                return !1;
            var t = highed.dom.cr("div", "highed-dropdown-item", "", i + "-" + e.id)
              , o = highed.uuid()
              , a = A.length
              , r = {
                node: t,
                index: function() {
                    return a
                },
                id: function() {
                    return o
                },
                title: function() {
                    return highed.isStr(e) ? e : e.title || ""
                },
                unselect: function() {
                    t.className = "highed-dropdown-item"
                },
                select: function() {
                    B && B.unselect(),
                    S = B,
                    t.className = "highed-dropdown-item highed-dropdown-item-selected",
                    B = r,
                    k.innerHTML = B.title(),
                    M.emit("Change", r),
                    e && highed.isFn(e.select) && e.select(r),
                    n()
                }
            };
            return !!e && (highed.isStr(e) || highed.isNum(e) ? (t.innerHTML = e,
            o = e) : (t.innerHTML = e.title || "",
            o = e.id,
            e.selected && r.select()),
            highed.dom.on(t, "click", function(e) {
                return r.select(),
                e.cancelBubble = !0,
                e.preventDefault(),
                e.stopPropagation(),
                e.stopImmediatePropagation(),
                !1
            }),
            A.push(r),
            x(),
            r)
        }
        function s() {
            A = []
        }
        function d() {
            B && B.unselect(),
            B = !1,
            S = !1
        }
        function h(e) {
            highed.isArr(e) && e.forEach(l)
        }
        function c(e) {
            A.some(function(t) {
                if (t.id() == e)
                    return t.select(),
                    !0
            })
        }
        function p(e) {
            e >= 0 && e < A.length && A[e].select()
        }
        function u() {
            return !!B && B
        }
        function g() {
            return !!S && S
        }
        function m() {
            O = highed.uuid()
        }
        function b() {
            return A.length > 1
        }
        function f() {
            var e = []
              , t = "DropDown";
            if (!(A.length <= 1)) {
                A.forEach(function(t, i) {
                    e.push('<li><a href="#">' + t.node.innerHTML + "</a></li>")
                }),
                void 0 !== A[0] && void 0 !== A[0].node && void 0 !== A[0].node.innerHTML && (t = A[0].node.innerHTML);
                var i = '<div id="' + O + '" class="dropdown" style="display: inline-block;">'
                  , o = '<button class="btn btn-default dropdown-toggle" type="button" id="button' + O + '" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">' + t + '<span class="caret"></span></button>'
                  , n = '<ul class="dropdown-menu" aria-labelledby="button' + O + '">' + e.join("") + "</ul>"
                  , a = "</div>";
                return i + o + n + a
            }
        }
        function v(e, t, i) {
            return highed.isStr(i) || (i = JSON.stringify(i)),
            highed.isStr(e) || highed.isStr(t) ? b() ? ["jQuery('#" + O + " .dropdown-menu a').click(function(event){", "event.preventDefault();", "jQuery(this).parents('.dropdown').find('.btn').html(jQuery(this).text() + '<span class=\"caret\"></span>');", "jQuery(this).parents('.dropdown').find('.btn').val(jQuery(this).data('value'));", "(function(selectedItem){", e + "['" + t + "'] = selectedItem.text();", i, "})(jQuery(this))", "});"].join("\r\n") : void 0 : void highed.snackBar("need objectname and propertyname input for getEmbeddableJavascriptInit !!!")
        }
        function y(e, t) {
            return highed.isStr(e) || highed.isStr(t) ? e + "['" + t + "'] = \"" + A[0].node.innerHTML + '";' : void highed.snackBar("need objectname and propertyname input for getEmbeddableJavascriptInit !!!")
        }
        function x() {
            A.length > 1 ? highed.dom.style(C, {
                display: "block"
            }) : highed.dom.style(C, {
                display: "none"
            })
        }
        function G() {
            s(),
            x()
        }
        var M = highed.events()
          , C = highed.dom.cr("div", "highed-dropdown", "", i)
          , k = highed.dom.cr("div", "highed-dropdown-body")
          , w = highed.dom.cr("div", "highed-dropdown-arrow fa fa-arrow-down")
          , A = []
          , B = !1
          , S = !1
          , L = !1
          , T = !1
          , F = highed.uuid()
          , O = F;
        return t && (t = highed.dom.get(t),
        highed.dom.ap(t, C)),
        highed.dom.ap(C, k, w),
        highed.dom.on(C, "click", r),
        {
            container: C,
            selectById: c,
            selectByIndex: p,
            getSelectedItem: u,
            getPreviousSelectedItem: g,
            addItems: h,
            addItem: l,
            clear: s,
            clearSelection: d,
            isVisible: b,
            reset: G,
            embeddable: {
                refreshEmbedId: m,
                getEmbeddableHtml: f,
                getEmbeddableJavascriptOnChange: v,
                getEmbeddableJavascriptInit: y
            },
            on: M.on
        }
    }
}(),
highed.Movable = function(e, t, i, o, n, a) {
    var r = highed.events()
      , l = !1;
    return t = (t || "XY").toUpperCase(),
    e = highed.dom.get(e),
    e && highed.dom.on(e, ["mousedown", "touchstart"], function(s) {
        l = !0;
        var d = highed.dom.pos(e)
          , h = highed.dom.size(o || e.parentNode)
          , c = highed.dom.size(e)
          , p = d.x
          , u = d.y
          , g = 0
          , m = 0
          , b = highed.dom.on(document.body, ["mousemove", "touchmove"], function(o) {
            return "X" !== t && "XY" !== t || (p = d.x + ((o.clientX || o.touches[0].clientX) - g),
            i && (p < 0 && (p = 0),
            p > h.w - c.w && (p = h.w - c.w))),
            "Y" !== t && "XY" !== t || (u = d.y + ((o.clientY || o.touches[0].clientY) - m),
            i && (u < 0 && (u = 0),
            u > h.h - c.h && (u = h.h - c.h))),
            n && p < n.x && (p = n.x),
            n && u < n.y && (u = n.y),
            highed.dom.style(e, {
                left: p - (a ? c.w : 0) + "px",
                top: u + "px"
            }),
            r.emit("Moving", p, u),
            o.cancelBubble = !0,
            o.preventDefault(),
            o.stopPropagation(),
            o.stopImmediatePropagation(),
            !1
        })
          , f = highed.dom.on(document.body, ["mouseup", "touchend"], function(e) {
            return f(),
            b(),
            l = !1,
            document.body.className = document.body.className.replace(" highed-nosel", ""),
            r.emit("EndMove", p, u),
            e.cancelBubble = !0,
            e.preventDefault(),
            e.stopPropagation(),
            e.stopImmediatePropagation(),
            !1
        });
        return document.body.className += " highed-nosel",
        g = s.clientX || s.touches[0].clientX,
        m = s.clientY || s.touches[0].clientY,
        r.emit("StartMove", d.x, d.y),
        s.cancelBubble = !0,
        s.preventDefault(),
        s.stopPropagation(),
        s.stopImmediatePropagation(),
        !1
    }),
    {
        on: r.on
    }
}
,
highed.Slider = function(e, t) {
    function i() {
        c.innerHTML = s,
        "null" !== s && null !== s || (c.innerHTML = "auto"),
        "undefined" !== s && "undefined" != typeof s || (c.innerHTML = "auto")
    }
    function o() {
        var e = 0
          , t = highed.dom.size(p)
          , i = highed.dom.size(h);
        e = highed.isNum(s) && s ? (s - r.min) / (r.max - r.min) * (t.w - i.w) : 0,
        highed.dom.style(h, {
            left: e + "px"
        })
    }
    function n() {
        i(),
        d.parentNode ? o() : window.setTimeout(n, 10)
    }
    function a(e) {
        s = highed.clamp(r.min, r.max, e),
        c.innerHTML = s,
        o()
    }
    var r = highed.merge({
        max: 100,
        min: 1,
        step: 1,
        resetTo: 0,
        value: 0
    }, t)
      , l = highed.events()
      , s = r.value || r.resetTo
      , d = highed.dom.cr("div", "highed-slider")
      , h = highed.dom.cr("div", "highed-slider-indicator")
      , c = highed.dom.cr("div", "highed-slider-text-indicator")
      , p = highed.dom.cr("div", "highed-slider-background")
      , u = highed.dom.cr("div", "highed-slider-reset fa fa-undo")
      , g = highed.Movable(h, "x", !0, p);
    return g.on("Moving", function(e) {
        var t = highed.dom.size(p)
          , i = highed.dom.size(h);
        s = r.min + Math.round(e / (t.w - i.w) * (r.max - r.min)),
        c.innerHTML = s,
        highed.onPhone() || l.emit("Change", s)
    }),
    g.on("StartMove", function() {
        highed.onPhone() && (c.className = "highed-slider-text-indicator highed-slider-text-indicator-popup")
    }),
    g.on("EndMove", function() {
        highed.onPhone() && (c.className = "highed-slider-text-indicator",
        l.emit("Change", s))
    }),
    highed.dom.on(u, "mouseover", function(e) {}),
    highed.dom.on(u, "click", function() {
        s = r.resetTo,
        o(),
        "null" === s && (s = null),
        "undefined" === s && (s = void 0),
        i(),
        l.emit("Change", s)
    }),
    e && (e = highed.dom.get(e),
    highed.dom.ap(e, d)),
    highed.dom.ap(d, p, u, highed.dom.ap(h, c)),
    n(),
    {
        on: l.on,
        set: a,
        container: d
    }
}
,
highed.DataTable = function(e, t) {
    function i() {
        window.clearTimeout(Q),
        Q = window.setTimeout(function() {
            R.emit("Change", f(), v(), ie, oe, P)
        }, 50)
    }
    function o(e, t, i, o, n, a) {
        U.length && (U = U.filter(function(e) {
            return e(),
            !1
        })),
        J && J(),
        J = a,
        q.value = t,
        q.setSelectionRange(0, q.value.length),
        U.push(highed.dom.on(q, "keydown", function(e) {
            if (highed.isFn(o))
                return o(e)
        })),
        U.push(highed.dom.on(q, "keyup", function(e) {
            return highed.isFn(i) && i(q.value)
        })),
        U.push(highed.dom.on(q, "focusout", function(e) {
            return highed.isFn(n) && n(q.value)
        })),
        highed.dom.ap(e, q),
        q.focus()
    }
    function n(e, t, n) {
        function a() {
            t >= 1 ? e.columns[t - 1].focus() : e.number - 1 >= 0 && Y[e.number - 1].columns[Y[e.number - 1].columns.length - 1].focus()
        }
        function r() {
            t < e.columns.length - 1 ? e.columns[t + 1].focus() : e.number < Y.length - 1 && Y[e.number + 1].columns[0].focus()
        }
        function l() {
            e.number > 0 && Y[e.number - 1].columns.length > t && Y[e.number - 1].columns[t].focus()
        }
        function s() {
            e.number < Y.length - 1 && Y[e.number + 1].columns.length > t && Y[e.number + 1].columns[t].focus()
        }
        function d(t) {
            return 37 === t.keyCode ? (a(),
            highed.dom.nodefault(t)) : 38 === t.keyCode ? (l(),
            highed.dom.nodefault(t)) : 39 === t.keyCode || 9 === t.keyCode ? (r(),
            highed.dom.nodefault(t)) : 40 === t.keyCode ? (s(),
            highed.dom.nodefault(t)) : 13 === t.keyCode ? (e.number === Y.length - 1 ? (u(),
            Y[e.number + 1].columns[0].focus()) : s(),
            highed.dom.nodefault(t)) : void 0
        }
        function h() {
            q.className = "highed-dtable-input",
            ae && o(b, m, function(e) {
                var t = m !== e;
                m = e,
                f.innerHTML = e,
                t && i()
            }, d),
            e.select()
        }
        function c() {
            e.node.removeChild(b),
            b.innerHTML = "",
            f.innerHTML = ""
        }
        function p() {
            return m
        }
        function g(i) {
            t = i || t,
            highed.dom.ap(e.node, highed.dom.ap(b, f))
        }
        var m = n || ""
          , b = highed.dom.cr("td")
          , f = highed.dom.cr("div", "highed-dtable-col-val", m)
          , v = (highed.dom.cr("input"),
        {});
        return highed.dom.on(b, "click", h),
        g(),
        v = {
            focus: h,
            value: p,
            destroy: c,
            addToDOM: g,
            colNumber: t
        }
    }
    function a() {
        function e(e) {
            p.push(n(y, p.length, e))
        }
        function t(e) {
            var t = n(y, p.length);
            p.splice(e, 0, t)
        }
        function i() {
            var e = W.querySelector(".highed-dtable-body-selected-row");
            e && (e.className = ""),
            u.className = "highed-dtable-body-selected-row"
        }
        function o() {
            return f
        }
        function a(e) {
            m.checked = f = e
        }
        function r() {
            I.removeChild(g),
            W.removeChild(u),
            u.innerHTML = "",
            Y = Y.filter(function(e) {
                return e !== y
            })
        }
        function l(e) {
            y.number = e,
            highed.dom.ap(W, u),
            highed.dom.ap(I, highed.dom.ap(g, m))
        }
        function s() {
            u.innerHTML = "",
            p.forEach(function(e, t) {
                e.addToDOM(t)
            })
        }
        function d(e) {
            e >= 0 && e < p.length && (p[e].destroy(),
            p.splice(e, 1))
        }
        function h(e) {
            return v = e
        }
        function c() {
            return v
        }
        var p = []
          , u = highed.dom.cr("tr")
          , g = highed.dom.cr("div", "highed-dtable-left-bar-row", "")
          , m = highed.dom.cr("input")
          , f = !1
          , v = !1
          , y = {};
        return m.type = "checkbox",
        !re && highed.dom.isVisible(m) && highed.dom.style(m, {
            display: "none"
        }),
        highed.dom.on(m, "change", function() {
            f = m.checked
        }),
        l(Y.length),
        y = {
            destroy: r,
            select: i,
            columns: p,
            number: Y.length,
            addCol: e,
            isChecked: o,
            check: a,
            node: u,
            addToDOM: l,
            insertCol: t,
            rebuildColumns: s,
            delCol: d,
            isPeriodRow: c,
            setPeriod: h
        },
        Y.push(y),
        b(),
        y
    }
    function r() {
        Y.forEach(function(e, t) {
            e.addToDOM(t)
        })
    }
    function l() {
        Y.forEach(function(e) {
            e.rebuildColumns()
        })
    }
    function s() {
        p();
        for (var e = 0; e < 1; e++) {
            a()
        }
        for (var t = 0; t < 2; t++)
            h("Column " + (t + 1));
        var i = highed.dom.cr("col");
        highed.dom.style(i, {
            width: "100%"
        }),
        highed.dom.ap(z, i),
        b()
    }
    function d() {
        z.innerHTML = "",
        H.innerHTML = "",
        _.forEach(function(e, t) {
            e.colNumber = t,
            e.addToDOM()
        }),
        l(),
        highed.dom.ap(z, highed.dom.cr("col")),
        b()
    }
    function h(e, t) {
        var n, a = highed.dom.cr("col"), r = (_.length,
        highed.dom.cr("span", "highed-dtable-top-bar-col")), l = highed.dom.cr("div", "", e), s = highed.dom.cr("div", "highed-dtable-resize-handle"), d = highed.dom.cr("div", "highed-dtable-top-bar-col-options fa fa-chevron-down"), h = !1, c = !1, p = {
            col: a,
            header: r,
            headerTitle: l,
            colNumber: _.length
        }, u = highed.Movable(s, "X", !1, !1, {
            x: 20,
            y: 0
        }, !0), g = highed.ContextMenu([]);
        return re || highed.dom.style(d, {
            display: "none"
        }),
        p.addToDOM = function() {
            highed.dom.ap(z, a),
            highed.dom.ap(H, highed.dom.ap(r, l, d, s))
        }
        ,
        p.destroy = function() {
            z.removeChild(a),
            H.removeChild(r),
            _ = _.filter(function(e) {
                return e !== p
            })
        }
        ,
        p.initSerieOptions = function() {
            return h = {
                name: l.innerHTML,
                isSerie: !0,
                borderColor: ne,
                data: []
            }
        }
        ,
        p.setSerieOptionsProperty = function(e, t) {
            h && (h[e] = t)
        }
        ,
        p.setSerieOptions = function(e) {
            return highed.merge(h, e),
            h
        }
        ,
        p.getSerieOptions = function() {
            return h.data = [],
            h.name = l.innerHTML,
            h
        }
        ,
        p.setStatCodeCol = function(e) {
            return c = e
        }
        ,
        p.isStatCodeCol = function() {
            return c
        }
        ,
        p.addToDOM(),
        highed.dom.showOnHover(r, d),
        a.width = 140,
        highed.dom.style([a, r], {
            width: a.width + "px"
        }),
        u.on("StartMove", function(e) {
            n = e,
            highed.dom.style(document.body, {
                cursor: "ew-resize"
            })
        }),
        u.on("Moving", function(e) {
            highed.dom.style([a, r], {
                width: e + "px"
            }),
            s.className = "highed-dtable-resize-handle highed-dtable-resize-handle-moving"
        }),
        u.on("EndMove", function(e) {
            highed.dom.style(document.body, {
                cursor: ""
            }),
            s.className = "highed-dtable-resize-handle"
        }),
        highed.dom.on(d, "click", function(e) {
            return g.show(e.clientX, e.clientY),
            highed.dom.nodefault(e)
        }),
        highed.dom.on(r, "click", function(t) {
            function n() {
                q && (q.className = "highed-dtable-input",
                highed.dom.containsChild(r, q) && r.removeChild(q))
            }
            q.className = "highed-dtable-input highed-dtable-input-header",
            o(r, e, function(t) {
                l.innerHTML = e = t,
                i()
            }, function(e) {
                13 === e.keyCode && n()
            }, function(e) {
                n()
            })
        }),
        Y.forEach(function(e) {
            t ? e.insertCol(t) : e.addCol()
        }),
        t ? _.splice(t, 0, p) : _.push(p),
        p.initSerieOptions(),
        i(),
        p
    }
    function c(e, t, o) {
        W.innerHTML = "",
        t = (t || "").toUpperCase(),
        Y.sort(function(i, n) {
            var a = i.columns[e].value()
              , r = n.columns[e].value();
            return highed.isNum(a) && highed.isNum(r) || o ? (o ? (a = $[a.toUpperCase().substr(0, 3)] || 13,
            r = $[r.toUpperCase().substr(0, 3)] || 13) : (a = parseFloat(a),
            r = parseFloat(r)),
            "ASC" === t ? a - r : r < a ? -1 : r > a ? 1 : 0) : "ASC" === t ? a.localeCompare(r) : r.localeCompare(a)
        }),
        r(),
        i()
    }
    function p() {
        Y = Y.filter(function(e) {
            return e.destroy(),
            !1
        }),
        _ = _.filter(function(e) {
            return !1
        }),
        W.innerHTML = "",
        I.innerHTML = "",
        H.innerHTML = "",
        z.innerHTML = "",
        i()
    }
    function u() {
        var e = a();
        _.forEach(function() {
            e.addCol()
        }),
        i()
    }
    function g(e) {
        e || _.length,
        e < 0 && (e = 0),
        e >= _.length && (e = _.length),
        h(highed.L("dgNewCol"), e),
        d()
    }
    function m(e) {
        e >= 0 && e < _.length && (Y.forEach(function(t) {
            t.delCol(e)
        }),
        _[e].destroy(),
        d(),
        i())
    }
    function b() {
        var t = highed.dom.size(e)
          , i = highed.dom.size(H)
          , o = highed.dom.size(O.container);
        highed.dom.style(E, {
            height: t.h - i.h - o.h + "px",
            width: t.w - i.h + "px"
        }),
        highed.dom.style(D, {
            width: t.w - i.h + "px"
        })
    }
    function f() {
        return _.map(function(e) {
            return e.headerTitle.innerHTML.length ? e.headerTitle.innerHTML : null
        })
    }
    function v(e, t) {
        var i = [];
        return t && i.push(f()),
        Y.forEach(function(t) {
            var o = []
              , n = !1;
            t.columns.forEach(function(t) {
                var i = t.value();
                i && (n = !0),
                e && !highed.isNum(i) && highed.isStr(i) && (i = '"' + i.replace(/\"/g, '"') + '"'),
                highed.isNum(i) && (i = parseFloat(i)),
                o.push(i)
            }),
            n && i.push(o)
        }),
        i
    }
    function y(e) {
        var t = {
            categories: [],
            series: []
        }
          , i = oe ? 2 : 1;
        if (_.forEach(function(e, o) {
            o >= i && t.series.push(e.getSerieOptions())
        }),
        oe) {
            var o = 2
              , n = null;
            Y.forEach(function(e, i) {
                e.columns.forEach(function(i, a) {
                    var r = i.value();
                    if (0 == a) {
                        var l = r;
                        (!n || l && l != n.name) && (n = x(l),
                        t.categories.push(n))
                    } else if (1 == a) {
                        var s = e.columns[1].value();
                        n.categories.push(s)
                    } else {
                        var d = k(r, "y", "yString");
                        t.series[a - o].data.push(d)
                    }
                })
            })
        } else
            Y.forEach(function(e, i) {
                e.columns.forEach(function(e, o) {
                    var n = e.value();
                    if (!o)
                        return void t.categories.push(n);
                    o--;
                    var a = k(n, "y", "yString");
                    a.name = t.categories[i],
                    t.series[o].data.push(a)
                })
            });
        return t
    }
    function x(e) {
        return {
            name: e,
            categories: []
        }
    }
    function G() {
        var e = new RegExp(/^\d{4}$/);
        return Y[0].columns.every(function(t, i) {
            var o = t.value().trim();
            return 0 === o.length || e.test(o)
        })
    }
    function M() {
        return te
    }
    function C() {
        var e = {
            categories: [],
            series: [],
            periods: []
        }
          , t = null
          , i = null;
        Y[0].isPeriodRow() || Y[0].setPeriod(!0),
        _[1].isStatCodeCol() || _[1].setStatCodeCol(!0);
        var o = highed.isNull(_[0].headerTitle) ? "" : _[0].headerTitle.innerHTML;
        e.series.push({
            name: o,
            isSerie: !1,
            nullColor: "#E5E5E5",
            showInLegend: !1,
            borderColor: ne
        }),
        Y.forEach(function(e, t) {
            e.isPeriodRow() && (i = t)
        });
        var n = "";
        return _.forEach(function(o, a) {
            return o.isStatCodeCol() ? (t = a,
            void (n = Y[i].columns[a].value())) : void (a > 0 && (o.setSerieOptionsProperty("name", o.headerTitle.innerHTML),
            o.setSerieOptionsProperty("gemeentecode", n),
            e.series.push(o.getSerieOptions())))
        }),
        Y.forEach(function(o, n) {
            (highed.isNull(i) || n !== i) && o.columns.forEach(function(n, a) {
                var r = n.value();
                if (!a)
                    return void e.categories.push(r);
                if (void 0 === _[a] || !_[a].isStatCodeCol()) {
                    var l = k(r, "value", "valueString")
                      , s = l.value;
                    null === s ? (l.color = "#e9e9e9",
                    l.z = null) : l.z = s;
                    var d = a;
                    null !== t && highed.isNum(t) && (highed.isStr(o.columns[t].value()) && (l.statcode = o.columns[t].value(),
                    l.id = o.columns[t].value(),
                    l.categorie = o.columns[0].value()),
                    d--),
                    null !== i && highed.isNum(i) && (e.series[d].periode = Y[i].columns[a].value()),
                    void 0 === e.series[d].data && highed.setAttr(e.series[d], "data", []),
                    e.series[d].data.push(l)
                }
            })
        }),
        e.series.forEach(function(t, i) {
            void 0 !== t.periode && e.periods.push(t.periode)
        }),
        e
    }
    function k(e, t, i) {
        var o = e
          , n = o;
        highed.isNum(n) ? o = parseFloat(n) : /^-?\d*\,\d*$/.test(o) ? (n = o.replace(",", ".").trim(),
        o = parseFloat(n)) : highed.isStr(n) && "" === n.trim() && (n = "."),
        "." === n && (o = void 0);
        var a = {};
        return a[t] = o,
        a[i] = n,
        a
    }
    function w(e) {
        return te = (0 === Y[0].columns[0].value().length || 0 === Y[0].columns[0].value().trim().length) && G() || (0 === Y[0].columns[0].value().length || 0 === Y[0].columns[0].value().trim().length) && Y[0].columns[1].value().indexOf("GM") > -1,
        te ? C() : y(e)
    }
    function A(e) {
        return e = e || ",",
        v(!0, !0).map(function(t) {
            return t.join(e)
        }).join("\n")
    }
    function B(e, t) {
        if (!highed.isNull(e)) {
            var i = []
              , o = []
              , n = []
              , a = {};
            return e.forEach(function(e, r) {
                e.isSerie || (o.push(null),
                i.push(e.name),
                n.push("")),
                1 === r && (o.push(null),
                i.push("statcode"),
                n.push("")),
                e.isSerie && (i.push(e.name),
                n.push(e.periode),
                e.data.forEach(function(e, i) {
                    var o = e.statcode;
                    a[o] || (a[o] = [],
                    a[o].serieValues = [e.categorie, e.statcode]);
                    var n = a[o];
                    "." === e.valueString.trim() ? n.serieValues.push(e.valueString.trim()) : n.serieValues.push(e.valueString.replace(".", t))
                }),
                o.push(function() {
                    var t = JSON.parse(JSON.stringify(e));
                    return t && t.data && delete t.data,
                    t
                }()))
            }),
            {
                headerNames: i,
                periods: n,
                rows: a,
                serieProperties: o
            }
        }
    }
    function S(e, t, i) {
        if (e && e.length > 0) {
            p();
            var o = B(e, i)
              , n = o.rows
              , r = o.headerNames
              , l = o.periods
              , s = o.serieProperties;
            if (r.forEach(function(e, t) {
                var i = h(r[t]);
                highed.isNull(s[t]) || void 0 === s[t].data || (s[t].data = []),
                i.setSerieOptions(s[t] || {})
            }),
            e[1] && (l[1] = e[1].gemeentecode),
            l) {
                var d = a();
                for (var c in l)
                    d.addCol(l[c])
            }
            for (var u in n) {
                var g;
                if (n.hasOwnProperty(u)) {
                    g = a();
                    var m = n[u].serieValues;
                    m.forEach(function(e) {
                        g.addCol(e)
                    })
                }
            }
            highed.dom.ap(z, highed.dom.cr("col"))
        }
    }
    function L(e, t, i, o, n) {
        if (!highed.isNull(e)) {
            var a, r = [], l = [], s = {};
            if (oe) {
                a = o || "Categories1";
                var d = n || "Categories2";
                r.push(a),
                l.push(null),
                r.push(d),
                l.push(null)
            } else
                a = o || "Categories",
                r.push(a),
                l.push(null);
            return e.forEach(function(e, o) {
                r.push(e.name);
                var n = 0
                  , a = 0
                  , d = highed.isArr(t) ? t[0].categories : [];
                e.data.forEach(function(e, t) {
                    var o = t;
                    if (!s[o])
                        if (s[o] = {
                            serieValues: []
                        },
                        oe) {
                            var r = d[n];
                            s[o].serieValues.push(r.name),
                            s[o].serieValues.push(r.categories[a++]),
                            a > r.categories.length - 1 && (++n,
                            a = 0)
                        } else
                            d ? s[o].serieValues.push(d[t]) : s[o].serieValues.push(e.name);
                    var l = s[o];
                    "." === e.yString.trim() ? l.serieValues.push(e.yString.trim()) : l.serieValues.push(e.yString.replace(".", i))
                }),
                l.push(function() {
                    var t = JSON.parse(JSON.stringify(e));
                    return t && t.data && delete t.data,
                    t
                }())
            }),
            {
                headerNames: r,
                rows: s,
                serieProperties: l
            }
        }
    }
    function T(e, t, i, o, n) {
        if (e && e.length > 0) {
            p();
            var r = L(e, t, i, o, n)
              , l = r.rows
              , s = r.headerNames
              , d = (r.periods,
            r.serieProperties);
            s.forEach(function(e, t) {
                var i = h(s[t]);
                highed.isNull(d[t]) || void 0 === d[t].data || (d[t].data = []),
                i.setSerieOptions(d[t] || {})
            });
            for (var c in l) {
                var u;
                if (l.hasOwnProperty(c)) {
                    u = a();
                    var g = l[c].serieValues;
                    g.forEach(function(e) {
                        u.addCol(e)
                    })
                }
            }
            highed.dom.ap(z, highed.dom.cr("col"))
        }
    }
    function F(e, t, i, o, n) {
        if (highed.snackBar(highed.L("dgDataImporting")),
        oe = o,
        n && (P = n),
        e && e.length > 0 && !highed.isNull(e[0].isSerie) && !e[0].isSerie)
            S(e, t, i);
        else if (P) {
            P = P.replace(":", ";");
            var a = P.split(";");
            if (a.length > 0) {
                var r = a[0];
                if (o)
                    var l = a[1];
                T(e, t, i, r, l)
            }
        } else
            T(e, t, i);
        R.emit("DataImported"),
        highed.snackBar(highed.L("dgDataImported"))
    }
    var O, P, R = (highed.merge({
        checkable: !0
    }, t),
    highed.events()), j = highed.dom.cr("div", "highed-dtable-container"), E = highed.dom.cr("div", "highed-dtable-table-frame"), D = highed.dom.cr("table", "highed-dtable-table"), N = highed.dom.cr("thead", "highed-dtable-head"), W = highed.dom.cr("tbody", "highed-dtable-body"), z = highed.dom.cr("colgroup"), I = highed.dom.cr("div", "highed-dtable-left-bar"), H = highed.dom.cr("div", "highed-dtable-top-bar"), V = highed.dom.cr("div", "highed-dtable-top-left-panel"), Z = highed.dom.cr("input"), q = highed.dom.cr("input", "highed-dtable-input"), U = [], J = !1, K = highed.OverlayModal(!1, {
        minWidth: 600,
        minHeight: 600
    }), X = highed.DataImporter(K.body), Y = [], _ = [], Q = !1, $ = {
        JAN: 1,
        FEB: 2,
        MAR: 3,
        APR: 4,
        MAY: 5,
        JUN: 6,
        JUL: 7,
        AUG: 8,
        SEP: 9,
        OCT: 10,
        NOV: 11,
        DEC: 12
    }, ee = highed.ContextMenu([{
        title: 'Use "," Delimiter',
        click: function() {
            highed.download("data.csv", A(","), "application/csv")
        }
    }, {
        title: 'Use ";" Delimiter',
        click: function() {
            highed.download("data.csv", A(";"), "application/csv")
        }
    }]), te = !1, ie = ".", oe = !1, ne = "#FFFFFF", ae = !0, re = !1;
    return Z.type = "checkbox",
    !re && highed.dom.isVisible(Z) && highed.dom.style(Z, {
        display: "none"
    }),
    highed.dom.on(q, "click", function(e) {
        return highed.dom.nodefault(e)
    }),
    X.on("ImportCSV", function(e) {
        highed.snackBar(highed.L("dgDataImporting")),
        K.hide(),
        e && e.csv && (p(),
        ie = e.decimalPoint,
        oe = e.hasGroupedCategories,
        P = e.csv,
        e.csv = e.csv.split("\n"),
        e.csv.forEach(function(t, i) {
            var o, n = t.split(e.itemDelimiter);
            i && (o = a()),
            n.forEach(function(e) {
                if (0 === i) {
                    var t = h(e);
                    t.initSerieOptions()
                } else
                    o.addCol(e)
            })
        }),
        highed.dom.ap(z, highed.dom.cr("col"))),
        R.emit("DataImported"),
        highed.snackBar(highed.L("dgDataImported")),
        b()
    }),
    D.cellPadding = 0,
    D.cellSpacing = 0,
    highed.dom.on(E, "scroll", function(e) {
        I.style.top = -E.scrollTop + "px",
        H.style.left = -E.scrollLeft + "px"
    }),
    e = highed.dom.get(e),
    highed.dom.ap(e, highed.dom.ap(j, highed.dom.ap(E, highed.dom.ap(D, z, N, W)), I, H, highed.dom.ap(V, Z))),
    O = highed.Toolbar(j, {
        additionalCSS: ["highed-dtable-toolbar"]
    }),
    re && O.addButton({
        id: "addRowBtn",
        css: "fa-plus-circle",
        tooltip: "Add row",
        title: highed.L("dgAddRow"),
        click: u
    }),
    re && O.addButton({
        id: "resetBtn",
        css: "fa-file-o",
        tooltip: "Reset",
        title: highed.L("dgNewBtn"),
        click: function() {
            confirm("Start from scratch?") && s()
        }
    }),
    re && O.addButton({
        id: "exportBtn",
        css: "fa-floppy-o",
        title: highed.L("dgExportBtn"),
        tooltip: "Download data",
        click: function(e) {
            ee.show(e.clientX, e.clientY)
        }
    }),
    O.addButton({
        id: "dataImportBtn",
        title: highed.L("dgImportBtn"),
        click: function() {
            K.show(),
            X.resize(),
            void 0 != P && X.loadCSVFromProject(P),
            X.setGroupedCategoryCheckbox(oe)
        }
    }),
    highed.dom.on(Z, "change", function() {
        Y.forEach(function(e) {
            e.check(Z.checked)
        })
    }),
    re && (highed.dom.ap(O.left, highed.dom.cr("div", "highed-dtable-toolbar-label", highed.L("dgWithSelected") + " ")),
    O.addIcon({
        css: "fa-trash",
        click: function() {
            confirm(highed.L("dgDeleteRow")) && Y.forEach(function(e) {
                e.isChecked() && e.destroy()
            })
        }
    }, "left")),
    highed.ready(function() {
        s()
    }),
    {
        init: s,
        sortRows: c,
        clear: p,
        addRow: u,
        insCol: g,
        delCol: m,
        toData: v,
        toCSV: A,
        toDataSeries: y,
        toCBSDataSeries: w,
        loadProjectData: F,
        getHeaderTextArr: f,
        isMapData: M,
        on: R.on,
        resize: b,
        importer: X
    }
}
,
highed.services.mapLoader = function() {
    function e(e, t, i, n) {
        function a(e, t, i) {
            function o(e, t) {
                var o = highed.getAttr(e, "chart--geoUrl")
                  , n = null;
                highed.isNull(t) || (n = t.id()),
                highed.isNull(o) || highed.isNull(n) || (o = o.split("[year]").join(n),
                highed.setAttr(i, "chart--geoUrl", o));
                var a = highed.getAttr(i, "series--1--gemeentecode");
                a && (o = highed.getAttr(i, "chart--geoUrl"),
                o = o.split("[gemeentecode]").join(a),
                highed.setAttr(i, "chart--geoUrl", o))
            }
            var n = t;
            !highed.isNull(e) && n && n.id() ? o(e, n) : o(e)
        }
        return a(i, n, t),
        o(e, t)
    }
    function t(e, i) {
        if ("undefined" != typeof Storage)
            try {
                sessionStorage.setItem(e, JSON.stringify(i))
            } catch (a) {
                if (22 === a.code) {
                    var o = Object.keys(sessionStorage)
                      , n = o[o.length - 1];
                    sessionStorage.removeItem(n),
                    t(e, i)
                }
            }
        else
            highed.snackBar("Sorry!", "No Web Storage support..")
    }
    function i(e) {
        return "undefined" != typeof Storage ? JSON.parse(sessionStorage.getItem(e)) : void highed.snackBar("Sorry!", "No Web Storage support..")
    }
    function o(e, o) {
        var n = jQuery.Deferred()
          , a = function(t) {
            highed.setAttr(e, "chart--map", Highcharts.geojson(t)),
            highed.setAttr(o, "chart--map", Highcharts.geojson(t)),
            n.resolve(e)
        }
          , r = function(e, i) {
            t(i, e),
            a(e)
        };
        if (void 0 !== o.chart && void 0 !== o.chart.geoUrl) {
            var l = i(o.chart.geoUrl);
            void 0 === l || null === l ? highed.ajax({
                url: o.chart.geoUrl,
                success: r,
                error: function(t) {
                    highed.setAttr(e, "chart--map", null),
                    highed.setAttr(o, "chart--map", null),
                    n.reject(t)
                }
            }) : a(l)
        }
        return n.promise()
    }
    function n(e) {
        e.renderer.text(highed.getLocalizedStr("maps.loadmap.error")).attr({
            fill: "red",
            zIndex: 20
        }).add().align({
            align: "center",
            verticalAlign: "middle"
        }, null, "plotBox")
    }
    return {
        loadMap: e,
        errorLoadingMap: n,
        localStorage: {
            addMapToLocalStorage: t,
            getMapFromLocalStorage: i
        }
    }
}(),
highed.meta.CBScolors = {
    Cold: ["#00a1cd", "#0058b8", "#afcb05", "#53a31d", "#f39200", "#af0e80", "#ffcc00", "#e94c0a", "#0581a2", "#163a72", "#899d0c", "#488225", "#ce7c00", "#82045e", "#e1b600", "#b23d02"],
    Warm: ["#e94c0a", "#ffcc00", "#af0e80", "#f39200", "#53a31d", "#afcb05", "#0058b8", "#00a1cd", "#b23d02", "#e1b600", "#82045e", "#ce7c00", "#488225", "#899d0c", "#163a72", "#0581a2"]
},
highed.meta.CBSMapcolors = {
    Red: ["#ffc597", "#f89e6b", "#e74d15", "#c01f26", "#82001e", "#A2A2A2", "#143564", "#2256a0", "#3d95d4", "#77cbe5", "#c0e7ff"],
    Blue: ["#c0e7ff", "#77cbe5", "#3d95d4", "#2256a0", "#143564", "#A2A2A2", "#82001e", "#c01f26", "#e74d15", "#f89e6b", "#ffc597"],
    Green: ["#edf0c7", "#c9de85", "#85bc22", "#348a3a", "#0f5f34", "#A2A2A2", "#490045", "#8b176f", "#be3e8d", "#e38cbf", "#f8c1d9"],
    Purple: ["#f8c1d9", "#e38cbf", "#be3e8d", "#8b176f", "#490045", "#A2A2A2", "#0f5f34", "#348a3a", "#85bc22", "#c9de85", "#edf0c7"]
},
highed.meta.CBSBubbleMapcolors = {
    Red: "#e94c0a",
    Blue: "#0058b8",
    Green: "#53a31d",
    Purple: "#af0e80"
},
highed.getMapColor = function(e, t) {
    return "map" === e ? highed.meta.CBSMapcolors[t] : "mapbubble" === e ? highed.meta.CBSBubbleMapcolors[t] : highed.meta.CBSMapcolors[t]
}
,
highed.meta.CBSTitlecolors = {
    Black: "#000",
    Blue: "#271d6c"
},
"undefined" == typeof highed)
    var highed = {
        meta: {}
    };
if (highed.meta.chartTemplates = {
    line: {
        title: "Line charts",
        templates: {
            basic: {
                title: "Line chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/abywon.svg",
                config: {
                    "chart--type": "line",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            withdatalabel: {
                title: "With data labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/agonam.svg",
                config: {
                    "chart--type": "line",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values. Data labels by default displays the Y value."
            },
            spline: {
                title: "Spline",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/upafes.svg",
                config: {
                    "chart--type": "spline",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            splineWithDataLabel: {
                title: "Spline with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/odopic.svg",
                config: {
                    "chart--type": "spline",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            logarithmic: {
                title: "Logarithmic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/abywon.svg",
                config: {
                    "chart--type": "line",
                    "yAxis--type": "logarithmic",
                    "yAxis--minorTickInterval": "auto",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            stepLine: {
                title: "Step line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/akeduw.svg",
                config: {
                    "chart--type": "line",
                    "plotOptions-line--step": "left",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            stepLineWithDataLabel: {
                title: "Step line with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/oxenux.svg",
                config: {
                    "chart--type": "line",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "plotOptions-line--step": "left",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            inverted: {
                title: "Inverted",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ozojul.svg",
                config: {
                    "chart--type": "line",
                    "chart--inverted": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            negative: {
                title: "Negative color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/uxyfys.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--negativeColor": "#0088FF",
                    "series[0]--color": "#FF0000",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            errorbar: {
                title: "Error bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ypewak.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "line",
                    "series[1]--type": "errorbar",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for the series' Y values. and two columns for the error bar series maximum and minimum."
            },
            combination: {
                title: "Combination chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ynikoc.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "column",
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns."
            }
        }
    },
    area: {
        title: "Area charts",
        templates: {
            basic: {
                title: "Basic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ecexev.svg",
                config: {
                    "chart--type": "area",
                    "chart--polar": !1
                },
                tooltipText: "Non-stacked area chart. Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            basicDatalabels: {
                title: "Area with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/atikon.svg",
                config: {
                    "chart--type": "area",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Non-stacked area chart with data labels. Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            stacked: {
                title: "Stacked",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/inebav.svg",
                config: {
                    "chart--type": "area",
                    "plotOptions-series--stacking": "normal",
                    "chart--polar": !1
                },
                tooltipText: "Stacked area chart. Requires one column for X values or categories, subsequently one column for each series' Y values. The first data series is in the top of the stack."
            },
            stackedDatalabels: {
                title: "Stacked with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iluryh.svg",
                config: {
                    "chart--type": "area",
                    "plotOptions-series--stacking": "normal",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Stacked area chart. Requires one column for X values or categories, subsequently one column for each series' Y values. The first data series is in the top of the stack."
            },
            percentage: {
                title: "Stacked percentage",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iporos.svg",
                config: {
                    "chart--type": "area",
                    "plotOptions-series--stacking": "percent",
                    "chart--polar": !1
                },
                tooltipText: "Stacked percentage area chart. Requires one column for X values or categories, subsequently one column for each series' Y values. The first data series is in the top of the stack."
            },
            inverted: {
                title: "Inverted",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/yqenid.svg",
                config: {
                    "chart--type": "area",
                    "chart--inverted": !0,
                    "chart--polar": !1
                },
                tooltipText: "Area chart with inverted axes. Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            invertedDatalabels: {
                title: "Inverted with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/acemyq.svg",
                config: {
                    "chart--type": "area",
                    "chart--inverted": !0,
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Area chart with inverted axes and data labels. Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            stepLine: {
                title: "Step line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/abutix.svg",
                config: {
                    "chart--type": "area",
                    "plotOptions-area--step": "left",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            negative: {
                title: "Negative color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ydypal.svg",
                config: {
                    "chart--type": "area",
                    "series[0]--negativeColor": "#0088FF",
                    "series[0]--color": "#FF0000",
                    "chart--polar": !1
                },
                tooltipText: "Displays negative values with an alternative color. Colors can be set in Customize -> Simple -> Data series. Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            arearange: {
                title: "Arearange",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/udepat.svg",
                config: {
                    "chart--type": "arearange",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently two data column for each arearange series' Y values."
            }
        }
    },
    column: {
        title: "Column charts",
        templates: {
            grouped: {
                title: "Basic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovobiq.svg",
                config: {
                    "chart--type": "column",
                    "chart--polar": !1
                },
                tooltipText: "Grouped column chart. Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            groupedLabels: {
                title: "With label",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ivetir.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Grouped column chart with datalabels. Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            column3d: {
                title: "Column 3D",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ahyqyx.svg",
                config: {
                    "chart--type": "column",
                    "chart--margin": 75,
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 15,
                    "chart-options3d--beta": 15,
                    "chart-options3d--depth": 50,
                    "chart-options3d--viewDistance": 15,
                    "plotOptions-column--depth": 25,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            columnstacked: {
                title: "Stacked",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ycehiz.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--stacking": "normal",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            columnstackedLabels: {
                title: "Stacked with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/acijil.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--stacking": "normal",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            columnStacked3d: {
                title: "Stacked 3D",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ahyqyx.svg",
                config: {
                    "chart--type": "column",
                    "chart--margin": 75,
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 15,
                    "chart-options3d--beta": 15,
                    "chart-options3d--depth": 50,
                    "chart-options3d--viewDistance": 15,
                    "plotOptions-column--depth": 25,
                    "plotOptions-series--stacking": "normal",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            columnStackedPercentage: {
                title: "Stacked percent",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ojixow.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--stacking": "percent"
                },
                tooltipText: "Grouped column chart. Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            columnStackedPercentageLabels: {
                title: "Stacked percent with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iwanyg.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--stacking": "percent",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Grouped column chart. Requires one data column for X values or categories, subsequently one data column for each series' Y values."
            },
            negative: {
                title: "Negative color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/yxajih.svg",
                config: {
                    "chart--type": "column",
                    "series[0]--negativeColor": "#0088FF",
                    "series[0]--color": "#FF0000",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            multiColor: {
                title: "Multi color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/alyqyz.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--colorByPoint": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            logarithmic: {
                title: "Logarithmic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/igipeg.svg",
                config: {
                    "chart--type": "column",
                    "yAxis--type": "logarithmic",
                    "yAxis--minorTickInterval": "auto",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            columnrange: {
                title: "Columnrange",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ihilaq.svg",
                config: {
                    "chart--type": "columnrange",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently two data column for each series' Y values (horizontal axis)."
            },
            columnrangeLabelsLabels: {
                title: "Columnrange with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ojykiw.svg",
                config: {
                    "chart--type": "columnrange",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently two data column for each series' Y values (horizontal axis)."
            },
            packedColumns: {
                title: "Packed columns",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/exypor.svg",
                config: {
                    "chart--type": "column",
                    "plotOptions-series--pointPadding": 0,
                    "plotOptions-series--groupPadding": 0,
                    "plotOptions-series--borderWidth": 0,
                    "plotOptions-series--shadow": !1,
                    "chart--polar": !1
                },
                tooltiptext: "Requires one data column for X values or categories, subsequently one data column for the series' Y values."
            },
            errorbar: {
                title: "Error bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/icytes.svg",
                config: {
                    "chart--type": "column",
                    "series[1]--type": "errorbar",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for the series' Y values. and two columns for the error bar series maximum and minimum."
            }
        }
    },
    bar: {
        title: "Bar charts",
        templates: {
            basic: {
                title: "Basic bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovuvul.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            basicLabels: {
                title: "Basic with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovuvul.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstacked: {
                title: "Stacked bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/epodat.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series--stacking": "normal",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstackedLabels: {
                title: "Stacked with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/otupaz.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series--stacking": "normal",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstackedpercentage: {
                title: "Stacked percent bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/yhekaq.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series--stacking": "percent",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstackedpercentageLabels: {
                title: "Stacked percentage with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/izoqyx.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series--stacking": "percent",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            negative: {
                title: "Negative color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/efygam.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "series[0]--negativeColor": "#0088FF",
                    "series[0]--color": "#FF0000",
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            multiColor: {
                title: "Multi color",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ogixak.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series-colorByPoint": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            logarithmic: {
                title: "Logarithmic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/imykus.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "yAxis--type": "logarithmic",
                    "yAxis--minorTickInterval": "auto",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barRange: {
                title: "Horizontal columnrange",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iqagel.svg",
                config: {
                    "chart--type": "columnrange",
                    "chart--inverted": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently two data column for each series' Y values (horizontal axis)."
            },
            barRangeLabels: {
                title: "Columnrange with labels",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/eracar.svg",
                config: {
                    "chart--type": "columnrange",
                    "chart--inverted": !0,
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently two data column for each series' Y values (horizontal axis)."
            },
            packedColumns: {
                title: "Packed columns",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/orixis.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "plotOptions-series--pointPadding": 0,
                    "plotOptions-series--groupPadding": 0,
                    "plotOptions-series--borderWidth": 0,
                    "plotOptions-series--shadow": !1,
                    "chart--polar": !1
                },
                tooltiptext: "Requires one data column for X values or categories, subsequently one data column for the series' Y values."
            },
            errorbar: {
                title: "Error bar",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/omikax.svg",
                config: {
                    "chart--type": "column",
                    "chart--inverted": !0,
                    "series[1]--type": "errorbar",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for the series' Y values. and two columns for the error bar series maximum and minimum."
            }
        }
    },
    scatterandbubble: {
        title: "Scatter and Bubble",
        templates: {
            scatter: {
                title: "Scatter chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ezatat.svg",
                config: {
                    "chart--type": "scatter",
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values and one for Y values."
            },
            bubbles: {
                title: "Bubble chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/usyfyw.svg",
                config: {
                    "chart--type": "bubble",
                    "chart--polar": !1
                },
                tooltipText: "Requires three data columns: one for X values, one for Y values and one for the size of the bubble (Z value)."
            },
            scatterLine: {
                title: "Scatter with line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ydaqok.svg",
                config: {
                    "chart--type": "scatter",
                    "plotOptions-series--lineWidth": 1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values and one for Y values."
            },
            scatterLineNoMarker: {
                title: "Scatter with line, no marker",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/uvepiw.svg",
                config: {
                    "chart--type": "scatter",
                    "plotOptions-series--lineWidth": 1,
                    "plotOptions-series-marker--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one data column for X values and one for Y values."
            }
        }
    },
    pie: {
        title: "Pie charts",
        templates: {
            pie: {
                title: "Pie chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/yqoxob.svg",
                config: {
                    "chart--type": "pie",
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--cursor": !0,
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in data labels) and one for their values."
            },
            pie3D: {
                title: "3D Pie chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/erifer.svg",
                config: {
                    "chart--type": "pie",
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 45,
                    "chart-options3d--beta": 0,
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--depth": 35,
                    "plotOptions-pie--cursor": "pointer",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in data labels) and one for their values."
            },
            pielegend: {
                title: "Pie with legend",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/anofof.svg",
                config: {
                    "chart--type": "pie",
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--cursor": !0,
                    "plotOptions-pie--showInLegend": !0,
                    "plotOptions-pie-dataLabels--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in the legend) and one for their values."
            },
            pie3Dlegend: {
                title: "3D Pie with legend",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ubopaq.svg",
                config: {
                    "chart--type": "pie",
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 45,
                    "chart-options3d--beta": 0,
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--depth": 35,
                    "plotOptions-pie--cursor": "pointer",
                    "plotOptions-pie--showInLegend": !0,
                    "plotOptions-pie-dataLabels--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in legend) and one for their values."
            },
            donut: {
                title: "Donut",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/upaxab.svg",
                config: {
                    "chart--type": "pie",
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--cursor": !0,
                    "plotOptions-pie--innerSize": "60%",
                    "plotOptions-pie-dataLabels--enabled": !0,
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in data labels) and one for their values."
            },
            donutlegend: {
                title: "Donut with legend",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/arutag.svg",
                config: {
                    "chart--type": "pie",
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--cursor": !0,
                    "plotOptions-pie--showInLegend": !0,
                    "plotOptions-pie--innerSize": "60%",
                    "plotOptions-pie-dataLabels--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Donut with categories. Requires two data columns: one for slice names (shown in legend) and one for their values."
            },
            donut3D: {
                title: "3D Donut chart",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ehuvoh.svg",
                config: {
                    "chart--type": "pie",
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 45,
                    "chart-options3d--beta": 0,
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--depth": 35,
                    "plotOptions-pie--cursor": "pointer",
                    "plotOptions-series-dataLabels--enabled": !0,
                    "plotOptions-pie--innerSize": "60%",
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in data labels) and one for their values."
            },
            donut3Dlegend: {
                title: "3D Donut chart with legend",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/oriwyb.svg",
                config: {
                    "chart--type": "pie",
                    "chart-options3d--enabled": !0,
                    "chart-options3d--alpha": 45,
                    "chart-options3d--beta": 0,
                    "plotOptions-pie--allowPointSelect": !0,
                    "plotOptions-pie--depth": 35,
                    "plotOptions-pie--cursor": "pointer",
                    "plotOptions-series-dataLabels--enabled": !1,
                    "plotOptions-pie--showInLegend": !0,
                    "plotOptions-pie--innerSize": "60%",
                    "chart--polar": !1
                },
                tooltipText: "3D Donut with categories. Requires two data columns: one for slice names (shown in data labels) and one for their values."
            },
            semicircledonut: {
                title: "Semi circle donut",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iwyfes.svg",
                config: {
                    "chart--type": "pie",
                    "plotOptions-pie--allowPointSelect": !1,
                    "plotOptions-series-dataLabels--enabled": !0,
                    "plotOptions-pie-dataLabels--distance": -30,
                    "plotOptions-pie-dataLabels--style": {
                        fontWeight: "bold",
                        color: "white",
                        textShadow: "0px 1px 2px black"
                    },
                    "plotOptions-pie--innerSize": "50%",
                    "plotOptions-pie--startAngle": -90,
                    "plotOptions-pie--endAngle": 90,
                    "plotOptions-pie--center": ["50%", "75%"],
                    "chart--polar": !1
                },
                tooltipText: "Requires two data columns: one for slice names (shown in data labels) and one for their values."
            }
        }
    },
    polar: {
        title: "Polar",
        templates: {
            polarLine: {
                title: "Polar line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ajogud.svg",
                config: {
                    "chart--type": "line",
                    "chart--polar": !0
                },
                tooltipText: "Requires one column for X values or categories (labels around the perimeter), subsequently one column for each series' Y values (plotted from center and out)."
            },
            spiderLine: {
                title: "Spider line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/uqonaj.svg",
                config: {
                    "chart--type": "line",
                    "chart--polar": !0,
                    "xAxis--tickmarkPlacement": "on",
                    "xAxis--lineWidth": 0,
                    "yAxis--lineWidth": 0,
                    "yAxis--gridLineInterpolation": "polygon"
                },
                tooltipText: "Requires one column for X values or categories (labels around the perimeter), subsequently one column for each series' Y values (plotted from center and out)."
            },
            polarArea: {
                title: "Polar area",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/oqajux.svg",
                config: {
                    "chart--type": "area",
                    "chart--polar": !0
                },
                tooltipText: "Requires one column for X values or categories (labels around the perimeter), subsequently one column for each series' Y values (plotted from center and out)."
            },
            spiderArea: {
                title: "Spider area",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/exajib.svg",
                config: {
                    "chart--type": "area",
                    "chart--polar": !0,
                    "xAxis--tickmarkPlacement": "on",
                    "xAxis--lineWidth": 0,
                    "yAxis--lineWidth": 0,
                    "yAxis--gridLineInterpolation": "polygon"
                },
                tooltipText: "Requires one column for X values or categories (labels around the perimeter), subsequently one column for each series' Y values (plotted from center and out)."
            }
        }
    },
    stock: {
        title: "Stock charts",
        templates: {
            basic: {
                title: "Basic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/awuhad.svg",
                constr: "StockChart",
                config: {
                    "chart--type": "line",
                    "rangeSelector--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            areastock: {
                title: "Area",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ukaqor/136.svg",
                constr: "StockChart",
                config: {
                    "chart--type": "area",
                    "rangeSelector--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            columnstock: {
                title: "Column",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ogywen/136.svg",
                constr: "StockChart",
                config: {
                    "chart--type": "column",
                    "rangeSelector--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            ohlc: {
                title: "OHLC",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/opilip.svg",
                constr: "StockChart",
                config: {
                    "chart--type": "ohlc",
                    "rangeSelector--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently four columns for each series' Y values, e.g. open, high, low, close."
            },
            candlestick: {
                title: "Candlestick",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/etybef.svg",
                constr: "StockChart",
                config: {
                    "chart--type": "candlestick",
                    "rangeSelector--enabled": !1,
                    "chart--polar": !1
                },
                tooltipText: "Requires one column for X values or categories, subsequently four columns for each series' Y values, e.g. open, high, low, close."
            }
        }
    },
    more: {
        title: "More types",
        templates: {
            solidgauge: {
                title: "Solid gauge",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/apocob.svg",
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values.",
                config: {
                    "chart--type": "solidgauge",
                    "pane--center": ["50%", "85%"],
                    "pane--size": "140%",
                    "pane--startAngle": "-90",
                    "pane--endAngle": "90",
                    "pane--background": {
                        backgroundColor: "#EEE",
                        innerRadius: "60%",
                        outerRadius: "100%",
                        shape: "arc"
                    },
                    "tooltip--enabled": !1,
                    "yAxis--stops": [[.1, "#55BF3B"], [.5, "#DDDF0D"], [.9, "#DF5353"]],
                    "yAxis--min": 0,
                    "yAxis--max": 100,
                    "yAxis--lineWidth": 0,
                    "yAxis--minorTickInterval": null,
                    "yAxis--tickPixelInterval": 400,
                    "yAxis--tickWidth": 0,
                    "yAxis-title--y": -70,
                    "yAxis-labels--y": 16,
                    "plotOptions-solidgauge-dataLabels--y": 10,
                    "plotOptions-solidgauge-dataLabels--borderWidth": 0,
                    "plotOptions-solidgauge-dataLabels--useHTML": !0,
                    "series[0]-dataLabels--format": '<div style="text-align:center"><span style="font-size:25px;color:#000000">{y}</span></div>'
                }
            },
            funnel: {
                title: "Funnel",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/exumeq.svg",
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values.",
                config: {
                    "chart--type": "funnel",
                    "plotOptions-series-datalabels--color": "#000000",
                    "plotOptions-series-dataLabels--softConnector": !0,
                    "plotOptions-series--neckWidth": "20%",
                    "plotOptions-series--neckHeight": "35%",
                    "series[0]--width": "64%"
                }
            },
            pyramid: {
                title: "Pyramid",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/obulek.svg",
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values.",
                config: {
                    "chart--type": "pyramid",
                    "plotOptions-series-datalabels--color": "#000000",
                    "plotOptions-series-dataLabels--softConnector": !0,
                    "series[0]--width": "64%"
                }
            },
            boxplot: {
                title: "Boxplot",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/idagib.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "boxplot"
                }
            }
        }
    },
    combinations: {
        title: "Combination charts",
        templates: {
            lineColumn: {
                title: "Line and column",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ynikoc.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "column"
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values. By default, the first series is a column series and subsequent series are lines."
            },
            columnLine: {
                title: "Column and line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ufafag.svg",
                config: {
                    "chart--type": "column",
                    "series[0]--type": "line"
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values. By default, the first series is a line series and subsequent series are columns."
            },
            areaLine: {
                title: "Area and line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ahimym.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "area"
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values. By default, the first series is a area series and subsequent series are lines."
            },
            scatterLine: {
                title: "Scatter and line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/etakof.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "scatter"
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values. By default, the first series is a scatter series and subsequent series are lines."
            },
            arearangeLine: {
                title: "Arearange and line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ypepug.svg",
                config: {
                    "chart--type": "line",
                    "series[0]--type": "arearange"
                },
                tooltipText: "Requires one data column for X values or categories, subsequently one data column for each series' Y values. By default, the first series is a arearange series and subsequent series are lines."
            }
        }
    },
    maps: {
        title: "Maps",
        templates: {
            landsdeelMap: {
                constr: "Map",
                title: "Landsdeel Map",
                urlImg: "http://upload.wikimedia.org/wikipedia/commons/b/bb/Carte_des_Pays-Bas_%28netherlands%29_without_names.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "map",
                    "chart--geoUrl": "http://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?OUTPUTFORMAT=json&REQUEST=GetFeature&SERVICE=WFS&SRSNAME=EPSG:4326&TypeName=cbs_landsdeel_2016.p1.geo.json",
                    "chart--geoProperty": "statcode",
                    "xAxis--lineWidth": 0,
                    "xAxis--gridLineWidth": 0,
                    "xAxis--minorGridLineWidth": 0,
                    "xAxis--lineColor": "transparent",
                    "xAxis--labels--enabled": !1,
                    "xAxis--minorTickLength": 0,
                    "xAxis--tickLength": 0,
                    "yAxis--lineWidth": 0,
                    "yAxis--gridLineWidth": 0,
                    "yAxis--minorGridLineWidth": 0,
                    "yAxis--lineColor": "transparent",
                    "yAxis--labels--enabled": !1,
                    "yAxis--minorTickLength": 0,
                    "yAxis--tickLength": 0,
                    "plotOptions--map--allAreas": !0
                }
            },
            provincieMap: {
                constr: "Map",
                title: "Provincie Map",
                urlImg: "http://upload.wikimedia.org/wikipedia/commons/b/bb/Carte_des_Pays-Bas_%28netherlands%29_without_names.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "map",
                    "chart--geoUrl": "http://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?OUTPUTFORMAT=json&REQUEST=GetFeature&SERVICE=WFS&SRSNAME=EPSG:4326&TypeName=cbs_provincie_2016.p1.geo.json",
                    "chart--geoProperty": "statcode",
                    "xAxis--lineWidth": 0,
                    "xAxis--gridLineWidth": 0,
                    "xAxis--minorGridLineWidth": 0,
                    "xAxis--lineColor": "transparent",
                    "xAxis--labels--enabled": !1,
                    "xAxis--minorTickLength": 0,
                    "xAxis--tickLength": 0,
                    "yAxis--lineWidth": 0,
                    "yAxis--gridLineWidth": 0,
                    "yAxis--minorGridLineWidth": 0,
                    "yAxis--lineColor": "transparent",
                    "yAxis--labels--enabled": !1,
                    "yAxis--minorTickLength": 0,
                    "yAxis--tickLength": 0,
                    "plotOptions--map--allAreas": !0
                }
            },
            gemeenteMap: {
                constr: "Map",
                title: "Gemeente Map",
                urlImg: "http://upload.wikimedia.org/wikipedia/commons/b/bb/Carte_des_Pays-Bas_%28netherlands%29_without_names.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "map",
                    "chart--geoUrl": "http://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?OUTPUTFORMAT=json&REQUEST=GetFeature&SERVICE=WFS&SRSNAME=EPSG:4326&TypeName=cbs_gemeente_2016.p1.geo.json",
                    "chart--geoProperty": "statnaam",
                    "plotOptions--map--allAreas": !0,
                    "//plotOptions--map--keys": ["iso-a2", "value"]
                }
            },
            wijkMap: {
                constr: "Map",
                title: "Wijk Map",
                urlImg: "http://upload.wikimedia.org/wikipedia/commons/b/bb/Carte_des_Pays-Bas_%28netherlands%29_without_names.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "map",
                    "chart--geoUrl": "http://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?OUTPUTFORMAT=json&REQUEST=GetFeature&SERVICE=WFS&SRSNAME=EPSG:4326&TypeName=cbs_gemeente_2016.p1.geo.json",
                    "chart--geoProperty": "statnaam",
                    "plotOptions--map--allAreas": !0,
                    "//plotOptions--map--keys": ["iso-a2", "value"]
                }
            },
            buurtenMap: {
                constr: "Map",
                title: "Buurten Map",
                urlImg: "http://upload.wikimedia.org/wikipedia/commons/b/bb/Carte_des_Pays-Bas_%28netherlands%29_without_names.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: {
                    "chart--type": "map",
                    "chart--geoUrl": "http://geodata.nationaalgeoregister.nl/cbsgebiedsindelingen/wfs?OUTPUTFORMAT=json&REQUEST=GetFeature&SERVICE=WFS&SRSNAME=EPSG:4326&TypeName=cbs_gemeente_2016.p1.geo.json",
                    "chart--geoProperty": "statnaam",
                    "plotOptions--map--allAreas": !0,
                    "//plotOptions--map--keys": ["iso-a2", "value"]
                }
            }
        }
    }
},
"undefined" != typeof module && (module.exports = highed.meta.chartTemplates),
highed.meta.optionsExtended = {
    options: {
        "option.cat.title": [{
            text: "option.subcat.titles",
            options: [{
                id: "title--text",
                pid: "title.text",
                dataType: "string",
                context: "General",
                defaults: "Chart title",
                parent: "title"
            }, {
                id: "yAxis-title--text",
                dataIndex: 0,
                pid: "yAxis.title.text",
                dataType: "string",
                context: "General",
                defaults: "Values",
                parent: "yAxis-title"
            }]
        }],
        "option.cat.general": [{
            text: "option.subcat.size",
            options: [{
                id: "chart--width",
                custom: {
                    minValue: 50,
                    maxValue: 5e3,
                    step: 10
                },
                pid: "chart.width",
                dataType: "number",
                context: "General",
                defaults: "null",
                parent: "chart"
            }, {
                id: "chart--height",
                custom: {
                    minValue: 50,
                    maxValue: 5e3,
                    step: 10
                },
                pid: "chart.height",
                dataType: "number",
                context: "General",
                defaults: "null",
                parent: "chart"
            }]
        }, {
            text: "option.subcat.interaction",
            options: [{
                id: "chart--zoomType",
                pid: "chart.zoomType",
                dataType: "string",
                context: "General",
                parent: "chart",
                values: '[null, "x", "y", "xy"]'
            }, {
                id: "chart--polar",
                pid: "chart.polar",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "chart"
            }]
        }],
        "option.cat.appearance": [{
            text: "option.subcat.fonts",
            options: [{
                id: "chart--style",
                dataType: "font",
                pid: "chart.style",
                context: "General",
                defaults: '{"fontFamily":"\\"Lucida Grande\\", \\"Lucida Sans Unicode\\", Verdana, Arial, Helvetica, sans-serif","fontSize":"12px"}',
                parent: "chart"
            }]
        }, {
            text: "option.subcat.titlestyle",
            options: [{
                id: "title--style",
                dataType: "font",
                pid: "title.style",
                context: "General",
                defaults: '{ "color": "#333333", "fontSize": "18px" }',
                parent: "title"
            }, {
                id: "subtitle--style",
                dataType: "font",
                pid: "subtitle.style",
                context: "General",
                defaults: '{ "color": "#666666" }',
                parent: "subtitle"
            }]
        }, {
            text: "option.subcat.seriescolors",
            options: [{
                id: "colors",
                pid: "colors",
                dataType: "array<color>",
                context: "General",
                defaults: '[ "#7cb5ec" , "#434348" , "#90ed7d" , "#f7a35c" , "#8085e9" , "#f15c80" , "#e4d354" , "#2b908f" , "#f45b5b" , "#91e8e1"]'
            }]
        }, {
            text: "option.subcat.chartarea",
            options: [{
                id: "chart--backgroundColor",
                pid: "chart.backgroundColor",
                dataType: "color",
                context: "General",
                defaults: "#FFFFFF",
                parent: "chart"
            }, {
                id: "chart--borderWidth",
                custom: {
                    minValue: 0
                },
                pid: "chart.borderWidth",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "chart"
            }, {
                id: "chart--borderRadius",
                custom: {
                    minValue: 0
                },
                pid: "chart.borderRadius",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "chart"
            }, {
                id: "chart--borderColor",
                pid: "chart.borderColor",
                dataType: "color",
                context: "General",
                defaults: "#335cad",
                parent: "chart"
            }]
        }, {
            text: "option.subcat.plotarea",
            options: [{
                id: "chart--plotBackgroundColor",
                pid: "chart.plotBackgroundColor",
                dataType: "color",
                context: "General",
                parent: "chart"
            }, {
                id: "chart--plotBackgroundImage",
                pid: "chart.plotBackgroundImage",
                dataType: "string",
                context: "General",
                parent: "chart"
            }, {
                id: "chart--plotBorderWidth",
                pid: "chart.plotBorderWidth",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "chart"
            }, {
                id: "chart--plotBorderColor",
                pid: "chart.plotBorderColor",
                dataType: "color",
                context: "General",
                defaults: "#cccccc",
                parent: "chart"
            }]
        }],
        "option.cat.axes": [{
            text: "option.subcat.axessetup",
            options: [{
                id: "chart--inverted",
                pid: "chart.inverted",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "chart"
            }]
        }, {
            id: "xAxis",
            text: "option.subcat.xaxis",
            options: [{
                id: "xAxis-title--style",
                dataType: "font",
                dataIndex: 0,
                pid: "xAxis.title.style",
                context: "General",
                defaults: '{ "color": "#666666" }',
                parent: "xAxis-title"
            }, {
                id: "xAxis-title--text",
                dataIndex: 0,
                pid: "xAxis.title.text",
                dataType: "string",
                context: "General",
                parent: "xAxis-title"
            }, {
                id: "xAxis--type",
                dataIndex: 0,
                pid: "xAxis.type",
                dataType: "string",
                context: "General",
                defaults: "linear",
                parent: "xAxis",
                values: '["linear", "logarithmic", "datetime", "category"]'
            }, {
                id: "xAxis--opposite",
                dataIndex: 0,
                pid: "xAxis.opposite",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "xAxis"
            }, {
                id: "xAxis--reversed",
                dataIndex: 0,
                pid: "xAxis.reversed",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "xAxis"
            }, {
                id: "xAxis-labels--format",
                dataIndex: 0,
                pid: "xAxis.labels.format",
                dataType: "string",
                context: "General",
                defaults: "{value}",
                parent: "xAxis-labels"
            }]
        }, {
            id: "yAxis",
            text: "option.subcat.yaxis",
            options: [{
                id: "yAxis-title--style",
                dataType: "font",
                dataIndex: 0,
                pid: "yAxis.title.style",
                context: "General",
                defaults: '{ "color": "#666666" }',
                parent: "yAxis-title"
            }, {
                id: "yAxis--type",
                dataIndex: 0,
                pid: "yAxis.type",
                dataType: "string",
                context: "General",
                defaults: "linear",
                parent: "yAxis",
                values: '["linear", "logarithmic", "datetime", "category"]'
            }, {
                id: "yAxis--opposite",
                dataIndex: 0,
                pid: "yAxis.opposite",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "yAxis"
            }, {
                id: "yAxis--reversed",
                dataIndex: 0,
                pid: "yAxis.reversed",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "yAxis"
            }, {
                id: "yAxis-labels--format",
                dataIndex: 0,
                pid: "yAxis.labels.format",
                dataType: "string",
                context: "General",
                defaults: "{value}",
                parent: "yAxis-labels"
            }]
        }],
        "option.cat.series": [{
            id: "series",
            array: !0,
            text: "option.cat.series",
            controlledBy: {
                title: "Select Series",
                options: "series",
                optionsTitle: "name"
            },
            filteredBy: "series--type",
            options: [{
                id: "series--type",
                pid: "series.type",
                dataType: "string",
                context: "General",
                parent: "series<treemap>",
                values: '[null, "line", "spline", "column", "area", "areaspline", "pie", "arearange", "areasplinerange", "boxplot", "bubble", "columnrange", "errorbar", "funnel", "gauge", "scatter", "waterfall"]',
                subType: ["treemap", "scatter", "line", "gauge", "heatmap", "spline", "funnel", "areaspline", "area", "bar", "bubble", "areasplinerange", "boxplot", "pie", "arearange", "column", "waterfall", "columnrange", "pyramid", "polygon", "solidgauge", "errorbar"],
                subTypeDefaults: {}
            }, {
                id: "series--color",
                pid: "series.color",
                dataType: "color",
                context: "General",
                defaults: "null",
                parent: "series<boxplot>",
                subType: ["boxplot", "column", "waterfall", "columnrange", "heatmap", "area", "scatter", "bar", "treemap", "arearange", "bubble", "errorbar", "spline", "polygon", "line", "gauge", "areaspline", "areasplinerange"],
                subTypeDefaults: {
                    heatmap: "null",
                    treemap: "null",
                    errorbar: "#000000"
                }
            }, {
                id: "series--negativeColor",
                pid: "series.negativeColor",
                dataType: "color",
                context: "General",
                defaults: "null",
                parent: "series<gauge>",
                subType: ["gauge", "arearange", "areasplinerange", "line", "errorbar", "boxplot", "areaspline", "spline", "bar", "scatter", "polygon", "bubble", "area", "column"],
                subTypeDefaults: {
                    arearange: "null",
                    areasplinerange: "null",
                    line: "null",
                    errorbar: "null",
                    boxplot: "null",
                    areaspline: "null",
                    spline: "null",
                    bar: "null",
                    scatter: "null",
                    polygon: "null",
                    bubble: "null",
                    area: "null",
                    column: "null"
                }
            }, {
                id: "series--colorByPoint",
                pid: "series.colorByPoint",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "series<treemap>",
                subType: ["treemap", "heatmap", "column", "errorbar", "columnrange", "boxplot", "bar", "waterfall"],
                subTypeDefaults: {
                    heatmap: "false",
                    column: "false",
                    errorbar: "false",
                    columnrange: "false",
                    boxplot: "false",
                    bar: "false",
                    waterfall: "false"
                }
            }, {
                id: "series--dashStyle",
                pid: "series.dashStyle",
                dataType: "string",
                context: "General",
                defaults: "Solid",
                parent: "series<areasplinerange>",
                values: '["Solid", "ShortDash", "ShortDot", "ShortDashDot", "ShortDashDotDot", "Dot", "Dash" ,"LongDash", "DashDot", "LongDashDot", "LongDashDotDot"]',
                subType: ["areasplinerange", "polygon", "areaspline", "spline", "scatter", "area", "bubble", "arearange", "waterfall", "line"],
                subTypeDefaults: {
                    polygon: "Solid",
                    areaspline: "Solid",
                    spline: "Solid",
                    scatter: "Solid",
                    area: "Solid",
                    bubble: "Solid",
                    arearange: "Solid",
                    waterfall: "Dot",
                    line: "Solid"
                }
            }, {
                id: "series-marker--enabled",
                pid: "series.marker.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "null",
                parent: "series<bubble>-marker",
                subType: ["bubble", "area", "scatter", "areaspline", "spline", "polygon", "line"],
                subTypeDefaults: {
                    area: "null",
                    scatter: "null",
                    areaspline: "null",
                    spline: "null",
                    polygon: "null",
                    line: "null"
                }
            }, {
                id: "series-marker--symbol",
                pid: "series.marker.symbol",
                dataType: "string",
                context: "General",
                parent: "series<bubble>-marker",
                values: '[null, "circle", "square", "diamond", "triangle", "triangle-down"]',
                subType: ["bubble", "polygon", "line", "scatter", "spline", "area", "areaspline"],
                subTypeDefaults: {}
            }]
        }],
        "option.cat.labels": [{
            id: "data-labels",
            text: "option.subcat.labels",
            options: [{
                id: "plotOptions-series-dataLabels--enabled",
                pid: "plotOptions.series.dataLabels.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "plotOptions-series-dataLabels"
            }, {
                id: "plotOptions-series-dataLabels--style",
                pid: "plotOptions.series.dataLabels.style",
                dataType: "cssobject",
                context: "General",
                defaults: '{"color": "contrast", "fontSize": "11px", "fontWeight": "bold", "textOutline": "1px 1px contrast" }',
                parent: "plotOptions-series-dataLabels"
            }]
        }],
        "option.cat.legend": [{
            text: "option.subcat.general",
            options: [{
                id: "legend--enabled",
                pid: "legend.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "true",
                parent: "legend"
            }, {
                id: "legend--layout",
                pid: "legend.layout",
                dataType: "string",
                context: "General",
                defaults: "horizontal",
                parent: "legend",
                values: '["horizontal", "vertical"]'
            }]
        }, {
            text: "option.subcat.placement",
            options: [{
                id: "legend--align",
                pid: "legend.align",
                dataType: "string",
                context: "General",
                defaults: "center",
                parent: "legend",
                values: '["left", "center", "right"]'
            }, {
                id: "legend--x",
                pid: "legend.x",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "legend"
            }, {
                id: "legend--verticalAlign",
                pid: "legend.verticalAlign",
                dataType: "string",
                context: "General",
                defaults: "bottom",
                parent: "legend",
                values: '["top", "middle", "bottom"]'
            }, {
                id: "legend--y",
                pid: "legend.y",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "legend"
            }, {
                id: "legend--floating",
                pid: "legend.floating",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "legend"
            }]
        }, {
            text: "option.subcat.legendappearance",
            options: [{
                id: "legend--itemStyle",
                dataType: "font",
                pid: "legend.itemStyle",
                context: "General",
                defaults: '{ "color": "#333333", "cursor": "pointer", "fontSize": "12px", "fontWeight": "bold" }',
                parent: "legend"
            }, {
                id: "legend--itemHiddenStyle",
                dataType: "font",
                pid: "legend.itemHiddenStyle",
                context: "General",
                defaults: '{ "color": "#cccccc" }',
                parent: "legend"
            }, {
                id: "legend--backgroundColor",
                pid: "legend.backgroundColor",
                dataType: "color",
                context: "General",
                parent: "legend"
            }, {
                id: "legend--borderWidth",
                pid: "legend.borderWidth",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "legend"
            }, {
                id: "legend--borderRadius",
                pid: "legend.borderRadius",
                dataType: "number",
                context: "General",
                defaults: "0",
                parent: "legend"
            }, {
                id: "legend--borderColor",
                pid: "legend.borderColor",
                dataType: "color",
                context: "General",
                defaults: "#999999",
                parent: "legend"
            }]
        }],
        "option.cat.tooltip": [{
            text: "option.subcat.general",
            options: [{
                id: "tooltip--enabled",
                pid: "tooltip.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "true",
                parent: "tooltip"
            }, {
                id: "tooltip--shared",
                pid: "tooltip.shared",
                dataType: "boolean",
                context: "General",
                defaults: "false",
                parent: "tooltip"
            }]
        }, {
            text: "option.subcat.colorborder",
            options: [{
                id: "tooltip--backgroundColor",
                pid: "tooltip.backgroundColor",
                dataType: "color",
                context: "General",
                defaults: "rgba(247,247,247,0.85)",
                parent: "tooltip"
            }, {
                id: "tooltip--borderWidth",
                custom: {
                    minValue: 0
                },
                pid: "tooltip.borderWidth",
                dataType: "number",
                context: "General",
                defaults: "1",
                parent: "tooltip"
            }, {
                id: "tooltip--borderRadius",
                custom: {
                    minValue: 0
                },
                pid: "tooltip.borderRadius",
                dataType: "number",
                context: "General",
                defaults: "3",
                parent: "tooltip"
            }, {
                id: "tooltip--borderColor",
                pid: "tooltip.borderColor",
                dataType: "color",
                context: "General",
                defaults: "null",
                parent: "tooltip"
            }]
        }],
        "option.cat.exporting": [{
            text: "option.cat.exporting",
            options: [{
                id: "exporting--enabled",
                pid: "exporting.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "true",
                parent: "exporting"
            }, {
                id: "exporting--sourceWidth",
                custom: {
                    minValue: 10,
                    maxValue: 2e3,
                    step: 10
                },
                pid: "exporting.sourceWidth",
                dataType: "number",
                context: "General",
                parent: "exporting",
                values: ""
            }, {
                id: "exporting--scale",
                custom: {
                    minValue: 1,
                    maxValue: 4
                },
                pid: "exporting.scale",
                dataType: "number",
                context: "General",
                defaults: "2",
                parent: "exporting",
                values: ""
            }]
        }],
        "option.cat.localization": [{
            text: "option.subcat.numberformat",
            options: [{
                id: "lang--decimalPoint",
                pid: "lang.decimalPoint",
                dataType: "string",
                context: "General",
                defaults: ".",
                parent: "lang"
            }, {
                id: "lang--thousandsSep",
                pid: "lang.thousandsSep",
                dataType: "string",
                context: "General",
                defaults: " ",
                parent: "lang"
            }]
        }, {
            text: "option.subcat.exportbutton",
            options: [{
                id: "lang--contextButtonTitle",
                pid: "lang.contextButtonTitle",
                dataType: "string",
                context: "General",
                defaults: "Chart context menu",
                parent: "lang",
                values: ""
            }, {
                id: "lang--printChart",
                pid: "lang.printChart",
                dataType: "string",
                context: "General",
                defaults: "Print chart",
                parent: "lang",
                values: ""
            }, {
                id: "lang--downloadPNG",
                pid: "lang.downloadPNG",
                dataType: "string",
                context: "General",
                defaults: "Download PNG image",
                parent: "lang"
            }, {
                id: "lang--downloadJPEG",
                pid: "lang.downloadJPEG",
                dataType: "string",
                context: "General",
                defaults: "Download JPEG image",
                parent: "lang"
            }, {
                id: "lang--downloadPDF",
                pid: "lang.downloadPDF",
                dataType: "string",
                context: "General",
                defaults: "Download PDF document",
                parent: "lang"
            }, {
                id: "lang--downloadSVG",
                pid: "lang.downloadSVG",
                dataType: "string",
                context: "General",
                defaults: "Download SVG vector image",
                parent: "lang"
            }]
        }, {
            text: "option.subcat.zoombutton",
            options: [{
                id: "lang--resetZoom",
                pid: "lang.resetZoom",
                dataType: "string",
                context: "General",
                defaults: "Reset zoom",
                parent: "lang"
            }]
        }],
        "option.cat.credits": [{
            text: "option.cat.credits",
            options: [{
                id: "credits--enabled",
                pid: "credits.enabled",
                dataType: "boolean",
                context: "General",
                defaults: "true",
                parent: "credits"
            }, {
                id: "credits--text",
                pid: "credits.text",
                dataType: "string",
                context: "General",
                defaults: "Highcharts.com",
                parent: "credits"
            }, {
                id: "credits--href",
                pid: "credits.href",
                dataType: "string",
                context: "General",
                defaults: "http://www.highcharts.com",
                parent: "credits"
            }]
        }]
    }
},
highed.meta.cbsoptionsExtended = {
    options: {
        "option.cat.cbsSpecific": {
            subs: [{
                text: "option.subcat.cultureSettings",
                options: [{
                    id: "cultureSelection",
                    pid: "culture.selection",
                    dataType: "string",
                    context: "General",
                    defaults: highed.getLocalizedStr("option.culture.dutch"),
                    values: '["' + highed.getLocalizedStr("option.culture.dutch") + '", "' + highed.getLocalizedStr("option.culture.english") + '"]'
                }]
            }, {
                text: "option.subcat.sources",
                options: [{
                    id: "sources--text",
                    pid: "sources",
                    dataType: "string",
                    context: "General"
                }, {
                    id: "footNote--text",
                    pid: "footNote",
                    dataType: "multiline",
                    context: "General"
                }]
            }, {
                text: "option.subcat.unitOfMeasure",
                options: [{
                    id: "tooltip--valuePrefix",
                    pid: "tooltip.valuePrefix",
                    dataType: "string",
                    context: "General",
                    defaults: "",
                    parent: "tooltip"
                }, {
                    id: "tooltip--valueSuffix",
                    pid: "tooltip.valueSuffix",
                    dataType: "string",
                    context: "General",
                    defaults: "",
                    parent: "tooltip"
                }]
            }, {
                text: "option.subcat.searchForRegion",
                enableForChartTypes: ["map", "mapbubble"],
                options: [{
                    id: "chart--searchForRegionEnabled",
                    pid: "chart.searchForRegionEnabled",
                    dataType: "boolean",
                    defaults: "false",
                    context: "General"
                }]
            }]
        },
        "option.cat.title": {
            subs: [{
                text: "option.subcat.titles",
                options: [{
                    id: "title--text",
                    pid: "title.text",
                    dataType: "string",
                    context: "General",
                    defaults: "Chart title",
                    parent: "title"
                }, {
                    id: "chart--description",
                    pid: "chart.description",
                    dataType: "string",
                    context: "General",
                    defaults: "Chart description",
                    parent: "chart"
                }]
            }]
        },
        "option.cat.general": {
            subs: [{
                text: "option.subcat.size",
                options: [{
                    id: "chart--height",
                    custom: {
                        minValue: 50,
                        maxValue: 5e3
                    },
                    pid: "chart.height",
                    dataType: "number",
                    context: "General",
                    parent: "chart"
                }]
            }]
        },
        "option.cat.series": {
            subs: [{
                text: "option.subcat.series",
                id: "series",
                array: !0,
                controlledBy: {
                    title: "Select Series",
                    options: "series",
                    optionsTitle: "name",
                    filteredBy: "isSerie"
                },
                filteredBy: "series--type",
                options: [{
                    id: "series--description",
                    pid: "series.description",
                    dataType: "string",
                    context: "General",
                    defaults: "Serie description ",
                    parent: "series"
                }]
            }]
        },
        "option.cat.axes": {
            enableForChartTypes: ["line", "spline", "bar", "area", "column"],
            subs: [{
                id: "xAxis",
                text: "option.subcat.xaxis",
                filteredBy: "chart--type",
                options: [{
                    id: "xAxis-title--text",
                    dataIndex: 0,
                    pid: "xAxis.title.text",
                    dataType: "string",
                    context: "General",
                    defaults: "",
                    parent: "xAxis-title",
                    subType: ["line", "spline", "combination", "bar", "area", "column"]
                }, {
                    id: "xAxis-tickInterval",
                    dataIndex: 0,
                    pid: "xAxis.tickInterval",
                    dataType: "number",
                    custom: {
                        minValue: 1
                    },
                    context: "General",
                    defaults: 1,
                    parent: "xAxis-title",
                    subType: ["line", "spline", "combination", "area"]
                }, {
                    id: "xAxis-labels--format",
                    dataIndex: 0,
                    pid: "xAxis.labels.format",
                    dataType: "string",
                    context: "General",
                    defaults: "{value}",
                    parent: "xAxis-labels"
                }, {
                    id: "xAxis-labels--hideGrouped",
                    dataIndex: 0,
                    pid: "xAxis.labels.hideGrouped",
                    dataType: "boolean",
                    context: "General",
                    defaults: "false",
                    parent: "xAxis-labels"
                }]
            }, {
                id: "yAxis",
                text: "option.subcat.yaxis",
                filteredBy: "chart--type",
                options: [{
                    id: "yAxis-cbsTitle",
                    dataIndex: 0,
                    pid: "yAxis.title.text",
                    dataType: "string",
                    context: "General",
                    defaults: "",
                    parent: "yAxis-title",
                    subType: ["line", "spline", "combination", "bar", "area", "column"]
                }, {
                    id: "yAxis--type",
                    dataIndex: 0,
                    pid: "yAxis.type",
                    dataType: "string",
                    context: "General",
                    defaults: "linear",
                    parent: "yAxis",
                    values: '["linear", "logarithmic"]'
                }, {
                    id: "yAxis-labels--format",
                    dataIndex: 0,
                    pid: "yAxis.labels.format",
                    dataType: "string",
                    context: "General",
                    defaults: "{value}",
                    parent: "yAxis-labels"
                }, {
                    id: "yAxis-tickInterval",
                    dataIndex: 0,
                    pid: "yAxis.tickInterval",
                    context: "General",
                    parent: "yAxis-labels"
                }, {
                    id: "yAxis--min",
                    dataIndex: 0,
                    pid: "yAxis.min",
                    context: "General",
                    parent: "yAxis-labels"
                }, {
                    id: "yAxis--max",
                    dataIndex: 0,
                    pid: "yAxis.max",
                    context: "General",
                    parent: "yAxis-labels"
                }, {
                    id: "yAxis--plotLines--value",
                    dataIndex: 0,
                    pid: "yAxis.plotLine",
                    context: "General",
                    parent: "yAxis"
                }]
            }]
        },
        "option.cat.labels": {
            subs: [{
                id: "data-labels",
                text: "option.subcat.labels",
                options: [{
                    id: "plotOptions-series-dataLabels--enabled",
                    pid: "plotOptions.series.dataLabels.enabled",
                    dataType: "boolean",
                    context: "General",
                    defaults: "false",
                    parent: "plotOptions-series-dataLabels"
                }]
            }]
        },
        "option.cat.legend": {
            subs: [{
                text: "option.subcat.colors",
                filteredBy: "chart--type",
                options: [{
                    id: "mapColorSelection",
                    pid: "mapColor.settings",
                    dataType: "string",
                    context: "General",
                    defaults: highed.getLocalizedStr("option.color.palette.blue"),
                    values: '["' + highed.getLocalizedStr("option.color.palette.blue") + '", "' + highed.getLocalizedStr("option.color.palette.green") + '", "' + highed.getLocalizedStr("option.color.palette.red") + '", "' + highed.getLocalizedStr("option.color.palette.purple") + '"]',
                    subType: ["map"],
                    reloadOptionsOnChange: !0
                }, {
                    id: "colorSelection",
                    pid: "color.settings",
                    dataType: "string",
                    context: "General",
                    defaults: highed.getLocalizedStr("option.color.palette.cold"),
                    values: '["' + highed.getLocalizedStr("option.color.palette.cold") + '", "' + highed.getLocalizedStr("option.color.palette.warm") + '"]',
                    subType: ["line", "spline", "combination", "bar", "area", "column", "polar", "pie"]
                }]
            }, {
                text: "option.subcat.mapLegend",
                enableForChartTypes: ["map"],
                filteredBy: "chart--mapType",
                options: [{
                    id: "colorAxis--dataClasses",
                    pid: "legend.bandWidth",
                    text: "Bandbreedtes",
                    tooltipText: "Specify the color ranges for the map chart here. Each number marks a transition to the next color. Optional the first an last number can be left blank to create infinite boundaries like resp. <5 or >100",
                    dataType: "legendDataClassesArray<object>",
                    context: "General",
                    subType: ["map"]
                }, {
                    id: "legend--enabled",
                    pid: "legend",
                    dataType: "boolean",
                    context: "General",
                    defaults: "true",
                    parent: "legend"
                }, {
                    id: "legend--noDataEnabled",
                    pid: "legend.noData.enabled",
                    dataType: "boolean",
                    context: "General",
                    defaults: "false",
                    parent: "legend",
                    subType: ["map"]
                }]
            }, {
                text: "option.subcat.mapLegendBubbleValues",
                enableForChartTypes: ["map"],
                filteredBy: "chart--mapType",
                options: [{
                    id: "mapbubble--legend--maxValue",
                    pid: "mapbubble.legend.maxValue",
                    dataType: "stringNumber",
                    context: "General",
                    parent: "series",
                    subType: ["mapbubble"]
                }, {
                    id: "mapbubble--legend--middleValue",
                    pid: "mapbubble.legend.middleValue",
                    dataType: "stringNumber",
                    context: "General",
                    parent: "series",
                    subType: ["mapbubble"]
                }, {
                    id: "mapbubble--legend--minValue",
                    pid: "mapbubble.legend.minValue",
                    dataType: "stringNumber",
                    context: "General",
                    parent: "series",
                    subType: ["mapbubble"]
                }]
            }, {
                text: "option.subcat.mapLegendBubbleSize",
                enableForChartTypes: ["map"],
                filteredBy: "chart--mapType",
                options: [{
                    id: "plotOptions--mapbubble--maxSize",
                    pid: "plotOptions.mapbubble.maxSize",
                    dataType: "string",
                    context: "General",
                    defaults: "45",
                    parent: "series",
                    subType: ["mapbubble"]
                }, {
                    id: "plotOptions--mapbubble--minSize",
                    pid: "plotOptions.mapbubble.minSize",
                    dataType: "string",
                    context: "General",
                    defaults: "15",
                    parent: "series",
                    subType: ["mapbubble"]
                }]
            }, {
                text: "option.subcat.mapLegendLabels",
                enableForChartTypes: ["map"],
                filteredBy: "chart--mapType",
                options: [{
                    id: "lang--legend--less",
                    pid: "lang.legend.less",
                    dataType: "string",
                    context: "General",
                    subType: ["map"]
                }, {
                    id: "lang--legend--to",
                    pid: "lang.legend.to",
                    dataType: "string",
                    context: "General",
                    subType: ["map"]
                }, {
                    id: "lang--legend--more",
                    pid: "lang.legend.more",
                    dataType: "string",
                    context: "General",
                    subType: ["map"]
                }]
            }, {
                text: "option.subcat.legend",
                enableForChartTypes: ["line", "spline", "bar", "area", "column", "polar", "pie"],
                options: [{
                    id: "legend--enabled",
                    pid: "legend",
                    dataType: "boolean",
                    context: "General",
                    defaults: "true",
                    parent: "legend"
                }]
            }]
        },
        "option.cat.tooltip": {
            subs: [{
                text: "option.subcat.general",
                options: [{
                    id: "tooltip--shared",
                    pid: "tooltip.shared",
                    dataType: "boolean",
                    context: "General",
                    defaults: "true",
                    parent: "tooltip"
                }]
            }]
        },
        "option.cat.exporting": {
            subs: [{
                text: "option.cat.exporting",
                filteredBy: "chart--mapType",
                options: [{
                    id: "title--color",
                    dataType: "string",
                    pid: "title.color",
                    context: "General",
                    defaults: highed.getLocalizedStr("option.title.color.black"),
                    values: '["' + highed.getLocalizedStr("option.title.color.black") + '", "' + highed.getLocalizedStr("option.title.color.blue") + '"]',
                    parent: "title"
                }, {
                    id: "exporting--sourceWidth",
                    pid: "exporting.sourceWidth",
                    dataType: "number",
                    context: "General",
                    defaults: 378,
                    parent: "chart",
                    subType: ["map", "mapbubble"]
                }, {
                    id: "exporting--sourceHeight",
                    pid: "exporting.sourceHeight",
                    dataType: "number",
                    context: "General",
                    defaults: 228,
                    parent: "chart",
                    subType: ["map", "mapbubble"]
                }]
            }]
        }
    }
},
highed.meta.colors = ["#F44336", "#FFEBEE", "#FFCDD2", "#EF9A9A", "#E57373", "#EF5350", "#F44336", "#E53935", "#D32F2F", "#C62828", "#B71C1C", "#FF8A80", "#FF5252", "#FF1744", "#D50000", "#E91E63", "#FCE4EC", "#F8BBD0", "#F48FB1", "#F06292", "#EC407A", "#E91E63", "#D81B60", "#C2185B", "#AD1457", "#880E4F", "#FF80AB", "#FF4081", "#F50057", "#C51162", "#9C27B0", "#F3E5F5", "#E1BEE7", "#CE93D8", "#BA68C8", "#AB47BC", "#9C27B0", "#8E24AA", "#7B1FA2", "#6A1B9A", "#4A148C", "#EA80FC", "#E040FB", "#D500F9", "#AA00FF", "#673AB7", "#EDE7F6", "#D1C4E9", "#B39DDB", "#9575CD", "#7E57C2", "#673AB7", "#5E35B1", "#512DA8", "#4527A0", "#311B92", "#B388FF", "#7C4DFF", "#651FFF", "#6200EA", "#3F51B5", "#E8EAF6", "#C5CAE9", "#9FA8DA", "#7986CB", "#5C6BC0", "#3F51B5", "#3949AB", "#303F9F", "#283593", "#1A237E", "#8C9EFF", "#536DFE", "#3D5AFE", "#304FFE", "#2196F3", "#E3F2FD", "#BBDEFB", "#90CAF9", "#64B5F6", "#42A5F5", "#2196F3", "#1E88E5", "#1976D2", "#1565C0", "#0D47A1", "#82B1FF", "#448AFF", "#2979FF", "#2962FF", "#03A9F4", "#E1F5FE", "#B3E5FC", "#81D4FA", "#4FC3F7", "#29B6F6", "#03A9F4", "#039BE5", "#0288D1", "#0277BD", "#01579B", "#80D8FF", "#40C4FF", "#00B0FF", "#0091EA", "#00BCD4", "#E0F7FA", "#B2EBF2", "#80DEEA", "#4DD0E1", "#26C6DA", "#00BCD4", "#00ACC1", "#0097A7", "#00838F", "#006064", "#84FFFF", "#18FFFF", "#00E5FF", "#00B8D4", "#009688", "#E0F2F1", "#B2DFDB", "#80CBC4", "#4DB6AC", "#26A69A", "#009688", "#00897B", "#00796B", "#00695C", "#004D40", "#A7FFEB", "#64FFDA", "#1DE9B6", "#00BFA5", "#4CAF50", "#E8F5E9", "#C8E6C9", "#A5D6A7", "#81C784", "#66BB6A", "#4CAF50", "#43A047", "#388E3C", "#2E7D32", "#1B5E20", "#B9F6CA", "#69F0AE", "#00E676", "#00C853", "#8BC34A", "#F1F8E9", "#DCEDC8", "#C5E1A5", "#AED581", "#9CCC65", "#8BC34A", "#7CB342", "#689F38", "#558B2F", "#33691E", "#CCFF90", "#B2FF59", "#76FF03", "#64DD17", "#CDDC39", "#F9FBE7", "#F0F4C3", "#E6EE9C", "#DCE775", "#D4E157", "#CDDC39", "#C0CA33", "#AFB42B", "#9E9D24", "#827717", "#F4FF81", "#EEFF41", "#C6FF00", "#AEEA00", "#FFEB3B", "#FFFDE7", "#FFF9C4", "#FFF59D", "#FFF176", "#FFEE58", "#FFEB3B", "#FDD835", "#FBC02D", "#F9A825", "#F57F17", "#FFFF8D", "#FFFF00", "#FFEA00", "#FFD600", "#FFC107", "#FFF8E1", "#FFECB3", "#FFE082", "#FFD54F", "#FFCA28", "#FFC107", "#FFB300", "#FFA000", "#FF8F00", "#FF6F00", "#FFE57F", "#FFD740", "#FFC400", "#FFAB00", "#FF9800", "#FFF3E0", "#FFE0B2", "#FFCC80", "#FFB74D", "#FFA726", "#FF9800", "#FB8C00", "#F57C00", "#EF6C00", "#E65100", "#FFD180", "#FFAB40", "#FF9100", "#FF6D00", "#FF5722", "#FBE9E7", "#FFCCBC", "#FFAB91", "#FF8A65", "#FF7043", "#FF5722", "#F4511E", "#E64A19", "#D84315", "#BF360C", "#FF9E80", "#FF6E40", "#FF3D00", "#DD2C00", "#795548", "#EFEBE9", "#D7CCC8", "#BCAAA4", "#A1887F", "#8D6E63", "#795548", "#6D4C41", "#5D4037", "#4E342E", "#3E2723", "#3E2723", "#3E2723", "#3E2723", "#3E2723", "#9E9E9E", "#FAFAFA", "#F5F5F5", "#EEEEEE", "#E0E0E0", "#BDBDBD", "#9E9E9E", "#757575", "#616161", "#424242", "#212121", "#212121", "#212121", "#212121", "#607D8B", "#ECEFF1", "#CFD8DC", "#B0BEC5", "#90A4AE", "#78909C", "#607D8B", "#546E7A", "#455A64", "#37474F", "#37474F", "#37474F", "#37474F", "#263238"],
highed.meta.fonts = ['"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif', "Courier", "Arial", "Verdana", "Georgia", "Palatino Linotype", "Times New Roman", "Comic Sans MS", "Impact", "Lucida Sans Unicode", "Tahoma", "Lucida Console", "Courier New", "Monaco", "Monospace"],
highed.meta.sampleData = {
    Line: ["Jaar;Tweelingen;Drie(plus-)lingen", "1950;2878;30", "1951;2872;27", "1952;2900;41", "1953;2894;30", "1954;2943;20", "1955;2958;29", "1956;2969;44", "1957;2934;25", "1958;2990;30", "1959;3003;28", "1960;2952;26", "1961;2995;21", "1962;3065;30", "1963;3015;26", "1964;2901;32", "1965;2784;20", "1966;2626;23", "1967;2595;19", "1968;2494;22", "1969;2593;22", "1970;2365;18", "1971;2303;24", "1972;2218;19", "1973;2006;24", "1974;1802;26", "1975;1715;28", "1976;1827;29", "1977;1796;29", "1978;1744;29", "1979;1832;21", "1980;1927;25", "1981;1932;33", "1982;1854;34", "1983;1830;22", "1984;1991;34", "1985;2058;32", "1986;2194;31", "1987;2250;55", "1988;2346;48", "1989;2480;78", "1990;2690;118", "1991;2794;124", "1992;2789;115", "1993;2825;93", "1994;2818;114", "1995;3070;66", "1996;3197;98", "1997;3245;83", "1998;3556;74", "1999;3634;75", "2000;3639;79", "2001;3695;56", "2002;3707;62", "2003;3616;70", "2004;3523;64", "2005;3448;48", "2006;3210;34", "2007;3023;39", "2008;3189;38", "2009;3153;44", "2010;2974;44", "2011;2825;45", "2012;2893;49", "2013;2788;45", "2014;2668;42", "2015;2639;43", "2016;2534;33"],
    "Spline (grouped category)": ["Jaar;Maand;Index", "2013;augustus;113,4", "2013;september;113,4", "2013;oktober;112,2", "2013;november;112,1", "2013;december;112,5", "2014;januari;112,4", "2014;februari;112,5", "2014;maart;111,6", "2014;april;112,1", "2014;mei;112,2", "2014;juni;112,6", "2014;juli;112,4", "2014;augustus;111,9", "2014;september;111,5", "2014;oktober;109,9", "2014;november;108,0", "2014;december;103,5", "2015;januari;100,4", "2015;februari;102,5", "2015;maart;104,1", "2015;april;105,9", "2015;mei;106,8", "2015;juni;106,6", "2015;juli;105,7", "2015;augustus;102,8", "2015;september;101,3", "2015;oktober;100,2", "2015;november;100,5", "2015;december;98,3", "2016;januari;96,2", "2016;februari;95,3", "2016;maart;96,5", "2016;april;97,3", "2016;mei;98,8", "2016;juni;100,1", "2016;juli;99,9", "2016;augustus;99,4", "2016;september;100,1", "2016;oktober;101,6", "2016;november;101,3", "2016;december;103,7", "2017;januari;105,3", "2017;februari;106,3", "2017;maart;106,0", "2017;april;105,9", "2017;mei;104,5", "2017;juni;103,2", "2017;juli;102,8"],
    "Line-column combination": ["Jaar;Migratiesaldo;Natuurlijke aanwas;Bevolkingsgroei", "1970;45;130;160", "1975;75;70;130", "1980;50;60;110", "1985;-1;50;55", "1990;50;75;125", "1995;20;55;60", "2000;50;60;130", "2005;-30;55;40", "2010;40;55;70", "2015;55;35;65"],
    "Area stacked": ["Jaar;Kippen;Koeien;Schapen;Konijnen;Geiten", "2012;8000;6500;6900;5000;9000", "2013;9000;5000;3500;5700;6000", "2014;1000;2000;9000;3900;7000", "2015;6900;8000;6000;4200;5500", "2016;9000;5000;3500;5700;4500", "2017;9000;5000;3500;5700;9000", "2018;6300;6400;5950;8000;8500"],
    "Area stacked percentage": ["Jaar;Kippen;Koeien;Schapen;Konijnen;Geiten", "2013;35;115;80;55;133", "2014;10;140;120;39;190", "2015;69;80;90;42;177", "2016;90;150;85;57;186", "2017;88;110;95;90;150", "2018;60;99;125;87;166"],
    Column: ["Land;2012;2013;2014;2015;2016;2017", "Nederland;-0,5;0,2;0,9;3,9;1,8;5,6", "BelgiÃ«;6,9;0,8;0,6;4,2;2,2;3,8", "Duitsland;9,5;5,0;3,5;5,7;4,4;-5,0", "Frankrijk;5;3,5;5,7;-4,4;2,8;3,7", "Luxemburg;5,7;4,4;6,3;-3,5;4,0;4,9"],
    "Column percentage": ["Gebruik social media;12 tot 18;18 tot 25;25 tot 35;35 tot 45;45 tot 55;55 tot 65;65 tot 75;75 jaar of ouder", "2012;93,5;97,3;86,8;72,5;58,7;43,3;23,6;5,2", "2013;91,7;97,0;91,0;79,0;66,0;50,5;28,7;9,4", "2014;94,4;98,5;94,0;88,3;79,3;64,3;39,8;13,0", "2015;93,9;95,6;95,0;90,3;84,0;70,0;48,8;18,1", "2016;95,5;95,4;94,0;93,1;88,8;78,9;54,7;22,0", "2017;96,9;99,1;98,0;95,8;91,0;83,6;63,9;34,7"],
    "Column stacked (grouped category)": ["Jaar;Maand;SyriÃ«;Nederland;Polen", "2015;januari;1,766;2,265;1,864", "2015;februari;1,501;1,797;1,866", "2015;maart;1,484;2,060;2,027", "2015;april;1,541;1,805;1,651", "2015;mei;1,325;1,628;1,559", "2015;juni;1,387;2,600;2,010", "2015;juli;1,753;3,622;2,141", "2015;augustus;1,584;3,542;1,946", "2015;september;1,825;2,798;2,349", "2015;oktober;2,161;2,125;2,141", "2015;november;2,196;1,892;1,893", "2015;december;2,390;2,210;1,458", "2016;januari;2,469;2,238;1,721", "2016;februari;2,806;2,014;2,137", "2016;maart;2,811;2,168;1,854", "2016;april;2,556;1,914;1,809"],
    "Column stacked percentage": ["Jaar;Kippen;Koeien;Schapen;Konijnen;Geiten", "2013;35;115;80;55;133", "2014;10;140;120;39;190", "2015;69;80;90;42;177", "2016;90;150;85;57;186", "2017;88;110;95;90;150", "2018;60;99;125;87;166"],
    "Column-line combination": ["Land;2012;2013;2014;2015;2016;2017", "Nederland;0,5;0,2;0,9;3,9;1,8;5,6", "BelgiÃ«;6,9;0,8;0,6;4,2;2,2;3,8", "Duitsland;9,5;5,0;3,5;5,7;4,4;5,0", "Frankrijk;5;3,5;5,7;4,4;2,8;3,7", "Luxemburg;5,7;4,4;6,3;3,5;4,0;4,9"],
    Bar: ["Land;2012;2013;2014;2015;2016;2017", "Nederland;0,5;0,2;0,9;3,9;1,8;5,6", "BelgiÃ«;6,9;0,8;0,6;4,2;2,2;3,8", "Duitsland;9,5;5,0;3,5;5,7;4,4;5,0", "Frankrijk;5;3,5;5,7;4,4;2,8;3,7", "Luxemburg;5,7;4,4;6,3;3,5;4,0;4,9"],
    "Bar percentage": ["Category;15 tot 25 jaar;25-plussers", "Contact met vrienden;95,9;73,7", "Contact met familie;79,2;84,1", "Actief in verenigingsleven;55,6;42,0", "Vrijwilligerswerk;51,1;48,7", "Contact met buren;50,0;64,1", "Informele hulp;29,9;34,3"],
    "Bar stacked": ["Gebruik;12-24 jaar;25-44 jaar;45-64 jaar;65-74 jaar;75 jaar of ouder", "Berichten plaatsen op chat site of discussieplatforum;38;30;20;10;3", "Weblogs lezen of schrijven;30;28;19;11;5", "Tekstberichten uitwisselen;93;89;64;38;6", "Professioneel netwerk;19;41;24;9;1", "Ander sociaal netwerk;80;77;47;29;10"],
    "Bar stacked percentage (grouped category)": ["Jaar;Kwartaal;Koeien;Schapen;Konijnen", "2014;1e kwartaal;2000;9000;3900", "2014;2e kwartaal;2100;9000;3700", "2014;3e kwartaal;2500;8000;3400", "2014;4e kwartaal;2300;7000;3650", "2015;1e kwartaal;2500;6000;3900", "2015;2e kwartaal;2600;5500;4000", "2015;3e kwartaal;2750;4400;4200", "2015;4e kwartaal;3000;4450;4600"],
    "Bar negative stack": ["Leeftijd;Mannen;Vrouwen", "20;-17,0;15,0", "21;-19,6;17,2", "22;-22,3;19,2", "23;-24,8;21,2", "24;-27,3;23,1", "25;-29,6;24,7", "26;-31,7;26,1", "27;-33,4;27,0", "28;-34,8;27,6", "29;-36,1;27,8", "30;-37,4;27,8", "31;-38,5;27,8", "32;-39,4;27,7", "33;-40,5;27,9", "34;-41,5;27,8", "35;-42,0;27,7", "36;-42,9;27,6", "37;-43,6;27,5", "38;-44,2;27,1", "39;-44,9;27,2"],
    Donut: ["Sector;Aantal", "Landbouw;14", "Raffinaderijen;6", "Industrie;17", "Energiebedrijven;27", "Verkeer en vervoer;16", "Overig;20"],
    Polar: ["Jaar;Kippen;Koeien;Schapen;Konijnen;Geiten", "2013;35;115;80;55;133", "2014;10;140;120;39;190", "2015;69;80;90;42;177", "2016;90;150;85;57;186", "2017;88;110;95;90;150", "2018;60;99;125;87;166"],
    "Choropleet Map: Agricultural areas": ["Landbouw;Statcode;Landbouw gewassen, dieren en grondgebruik naar hoofdbedrijfstype, regio", ";;2016", "Achterhoek (LB);LB2508;6,06", "Alblasserwaard en Vijfherenlanden (LB);LB2807;1,27", "Amstelland en Aalsmeer (LB);LB2703;0,34", "Biesbosch (LB);LB3003;0,19", "Bollenstreek (LB);LB2808;0,71", "Bommelerwaard (LB);LB2506;0,70", "Boskoop en Rijneveld (LB);LB2805;0,76", "Centraal Tuinbouwgebied in Utrecht (LB);LB2603;0,08", "Centraal Weidegebied in Groningen (LB);LB2002;0,95", "De Kempen (LB);LB3007;2,51", "De Marne (LB);LB2001;0,27", "De Wouden (LB);LB2103;3,17", "Drentse VeenkoloniÃ«n en Hondsrug (LB);LB2205;1,56", "Eemland (LB);LB2604;0,40", "Eilanden (LB);LB2104;0,13", "Goeree-Overflakkee (LB);LB2803;0,57", "Groninger zuidelijk Westerkwartier (LB);LB2005;0,71", "Haarlemmermeer (LB);LB2702;0,41", "IJsselstreek (LB);LB2502;0,75", "Kennemerland (LB);LB2708;0,29", "Krimpenerwaard en Oostel. Rijnland (LB);LB2806;0,82", "Kromme Rijn-streek en Heuvelrug (LB);LB2601;0,82", "Land van Breda (LB);LB3006;1,03", "Maaskant en Land van Cuijk (LB);LB3009;2,50", "Midden-Noord-Brabant (LB);LB3008;2,63", "Noordelijk Friesland (LB);LB2101;1,78", "Noordelijk Zeeland (LB);LB2901;1,12", "Noord-Limburg (LB);LB3101;5,25", "Noordoostelijke Polder (LB);LB2401;1,53", "Noordoost-Overijssel (LB);LB2302;1,70", "Noordwesthoek (LB);LB3001;0,73", "Oostelijk Hogeland (LB);LB2006;0,63", "Oostelijke Betuwe en Nijmegen (LB);LB2504;0,33", "Oostelijke Bouwstreek in Groningen (LB);LB2003;1,26", "Oostelijke Langstraat (LB);LB3004;0,95", "Oostelijke Veluwe (LB);LB2501;1,35", "Rotterdam en omgeving (LB);LB2802;0,32", "Salland (LB);LB2304;2,14", "Smilde en Centr. Zandgebied in Dr. (LB);LB2202;1,11", "t Gein en Gooiland (LB);LB2707;0,31", "Texel en Land van Zijpe (LB);LB2704;1,11", "Twente (LB);LB2303;5,74", "Veluwezoom en Betuwe (LB);LB2505;2,61", "Voorne-Putten en Hoeksche Waard (LB);LB2801;1,18", "Walcheren en Zuid-Beveland (LB);LB2902;1,84", "Waterland en NH.se Droogmakerijen (LB);LB2706;1,31", "Weidegebied in Overijssel (LB);LB2301;3,02", "Weidegebied van het Noorderveld (LB);LB2201;0,31", "Weidestreek in Friesland (LB);LB2102;2,85", "Westelijk Peelgebied (LB);LB3010;4,86", "Westelijk Rijnland (LB);LB2804;1,08", "Westelijk Weidegebied in Utrecht (LB);LB2602;2,16", "Westelijke Langstraat (LB);LB3002;0,81", "Westelijke Veluwe (LB);LB2507;3,44", "Westelijke Zandgronden (LB);LB3005;1,58", "Westerwolde en Gron. VeenkoloniÃ«n (LB);LB2004;0,90", "West-Friesland en omgeving (LB);LB2705;1,81", "Westland en ZH.se Droogmakerijen (LB);LB2809;2,42", "Wieringen en Wieringermeer (LB);LB2701;1,05", "Zandgebied in Utrecht (LB);LB2605;0,57", "Zeeuwsch-Vlaanderen (LB);LB2903;2,21", "Zuidelijk Gelderland (LB);LB2503;1,52", "Zuidelijk Zandgebied in Drenthe (LB);LB2204;0,97", "Zuidelijke IJsselmeerpolders (LB);LB2402;1,51", "Zuid-Limburg (LB);LB3102;1,74", "Zuidw. Weidegebied in Drenthe (LB);LB2203;1,23"],
    "Choropleet Map: COROP": ["COROP;Statcode;Bevolking/Demografische druk/Groene druk", ";;2015", "Oost-Groningen (CR);CR01;37,0", "Delfzijl en omgeving (CR);CR02;36,9", "Overig Groningen (CR);CR03;34,1", "Noord-Friesland (CR);CR04;40,0", "Zuidwest-Friesland (CR);CR05;43,0", "Zuidoost-Friesland (CR);CR06;41,1", "Noord-Drenthe (CR);CR07;40,9", "Zuidoost-Drenthe (CR);CR08;38,1", "Zuidwest-Drenthe (CR);CR09;41,2", "Noord-Overijssel (CR);CR10;43,7", "Zuidwest-Overijssel (CR);CR11;39,7", "Twente (CR);CR12;40,7", "Veluwe (CR);CR13;42,3", "Achterhoek (CR);CR14;39,4", "Arnhem/Nijmegen (CR);CR15;36,4", "Zuidwest-Gelderland (CR);CR16;42,7", "Utrecht (CR);CR17;39,9", "Kop van Noord-Holland (CR);CR18;39,7", "Alkmaar en omgeving (CR);CR19;39,1", "IJmond (CR);CR20;38,6", "Agglomeratie Haarlem (CR);CR21;37,6", "Zaanstreek (CR);CR22;38,7", "Groot-Amsterdam (CR);CR23;33,1", "Het Gooi en Vechtstreek (CR);CR24;40,7", "Agglomeratie Leiden en Bollenstreek (CR);CR25;37,7", "Agglomeratie s-Gravenhage (CR);CR26;37,6", "Delft en Westland (CR);CR27;34,7", "Oost-Zuid-Holland (CR);CR28;41,3", "Groot-Rijnmond (CR);CR29;37,3", "Zuidoost-Zuid-Holland (CR);CR30;41,8", "Zeeuwsch-Vlaanderen (CR);CR31;34,9", "Overig Zeeland (CR);CR32;40,4", "West-Noord-Brabant (CR);CR33;36,6", "Midden-Noord-Brabant (CR);CR34;37,2", "Noordoost-Noord-Brabant (CR);CR35;38,6", "Zuidoost-Noord-Brabant (CR);CR36;36,8", "Noord-Limburg (CR);CR37;36,5", "Midden-Limburg (CR);CR38;33,7", "Zuid-Limburg (CR);CR39;30,7", "Flevoland (CR);CR40;43,9"],
    "Choropleet Map: COROP plus": ["Corop Plus;Statcode;Investeringen in vaste activa naar type en regio", ";;2017", "Achterhoek (CP);CP1400;50,90", "Aggl.s-Gravenhage excl. Zoetermeer (CP);CP2601;3,45", "Agglomeratie Haarlem (CP);CP2100;19,00", "Agglomeratie Leiden en Bollenstreek (CP);CP2500;7,67", "Alkmaar en omgeving (CP);CP1900;7,77", "Almere (CP);CP4001;12,74", "Amsterdam (CP);CP2311;87,16", "Arnhem/Nijmegen (CP);CP1500;81,2", "Delft en Westland (CP);CP2700;40,51", "Delfzijl en omgeving (CP);CP0200;20,92", "Drechtsteden (CP);CP3001;16,29", "Edam-Volendam en omgeving (CP);CP2322;7,84", "Flevoland-Midden (CP);CP4002;11,46", "Haarlemmermeer en omgeving (CP);CP2323;22,73", "Het Gooi en Vechtstreek (CP);CP2400;6,78", "IJmond (CP);CP2000;4,56", "Kop van Noord-Holland (CP);CP1800;2,34", "Midden-Limburg (CP);CP3800;1,23", "Midden-Noord-Brabant (CP);CP3400;98,23", "Noord-Drenthe (CP);CP0700;34,53", "Noord-Friesland (CP);CP0400;12,34", "Noord-Limburg (CP);CP3700;6,48", "Noordoostpolder en Urk (CP);CP4003;4,50", "Noord-Overijssel (CP);CP1000;2,34", "Oost-Groningen (CP);CP0100;7,89", "Oost-Zuid-Holland (CP);CP2800;4,56", "Overig Agglomeratie Amsterdam (CP);CP2321;12,71", "Overig Groningen (CP);CP0300;8,97", "Overig Groot-Rijnmond (CP);CP2920;11,58", "Overig Noordoost-Noord-Brabant (CP);CP3520;25,31", "Overig Zeeland (CP);CP3200;14,33", "Overig Zuidoost-Zuid-Holland (CP);CP3002;11,73", "Rijnmond (CP);CP2910;30,71", "Stadsgewest Amersfoort (CP);CP1702;17,88", "Stadsgewest s-Hertogenbosch (CP);CP3510;22,74", "Stadsgewest Utrecht (CP);CP1703;66,98", "Twente (CP);CP1200;0,12", "Utrecht-West (CP);CP1701;8,67", "Veluwe (CP);CP1300;5,60", "West-Noord-Brabant (CP);CP3300;0,45", "Zaanstreek (CP);CP2200;7,00", "Zeeuwsch-Vlaanderen (CP);CP3100;0,85", "Zoetermeer (CP);CP2602;5,06", "Zuid-Limburg (CP);CP3900;1,00", "Zuidoost-Drenthe (CP);CP0800;0,34", "Zuidoost-Friesland (CP);CP0600;1,23", "Zuidoost-Noord-Brabant (CP);CP3600;3,21", "Zuidoost-Utrecht (CP);CP1704;9,39", "Zuidwest-Drenthe (CP);CP0900;0,43", "Zuidwest-Friesland (CP);CP0500;0,76", "Zuidwest-Gelderland (CP);CP1600;0,01", "Zuidwest-Overijssel (CP);CP1100;1,23"],
    "Choropleet Map: District": ["Wijk;Statcode;Personen met AOW-uitkering", ";GM0518;2015", "Wijk 01 Oostduinen;WK051801;0,00", "Wijk 02 Belgisch Park;WK051802;2,39", "Wijk 03 Westbroekpark en Duttendel;WK051803;0,95", "Wijk 04 Benoordenhout;WK051804;4,96", "Wijk 05 Archipelbuurt;WK051805;1,64", "Wijk 06 Van Stolkpark en Scheveningse Bo;WK051806;0,33", "Wijk 07 Scheveningen;WK051807;4,46", "Wijk 08 Duindorp;WK051808;1,11", "Wijk 09 Geuzen- en Statenkwartier;WK051809;3,41", "Wijk 10 Zorgvliet;WK051810;0,19", "Wijk 11 Duinoord;WK051811;1,35", "Wijk 12 Bomen- en Bloemenbuurt;WK051812;3,87", "Wijk 13 Vogelwijk;WK051813;1,35", "Wijk 14 Bohemen en Meer en Bos;WK051814;2,26", "Wijk 15 Kijkduin en Ockenburgh;WK051815;0,95", "Wijk 16 Kraayenstein en de Uithof;WK051816;1,32", "Wijk 17 Loosduinen;WK051817;5,70", "Wijk 18 Waldeck;WK051818;7,27", "Wijk 19 Vruchtenbuurt;WK051819;1,97", "Wijk 20 Valkenboskwartier;WK051820;2,30", "Wijk 21 Regentessekwartier;WK051821;1,64", "Wijk 22 Zeeheldenkwartier;WK051822;1,43", "Wijk 23 Willemspark;WK051823;0,34", "Wijk 24 Haagse Bos;WK051824;0,25", "Wijk 25 Mariahoeve en Marlot;WK051825;4,82", "Wijk 26 Bezuidenhout;WK051826;2,62", "Wijk 27 Stationsbuurt;WK051827;1,18", "Wijk 28 Centrum;WK051828;2,88", "Wijk 29 Schildersbuurt;WK051829;3,78", "Wijk 30 Transvaalkwartier;WK051830;1,83", "Wijk 31 Rustenburg en Oostbroek;WK051831;1,92", "Wijk 32 Leyenburg;WK051832;3,65", "Wijk 33 Bouwlust en Vrederust;WK051833;6,86", "Wijk 34 Morgenstond;WK051834;3,45", "Wijk 35 Zuiderpark;WK051835;0,14", "Wijk 36 Moerwijk;WK051836;3,10", "Wijk 37 Groente- en Fruitmarkt;WK051837;0,44", "Wijk 38 Laakkwartier en Spoorwijk;WK051838;4,60", "Wijk 39 Binckhorst;WK051839;0,03", "Wijk 40 Wateringse Veld;WK051840;2,89", "Wijk 41 Hoornwijk;WK051841;0,05", "Wijk 42 Ypenburg;WK051842;2,21", "Wijk 43 Forepark;WK051843;0,05", "Wijk 44 Leidschenveen;WK051844;2,09"],
    "Choropleet Map: Healthcare": ["GGD;Statcode;Totaal", ";;2017", "GGD Drenthe (GG);GG0706;4,10033", "GGD IJsselland (GG);GG1009;3,83660", "GGD Regio Twente (GG);GG1106;4,03447", "GGD Noord- en Oost-Gelderland (GG);GG1413;4,03658", "Veiligheids- en Gezondheidsregio Gelderland-Midden (GG);GG1911;3,95749", "GGD Gelderland-Zuid;GG2014;3,93012", "GGD Flevoland (GG);GG2209;3,90095", "GGD Regio Utrecht;GG2514;3,85675", "GGD Hollands-Noorden (GG);GG2707;3,82668", "GGD Kennemerland (GG);GG3109;3,93433", "GGD Amsterdam (GG);GG3406;3,69045", "GGD Gooi en Vechtstreek (GG);GG3606;3,99298", "GGD Hollands-Midden (GG);GG4506;3,96741", "GGD Rotterdam-Rijnmond (GG);GG4607;4,12289", "Dienst Gezondheid & Jeugd ZHZ (GG);GG4816;4,13943", "GGD Zeeland (GG);GG5006;4,02395", "GGD West-Brabant (GG);GG5206;4,16258", "GGD Hart voor Brabant (GG);GG5406;4,06695", "GGD Brabant-Zuidoost (GG);GG5608;4,02365", "GGD Limburg-Noord (GG);GG6011;4,13852", "GGD Zuid-Limburg (GG);GG6106;4,21611", "GGD Haaglanden (GG);GG7014;4,09612", "GGD FryslÃ¢n (GG);GG7206;3,94817", "GGD Zaanstreek/Waterland (GG);GG7306;4,07748"],
    "Choropleet Map: Labor region": ["Regios;Statcode;Bruto arbeidsparticipatie", ";;2016", "Groningen;AM01;68,0", "Friesland;AM02;69,3", "Drenthe;AM03;67,1", "Twente;AM05;69,4", "Stedendriehoek en Noordwest Veluwe;AM06;70,3", "Midden-Gelderland;AM07;69,6", "Rijk van Nijmegen;AM08;69,9", "Achterhoek;AM09;69,1", "Rivierenland;AM10;70,7", "Flevoland;AM11;72,0", "Gooi en Vechtstreek;AM12;70,0", "Midden-Utrecht;AM13;72,7", "Amersfoort;AM14;72,5", "Noord-Holland Noord;AM15;70,3", "Zaanstreek-Waterland;AM17;70,9", "Groot Amsterdam;AM18;72,5", "Holland Rijnland;AM19;72,1", "Midden-Holland;AM20;70,7", "Haaglanden;AM21;67,8", "Rijnmond;AM22;67,4", "Drechtsteden;AM23;69,7", "Zeeland;AM24;69,1", "West-Brabant;AM25;69,9", "Midden-Brabant;AM26;71,3", "Noordoost-Brabant;AM27;71,5", "Zuidoost-Brabant;AM28;70,7", "Noord-Limburg;AM29;70,9", "Zuid-Limburg;AM30;64,7", "Food Valley;AM31;70,6", "Helmond-De Peel;AM32;70,6", "Midden-Limburg;AM33;67,9", "Zuid-Holland Centraal;AM34;71,1", "Gorinchem;AM35;71,0"],
    "Choropleet Map: Municipality": ["Gemeente;Statcode;Bevolking/Demografische druk/Groene druk", ";;2015", "Aa en Hunze;GM1680;37,8", "Aalburg;GM0738;47,4", "Aalsmeer;GM0358;44,1", "Aalten;GM0197;40,9", "Achtkarspelen;GM0059;43,6", "Alblasserdam;GM0482;48,0", "Albrandswaard;GM0613;42,1", "Alkmaar;GM0361;35,6", "Almelo;GM0141;40,3", "Almere;GM0034;41,9", "Alphen aan den Rijn;GM0484;40,5", "Alphen-Chaam;GM1723;37,4", "Ameland;GM0060;39,7", "Amersfoort;GM0307;43", "Amstelveen;GM0362;38,6", "Amsterdam;GM0363;29,6", "Apeldoorn;GM0200;38,4", "Appingedam;GM0003;36,8", "Arnhem;GM0202;34,4", "Assen;GM0106;41,6", "Asten;GM0743;39,1", "Baarle-Nassau;GM0744;32,3", "Baarn;GM0308;38,3", "Barendrecht;GM0489;46,8", "Barneveld;GM0203;53,4", "Bedum;GM0005;41,2", "Beek (L,);GM0888;33,1", "Beemster;GM0370;39,9", "Beesel;GM0889;37,0", "Bellingwedde;GM0007;34,3", "Bergeijk;GM1724;39,6", "Bergen (L,);GM0893;35,4", "Bergen (NH,);GM0373;38,1", "Bergen op Zoom;GM0748;35,7", "Berkelland;GM1859;40,2", "Bernheze;GM1721;43,6", "Best;GM0753;40,6", "Beuningen;GM0209;37,6", "Beverwijk;GM0375;37,3", "het Bildt;GM0063;42,9", "De Bilt;GM0310;43,3", "Binnenmaas;GM0585;37,9", "Bladel;GM1728;39,1", "Blaricum;GM0376;42", "Bloemendaal;GM0377;49,6", "Bodegraven-Reeuwijk;GM1901;44,8", "Boekel;GM0755;43,5", "Ten Boer;GM0009;46,4", "Borger-Odoorn;GM1681;37,7", "Borne;GM0147;42,3", "Borsele;GM0654;43,6", "Boxmeer;GM0756;38,3", "Boxtel;GM0757;39,9", "Breda;GM0758;36,7", "Brielle;GM0501;35,4", "Bronckhorst;GM1876;39,3", "Brummen;GM0213;38,2", "Brunssum;GM0899;31,9", "Bunnik;GM0312;43,9", "Bunschoten;GM0313;46,1", "Buren;GM0214;39,9", "Bussum;GM0381;45,3", "Capelle aan den IJssel;GM0502;37,9", "Castricum;GM0383;40,1", "Coevorden;GM0109;39,4", "Cranendonck;GM1706;36,4", "Cromstrijen;GM0611;37,6", "Cuijk;GM1684;39,5", "Culemborg;GM0216;42,2", "Dalfsen;GM0148;44,2", "Dantumadiel;GM1891;42,1", "Delft;GM0503;29,0", "Delfzijl;GM0010;36,1", "Deurne;GM0762;38,1", "Deventer;GM0150;39,3", "Diemen;GM0384;34,0", "Dinkelland;GM1774;44,0", "Doesburg;GM0221;38,2", "Doetinchem;GM0222;38,7", "Dongen;GM0766;38,5", "Dongeradeel;GM0058;43,3", "Dordrecht;GM0505;37,7", "Drechterland;GM0498;41,9", "Drimmelen;GM1719;36,6", "Dronten;GM0303;43,5", "Druten;GM0225;40,8", "Duiven;GM0226;41,6", "Echt-Susteren;GM1711;31,0", "Edam-Volendam;GM0385;42,4", "Ede;GM0228;44,4", "Eemnes;GM0317;43,7", "Eemsmond;GM1651;39,7", "Eersel;GM0770;37,6", "Eijsden-Margraten;GM1903;35,9", "Eindhoven;GM0772;32,4", "Elburg;GM0230;46,8", "Emmen;GM0114;37,7", "Enkhuizen;GM0388;36,8", "Enschede;GM0153;36,2", "Epe;GM0232;39,1", "Ermelo;GM0233;40,4", "Etten-Leur;GM0777;39,1", "Ferwerderadiel;GM1722;44,5", "Franekeradeel;GM0070;41,0", "De Friese Meren;GM1921;42,9", "Geertruidenberg;GM0779;37,7", "Geldermalsen;GM0236;44,6", "Geldrop-Mierlo;GM1771;38,5", "Gemert-Bakel;GM1652;38,1", "Gennep;GM0907;37,4", "Giessenlanden;GM0689;43,7", "Gilze en Rijen;GM0784;39,8", "Goeree-Overflakkee;GM1924;40,9", "Goes;GM0664;36,7", "Goirle;GM0785;39,8", "Gorinchem;GM0512;39,1", "Gouda;GM0513;41,0", "Grave;GM0786;37,7", "s-Gravenhage (gemeente);GM0518;36,5", "Groesbeek;GM0241;36,1", "Groningen (gemeente);GM0014;27,9", "Grootegast;GM0015;45,8", "Gulpen-Wittem;GM1729;29,3", "Haaksbergen;GM0158;41,0", "Haaren;GM0788;38,8", "Haarlem;GM0392;35,6", "Haarlemmerliede en Spaarnwoude;GM0393;37,8", "Haarlemmermeer;GM0394;42,1", "Halderberge;GM1655;35,7", "Hardenberg;GM0160;44,6", "Harderwijk;GM0243;42,8", "Hardinxveld-Giessendam;GM0523;47,9", "Haren;GM0017;44,3", "Harlingen;GM0072;40,7", "Hattem;GM0244;44,2", "Heemskerk;GM0396;37,3", "Heemstede;GM0397;46,2", "Heerde;GM0246;40,7", "Heerenveen;GM0074;41,2", "Heerhugowaard;GM0398;43,8", "Heerlen;GM0917;29,5", "Heeze-Leende;GM1658;37,8", "Heiloo;GM0399;42,3", "Den Helder;GM0400;34,8", "Hellendoorn;GM0163;41,3", "Hellevoetsluis;GM0530;36,3", "Helmond;GM0794;41,0", "Hendrik-Ido-Ambacht;GM0531;46,6", "Hengelo (O,);GM0164;39,2", "s-Hertogenbosch;GM0796;35,7", "Heumen;GM0252;42,7", "Heusden;GM0797;39,0", "Hillegom;GM0534;37,5", "Hilvarenbeek;GM0798;39,7", "Hilversum;GM0402;38,1", "Hof van Twente;GM1735;41,5", "Hollands Kroon;GM1911;40,6", "Hoogeveen;GM0118;42,2", "Hoogezand-Sappemeer;GM0018;38,1", "Hoorn;GM0405;39,8", "Horst aan de Maas;GM1507;38,7", "Houten;GM0321;45,2", "Huizen;GM0406;39,0", "Hulst;GM0677;34,0", "IJsselstein;GM0353;43,7", "Kaag en Braassem;GM1884;39,6", "Kampen;GM0166;47,1", "Kapelle;GM0678;45,3", "Katwijk;GM0537;44,4", "Kerkrade;GM0928;28,5", "Koggenland;GM1598;43,1", "Kollumerland en Nieuwkruisland;GM0079;42,1", "Korendijk;GM0588;42,3", "Krimpen aan den IJssel;GM0542;45,5", "Laarbeek;GM1659;39,3", "Landerd;GM1685;41,5", "Landgraaf;GM0882;30,6", "Landsmeer;GM0415;38,7", "Langedijk;GM0416;42,9", "Lansingerland;GM1621;49,7", "Laren (NH,);GM0417;43,4", "Leek;GM0022;42,4", "Leerdam;GM0545;42,2", "Leeuwarden;GM0080;35,5", "Leeuwarderadeel;GM0081;40,3", "Leiden;GM0546;30,1", "Leiderdorp;GM0547;41,1", "Leidschendam-Voorburg;GM1916;36,7", "Lelystad;GM0995;41,7", "Leudal;GM1640;35,7", "Leusden;GM0327;41,2", "Lingewaal;GM0733;41,1", "Lingewaard;GM1705;41,2", "Lisse;GM0553;39,1", "Littenseradiel;GM0140;44,9", "Lochem;GM0262;40,1", "Loon op Zand;GM0809;37,0", "Lopik;GM0331;46,3", "Loppersum;GM0024;39,2", "Losser;GM0168;39,3", "Maasdriel;GM0263;39,2", "Maasgouw;GM1641;31,4", "Maassluis;GM0556;37,3", "Maastricht;GM0935;28,3", "De Marne;GM1663;37,2", "Marum;GM0025;41,3", "Medemblik;GM0420;41,3", "Meerssen;GM0938;34,5", "Menameradiel;GM1908;42,7", "Menterwolde;GM1987;35,7", "Meppel;GM0119;41,4", "Middelburg (Z,);GM0687;40,5", "Midden-Delfland;GM1842;43,5", "Midden-Drenthe;GM1731;39,7", "Mill en Sint Hubert;GM0815;37,8", "Moerdijk;GM1709;38,6", "Molenwaard;GM1927;53,2", "Montferland;GM1955;37,1", "Montfoort;GM0335;47,3", "Mook en Middelaar;GM0944;38,3", "Muiden;GM0424;42,9", "Naarden;GM0425;53,7", "Neder-Betuwe;GM1740;51,6", "Nederweert;GM0946;35,8", "Neerijnen;GM0304;45,9", "Nieuwegein;GM0356;35,4", "Nieuwkoop;GM0569;39,1", "Nijkerk;GM0267;45,4", "Nijmegen;GM0268;31,5", "Noord-Beveland;GM1695;34,7", "Noordenveld;GM1699;40,3", "Noordoostpolder;GM0171;45,1", "Noordwijk;GM0575;34,9", "Noordwijkerhout;GM0576;39,3", "Nuenen, Gerwen en Nederwetten;GM0820;39,0", "Nunspeet;GM0302;46,6", "Nuth;GM0951;32,6", "Oegstgeest;GM0579;44,3", "Oirschot;GM0823;38,9", "Oisterwijk;GM0824;39,2", "Oldambt;GM1895;35,8", "Oldebroek;GM0269;43,2", "Oldenzaal;GM0173;41,6", "Olst-Wijhe;GM1773;40,6", "Ommen;GM0175;40,8", "Onderbanken;GM0881;32,6", "Oost Gelre;GM1586;41,4", "Oosterhout;GM0826;37,8", "Ooststellingwerf;GM0085;38,7", "Oostzaan;GM0431;39,9", "Opmeer;GM0432;42,7", "Opsterland;GM0086;42,9", "Oss;GM0828;38,2", "Oud-Beijerland;GM0584;42,9", "Oude IJsselstreek;GM1509;39,1", "Ouder-Amstel;GM0437;42,0", "Oudewater;GM0589;43,6", "Overbetuwe;GM1734;44,6", "Peel en Maas;GM1894;36,3", "Pekela;GM0765;36,9", "Pijnacker-Nootdorp;GM1926;49,7", "Purmerend;GM0439;36,5", "Putten;GM0273;43,5", "Raalte;GM0177;40,3", "Reimerswaal;GM0703;50,9", "Renkum;GM0274;39,2", "Renswoude;GM0339;52,4", "Reusel-De Mierden;GM1667;36,3", "Rheden;GM0275;37,2", "Rhenen;GM0340;45,8", "Ridderkerk;GM0597;35,5", "Rijnwaarden;GM0196;37,1", "Rijssen-Holten;GM1742;51,3", "Rijswijk (ZH,);GM0603;32,3", "Roerdalen;GM1669;32,4", "Roermond;GM0957;33,5", "De Ronde Venen;GM0736;40,8", "Roosendaal;GM1674;37,3", "Rotterdam;GM0599;35,0", "Rozendaal;GM0277;51,0", "Rucphen;GM0840;29,7", "Schagen;GM0441;41,0", "Scherpenzeel;GM0279;50,9", "Schiedam;GM0606;36,0", "Schiermonnikoog;GM0088;33,1", "Schijndel;GM0844;37,7", "Schinnen;GM0962;34,3", "Schouwen-Duiveland;GM1676;37,1", "Simpelveld;GM0965;32,5", "Sint Anthonis;GM1702;39,6", "Sint-Michielsgestel;GM0845;41,7", "Sint-Oedenrode;GM0846;40,0", "Sittard-Geleen;GM1883;31,8", "Sliedrecht;GM0610;42,3", "Slochteren;GM0040;41,3", "Sluis;GM1714;33,0", "Smallingerland;GM0090;42,2", "Soest;GM0342;42,2", "Someren;GM0847;36,2", "Son en Breugel;GM0848;45,0", "Stadskanaal;GM0037;38,6", "Staphorst;GM0180;58,4", "Stede Broec;GM0532;42,0", "Steenbergen;GM0851;34,6", "Steenwijkerland;GM1708;40,8", "Stein (L,);GM0971;32,3", "Stichtse Vecht;GM1904;40,0", "Strijen;GM0617;34,6", "SÃºdwest-FryslÃ¢n;GM1900;43,0", "Terneuzen;GM0715;36,2", "Terschelling;GM0093;35,7", "Texel;GM0448;36,9", "Teylingen;GM1525;43,2", "Tholen;GM0716;46,4", "Tiel;GM0281;40,4", "Tilburg;GM0855;34,9", "Tubbergen;GM0183;45,6", "Twenterand;GM1700;45,8", "Tynaarlo;GM1730;43,2", "Tytsjerksteradiel;GM0737;43,9", "Uden;GM0856;39,1", "Uitgeest;GM0450;43", "Uithoorn;GM0451;41,5", "Urk;GM0184;71,8", "Utrecht (gemeente);GM0344;33,7", "Utrechtse Heuvelrug;GM1581;42,6", "Vaals;GM0981;28,0", "Valkenburg aan de Geul;GM0994;30,2", "Valkenswaard;GM0858;34,5", "Veendam;GM0047;38,2", "Veenendaal;GM0345;44,9", "Veere;GM0717;41,2", "Veghel;GM0860;40,1", "Veldhoven;GM0861;37,1", "Velsen;GM0453;38,6", "Venlo;GM0983;34,7", "Venray;GM0984;38,4", "Vianen;GM0620;41,2", "Vlaardingen;GM0622;36,2", "Vlagtwedde;GM0048;37,3", "Vlieland;GM0096;27,0", "Vlissingen;GM0718;35,1", "Voerendaal;GM0986;33,8", "Voorschoten;GM0626;44,7", "Voorst;GM0285;38,8", "Vught;GM0865;40,3", "Waalre;GM0866;43,0", "Waalwijk;GM0867;36,6", "Waddinxveen;GM0627;40,8", "Wageningen;GM0289;30,9", "Wassenaar;GM0629;46,6", "Waterland;GM0852;39,2", "Weert;GM0988;35,4", "Weesp;GM0457;36,3", "Werkendam;GM0870;43,5", "West Maas en Waal;GM0668;37,1", "Westerveld;GM1701;37,7", "Westervoort;GM0293;34,9", "Westland;GM1783;39,5", "Weststellingwerf;GM0098;38,8", "Westvoorne;GM0614;35,5", "Wierden;GM0189;43,3", "Wijchen;GM0296;40,5", "Wijdemeren;GM1696;40,6", "Wijk bij Duurstede;GM0352;39,8", "Winsum;GM0053;45,1", "Winterswijk;GM0294;39,2", "Woensdrecht;GM0873;36,1", "Woerden;GM0632;44,0", "De Wolden;GM1690;41,1", "Wormerland;GM0880;39,3", "Woudenberg;GM0351;50,0", "Woudrichem;GM0874;40,2", "Zaanstad;GM0479;38,6", "Zaltbommel;GM0297;47,4", "Zandvoort;GM0473;31,6", "Zederik;GM0707;45,7", "Zeevang;GM0478;39,2", "Zeewolde;GM0050;46,7", "Zeist;GM0355;42,3", "Zevenaar;GM0299;37,2", "Zoetermeer;GM0637;38,5", "Zoeterwoude;GM0638;37,2", "Zuidhorn;GM0056;48,8", "Zuidplas;GM1892;42,1", "Zundert;GM0879;33,7", "Zutphen;GM0301;39,8", "Zwartewaterland;GM1896;53,3", "Zwijndrecht;GM0642;38,7", "Zwolle;GM0193;39,8"],
    "Choropleet Map: Neighborhood": ["Wijk;Statcode;Aantal inwoners", ";GM0599;2016", "Stadsdriehoek;BU05990110;2,46", "Oude Westen;BU05990111;1,48", "Cool;BU05990112;0,89", "Cs Kwartier;BU05990113;1,49", "Nieuwe Werk;BU05990118;0,25", "Dijkzigt;BU05990119;0,11", "Delfshaven;BU05990320;1,10", "Bospolder;BU05990321;1,10", "Tussendijken;BU05990322;1,12", "Spangen;BU05990323;1,61", "Nieuwe Westen;BU05990324;3,06", "Middelland;BU05990325;1,89", "Oud Mathenesse;BU05990327;1,12", "Witte Dorp;BU05990328;0,09", "Schiemond;BU05990329;0,83", "Kleinpolder;BU05990451;1,21", "Noord Kethel;BU05990452;0,01", "Schieveen;BU05990454;0,05", "Zestienhoven;BU05990455;0,37", "Overschie;BU05990456;1,06", "Landzicht;BU05990457;0,06", "Agniesebuurt;BU05990515;0,64", "Provenierswijk;BU05990516;0,73", "Bergpolder;BU05990531;1,24", "Blijdorp;BU05990532;1,62", "Liskwartier;BU05990534;1,20", "Oude Noorden;BU05990535;2,71", "Blijdorpsepolder;BU05990558;0,02", "Schiebroek;BU05990660;2,59", "Hillegersberg Zuid;BU05990661;1,26", "Hillegersberg Noord;BU05990662;1,23", "Terbregge;BU05990664;0,55", "Molenlaankwartier;BU05990665;1,27", "Rubroek;BU05990814;1,32", "Nieuw Crooswijk;BU05990836;0,47", "Oud Crooswijk;BU05990837;1,29", "Kralingen West;BU05990841;1,79", "Kralingen Oost;BU05990842;1,27", "Kralingse Bos;BU05990843;0,02", "De Esch;BU05990845;0,71", "Struisenburg;BU05990847;0,91", "Kop van Zuid;BU05991017;0,37", "Kop van Zuid - Entrepot;BU05991079;1,33", "Vreewijk;BU05991080;2,19", "Bloemhof;BU05991081;2,16", "Hillesluis;BU05991082;1,88", "Katendrecht;BU05991085;0,75", "Afrikaanderwijk;BU05991086;1,26", "Feijenoord;BU05991087;1,18", "Noordereiland;BU05991088;0,52", "Oud IJsselmonde;BU05991283;0,92", "Lombardijen;BU05991284;2,17", "Groot IJsselmonde;BU05991289;4,46", "Beverwaard;BU05991290;1,89", "Pernis;BU05991391;0,75", "s Gravenland;BU05991444;1,28", "Kralingseveer;BU05991446;0,26", "Prinsenland;BU05991448;1,50", "Het Lage Land;BU05991449;1,68", "Ommoord;BU05991463;3,57", "Zevenkamp;BU05991466;2,54", "Oosterflank;BU05991467;1,67", "Nesselande;BU05991468;1,97", "Charlois Zuidrand;BU05991570;0,07", "Tarwewijk;BU05991571;1,92", "Carnisse;BU05991572;1,77", "Zuidwijk;BU05991573;1,99", "Oud Charlois;BU05991574;2,14", "Wielewaal;BU05991575;0,08", "Zuidplein;BU05991576;0,19", "Pendrecht;BU05991577;1,91", "Zuiderpark;BU05991578;0,20", "Heijplaat;BU05991593;0,22", "Hoogvliet Noord;BU05991692;1,97", "Hoogvliet Zuid;BU05991699;3,45", "Strand en Duin;BU05991701;0,35", "Dorp;BU05991702;1,23", "Rijnpoort;BU05991703;0,01", "Spaanse Polder;BU05991853;0,02", "Nieuw Mathenesse;BU05991926;0,01", "Waalhaven;BU05992194;0,01", "Eemhaven;BU05992196;0,01", "Waalhaven Zuid;BU05992198;0,00", "Vondelingenplaat;BU05992295;0,00", "Botlek;BU05992306;0,00", "Europoort;BU05992307;0,00", "Maasvlakte;BU05992308;0,00", "Bedrijvenpark Noord-West;BU05992459;0,01", "Rivium;BU05992540;0,00", "Bedrijventerrein Schieveen;BU05992650;0,00", "Rozenburg;BU05992704;1,94", "Noordzeeweg;BU05992705;0,00"],
    "Choropleet Map: Province": ["Provincies;Statcode;Bevolking/Demografische druk/Groene druk", ";;2015", "Groningen (PV);PV20;35,0", "Friesland (PV);PV21;40,9", "Drenthe (PV);PV22;40,0", "Overijssel (PV);PV23;41,5", "Flevoland (PV);PV24;43,9", "Gelderland (PV);PV25;39,6", "Utrecht (PV);PV26;39,9", "Noord-Holland (PV);PV27;36,1", "Zuid-Holland (PV);PV28;38,1", "Zeeland (PV);PV29;38,9", "Noord-Brabant (PV);PV30;37,35", "Limburg (PV);PV31;32,8"],
    "Choropleet Map: Security region": ["Veiligheidsregio;Statcode;Politie", ";;2016", "Groningen;VR01;1,35", "FryslÃ¢n;VR02;0,44", "Drenthe;VR03;3,83", "IJsselland;VR04;3,48", "Twente;VR05;1,15", "Noord- en Oost-Gelderland;VR06;1,97", "Gelderland-Midden;VR07;1,69", "Gelderland-Zuid;VR08;1,47", "Utrecht;VR09;1,27", "Noord-Holland-Noord;VR10;4,46", "Zaanstreek-Waterland;VR11;1,65", "Kennemerland;VR12;6,25", "Amsterdam-Amstelland;VR13;7,13", "Gooi en Vechtstreek;VR14;3,33", "Haaglanden;VR15;7,04", "Hollands-Midden;VR16;2,33", "Rotterdam-Rijnmond;VR17;15,18", "Zuid-Holland-Zuid;VR18;3,66", "Zeeland;VR19;2,34", "Midden- en West-Brabant;VR20;2,79", "Brabant-Noord;VR21;2,39", "Brabant-Zuidoost;VR22;1,71", "Limburg-Noord;VR23;16,67", "Limburg-Zuid;VR24;2,23", "Flevoland;VR25;4,19"],
    "Choropleet Map: Tourist": ["Toeristen;Statcode;Totaal verblijfsrecreatie", ";;2017", "Waddeneilanden (TR);TR01;5,67", "Noordzeebadplaatsen (TR);TR02;15,30", "IJsselmeerkust (TR);TR03;5,28", "Deltagebied (TR);TR04;3,45", "Meren in Gron., Fr. en Noordw.-Ov. (TR);TR05;4,20", "Hollands-Utrechtse meren (TR);TR06;1,09", "Utrechtse Heuvelrug en t Gooi (TR);TR07;1,47", "Veluwe en Veluwerand (TR);TR08;7,52", "Gelders Rivierengebied (TR);TR09;1,96", "Achterhoek (TR);TR10;6,39", "Twente, Salland en Vechtstreek (TR);TR11;8,91", "Groningse, Fr. en Dr. Zandgronden (TR);TR12;10,97", "West- en Midden-Brabant (TR);TR13;8,07", "Oost-Br., N.- en Midden-L., Nijm. (TR);TR14;8,99", "Zuid-Limburg (TR);TR15;4,03", "4 grote steden excl. Noordzeebadpl. (TR);TR16;0,41", "Overig Nederland (TR);TR17;6,28"],
    "Choropleth Map: Water board": ["Waterschap;Statcode;percentage bevers", ";;2018", "Stichtse Rijnlanden;WS14;4,03", "Hollands Noorderkwartier;WS21;1,69", "Delfland;WS07;0,56", "Aa en Maas;WS24;1,93", "Brabantse Delta;WS22;17,73", "De Dommel;WS10;0,81", "Hollandse Delta;WS25;2,01", "Rijnland;WS12;0,97", "Schieland en Krimpenerwaard;WS26;2,10", "Amstel, Gooi en Vecht;WS05;0,40", "Hunze en Aa's;WS16;1,29", "Noorderzijlvest;WS17;1,37", "Limburg;WS31;24,98", "Drents Overijsselse Delta;WS30;4,51", "Rijn en IJssel;WS02;0,16", "Rivierenland;WS13;1,05", "Scheldestromen;WS27;12,49", "Vechtstromen;WS29;2,34", "Vallei en Veluwe;WS28;16,12", "Zuiderzeeland;WS20;1,61", "Wetterskip FryslÃ¢n;WS23;1,85"],
    "Choropleet Map: Youthcare": ["Jeugdzorg;Statcode;Jeugdreclasseringstrajecten", ";;2017", "Groningen (JZ);JZ01;4,51", "Friesland (FryslÃ¢n) (JZ);JZ02;3,20", "Kop van Noord-Holland (JZ);JZ03;0,73", "Drenthe (JZ);JZ04;3,04", "West Friesland (JZ);JZ05;1,00", "Alkmaar (Noord-Kennemerland) (JZ);JZ06;1,21", "IJsselland (JZ);JZ07;2,31", "Flevoland (JZ);JZ08;2,31", "Zaanstreek-Waterland (JZ);JZ09;1,31", "IJmond (Midden Kennemerland) (JZ);JZ10;0,73", "Zuid Kennemerland (JZ);JZ11;0,84", "Noord-Veluwe (JZ);JZ12;0,68", "Amsterdam-Amstelland (JZ);JZ13;8,61", "Twente (JZ);JZ14;4,36", "Haarlemmermeer (JZ);JZ15;0,52", "Gooi en Vechtstreek (JZ);JZ16;0,68", "Midden IJssel / Oost Veluwe (JZ);JZ17;1,89", "Holland Rijnland (JZ);JZ18;2,36", "Utrecht West (JZ);JZ19;0,68", "Eemland (JZ);JZ20;1,15", "Food Valley (JZ);JZ21;1,36", "Utrecht Stad (JZ);JZ22;2,73", "Zuidoost Utrecht (JZ);JZ23;0,58", "Haaglanden (JZ);JZ24;8,92", "Achterhoek (JZ);JZ25;1,15", "Lekstroom (JZ);JZ26;0,79", "Midden Holland (JZ);JZ27;1,21", "Arnhem (JZ);JZ28;3,20", "Rijnmond (JZ);JZ29;13,02", "Rivierenland (JZ);JZ30;1,21", "Zuid-Holland Zuid (JZ);JZ31;2,36", "Nijmegen (JZ);JZ32;1,89", "Noordoost Brabant (JZ);JZ33;2,83", "West Brabant Oost (JZ);JZ34;1,73", "Midden-Brabant (JZ);JZ35;2,52", "West Brabant West (JZ);JZ36;1,52", "Noord-Limburg (JZ);JZ37;1,78", "Zeeland (JZ);JZ38;1,73", "Zuidoost-Brabant (JZ);JZ39;2,62", "Zuid-Limburg (JZ);JZ41;3,88", "Midden-Limburg Oost (JZ);JZ42;0,52", "Midden-Limburg West (JZ);JZ43;0,26"],
    "Bubble Map: Agricultural areas": ["Landbouw;Statcode;Landbouw gewassen, dieren en grondgebruik naar hoofdbedrijfstype, regio", ";;2016", "Achterhoek (LB);LB2508;3372", "Alblasserwaard en Vijfherenlanden (LB);LB2807;705", "Amstelland en Aalsmeer (LB);LB2703;192", "Biesbosch (LB);LB3003;105", "Bollenstreek (LB);LB2808;396", "Bommelerwaard (LB);LB2506;390", "Boskoop en Rijneveld (LB);LB2805;423", "Centraal Tuinbouwgebied in Utrecht (LB);LB2603;43", "Centraal Weidegebied in Groningen (LB);LB2002;529", "De Kempen (LB);LB3007;1399", "De Marne (LB);LB2001;149", "De Wouden (LB);LB2103;1765", "Drentse VeenkoloniÃ«n en Hondsrug (LB);LB2205;870", "Eemland (LB);LB2604;222", "Eilanden (LB);LB2104;72", "Goeree-Overflakkee (LB);LB2803;320", "Groninger zuidelijk Westerkwartier (LB);LB2005;398", "Haarlemmermeer (LB);LB2702;230", "IJsselstreek (LB);LB2502;417", "Kennemerland (LB);LB2708;160", "Krimpenerwaard en Oostel. Rijnland (LB);LB2806;456", "Kromme Rijn-streek en Heuvelrug (LB);LB2601;457", "Land van Breda (LB);LB3006;573", "Maaskant en Land van Cuijk (LB);LB3009;1393", "Midden-Noord-Brabant (LB);LB3008;1467", "Noordelijk Friesland (LB);LB2101;990", "Noordelijk Zeeland (LB);LB2901;624", "Noord-Limburg (LB);LB3101;2923", "Noordoostelijke Polder (LB);LB2401;854", "Noordoost-Overijssel (LB);LB2302;947", "Noordwesthoek (LB);LB3001;409", "Oostelijk Hogeland (LB);LB2006;349", "Oostelijke Betuwe en Nijmegen (LB);LB2504;185", "Oostelijke Bouwstreek in Groningen (LB);LB2003;703", "Oostelijke Langstraat (LB);LB3004;529", "Oostelijke Veluwe (LB);LB2501;753", "Rotterdam en omgeving (LB);LB2802;177", "Salland (LB);LB2304;1190", "Smilde en Centr. Zandgebied in Dr. (LB);LB2202;617", "'t Gein en Gooiland (LB);LB2707;172", "Texel en Land van Zijpe (LB);LB2704;619", "Twente (LB);LB2303;3198", "Veluwezoom en Betuwe (LB);LB2505;1453", "Voorne-Putten en Hoeksche Waard (LB);LB2801;655", "Walcheren en Zuid-Beveland (LB);LB2902;1026", "Waterland en NH.'se Droogmakerijen (LB);LB2706;730", "Weidegebied in Overijssel (LB);LB2301;1681", "Weidegebied van het Noorderveld (LB);LB2201;174", "Weidestreek in Friesland (LB);LB2102;1585", "Westelijk Peelgebied (LB);LB3010;2707", "Westelijk Rijnland (LB);LB2804;604", "Westelijk Weidegebied in Utrecht (LB);LB2602;1205", "Westelijke Langstraat (LB);LB3002;451", "Westelijke Veluwe (LB);LB2507;1918", "Westelijke Zandgronden (LB);LB3005;882", "Westerwolde en Gron. VeenkoloniÃ«n (LB);LB2004;502", "West-Friesland en omgeving (LB);LB2705;1010", "Westland en ZH.'se Droogmakerijen (LB);LB2809;1347", "Wieringen en Wieringermeer (LB);LB2701;583", "Zandgebied in Utrecht (LB);LB2605;320", "Zeeuwsch-Vlaanderen (LB);LB2903;1229", "Zuidelijk Gelderland (LB);LB2503;845", "Zuidelijk Zandgebied in Drenthe (LB);LB2204;538", "Zuidelijke IJsselmeerpolders (LB);LB2402;840", "Zuid-Limburg (LB);LB3102;970", "Zuidw. Weidegebied in Drenthe (LB);LB2203;684"],
    "Bubble Map: COROP": ["COROP;Statcode;Bevolking", ";;2015", "Oost-Groningen (CR);CR01;148966", "Delfzijl en omgeving (CR);CR02;47560", "Overig Groningen (CR);CR03;387416", "Noord-Friesland (CR);CR04;324103", "Zuidwest-Friesland (CR);CR05;135377", "Zuidoost-Friesland (CR);CR06;186777", "Noord-Drenthe (CR);CR07;189359", "Zuidoost-Drenthe (CR);CR08;168812", "Zuidwest-Drenthe (CR);CR09;130405", "Noord-Overijssel (CR);CR10;361694", "Zuidwest-Overijssel (CR);CR11;152982", "Twente (CR);CR12;625976", "Veluwe (CR);CR13;667946", "Achterhoek (CR);CR14;398772", "Arnhem/Nijmegen (CR);CR15;722312", "Zuidwest-Gelderland (CR);CR16;237548", "Utrecht (CR);CR17;1263572", "Kop van Noord-Holland (CR);CR18;372095", "Alkmaar en omgeving (CR);CR19;240505", "IJmond (CR);CR20;194138", "Agglomeratie Haarlem (CR);CR21;227647", "Zaanstreek (CR);CR22;167158", "Groot-Amsterdam (CR);CR23;1313889", "Het Gooi en Vechtstreek (CR);CR24;246497", "Agglomeratie Leiden en Bollenstreek (CR);CR25;415106", "Agglomeratie s-Gravenhage (CR);CR26;838015", "Delft en Westland (CR);CR27;224041", "Oost-Zuid-Holland (CR);CR28;318688", "Groot-Rijnmond (CR);CR29;1403932", "Zuidoost-Zuid-Holland (CR);CR30;400229", "Zeeuwsch-Vlaanderen (CR);CR31;105684", "Overig Zeeland (CR);CR32;275042", "West-Noord-Brabant (CR);CR33;623882", "Midden-Noord-Brabant (CR);CR34;466683", "Noordoost-Noord-Brabant (CR);CR35;645663", "Zuidoost-Noord-Brabant (CR);CR36;752523", "Noord-Limburg (CR);CR37;280552", "Midden-Limburg (CR);CR38;235351", "Zuid-Limburg (CR);CR39;602038", "Flevoland (CR);CR40;401791"],
    "Bubble Map: COROP plus": ["Corop Plus;Statcode;Investeringen in vaste activa naar type en regio", ";;2017", "Achterhoek (CP);CP1400;5090", "Aggl.'s-Gravenhage excl. Zoetermeer (CP);CP2601;345", "Agglomeratie Haarlem (CP);CP2100;1900", "Agglomeratie Leiden en Bollenstreek (CP);CP2500;767", "Alkmaar en omgeving (CP);CP1900;777", "Almere (CP);CP4001;1274", "Amsterdam (CP);CP2311;6", "Arnhem/Nijmegen (CP);CP1500;812", "Delft en Westland (CP);CP2700;0", "Delfzijl en omgeving (CP);CP0200;2092", "Drechtsteden (CP);CP3001;1629", "Edam-Volendam en omgeving (CP);CP2322;784", "Flevoland-Midden (CP);CP4002;1146", "Haarlemmermeer en omgeving (CP);CP2323;2273", "Het Gooi en Vechtstreek (CP);CP2400;678", "IJmond (CP);CP2000;456", "Kop van Noord-Holland (CP);CP1800;234", "Midden-Limburg (CP);CP3800;123", "Midden-Noord-Brabant (CP);CP3400;9823", "Noord-Drenthe (CP);CP0700;3453", "Noord-Friesland (CP);CP0400;1234", "Noord-Limburg (CP);CP3700;648", "Noordoostpolder en Urk (CP);CP4003;450", "Noord-Overijssel (CP);CP1000;234", "Oost-Groningen (CP);CP0100;789", "Oost-Zuid-Holland (CP);CP2800;456", "Overig Agglomeratie Amsterdam (CP);CP2321;1271", "Overig Groningen (CP);CP0300;897", "Overig Groot-Rijnmond (CP);CP2920;1158", "Overig Noordoost-Noord-Brabant (CP);CP3520;2531", "Overig Zeeland (CP);CP3200;1433", "Overig Zuidoost-Zuid-Holland (CP);CP3002;1173", "Rijnmond (CP);CP2910;9071", "Stadsgewest Amersfoort (CP);CP1702;1788", "Stadsgewest 's-Hertogenbosch (CP);CP3510;2274", "Stadsgewest Utrecht (CP);CP1703;129", "Twente (CP);CP1200;12", "Utrecht-West (CP);CP1701;867", "Veluwe (CP);CP1300;560", "West-Noord-Brabant (CP);CP3300;45", "Zaanstreek (CP);CP2200;700", "Zeeuwsch-Vlaanderen (CP);CP3100;85", "Zoetermeer (CP);CP2602;506", "Zuid-Limburg (CP);CP3900;100", "Zuidoost-Drenthe (CP);CP0800;34", "Zuidoost-Friesland (CP);CP0600;123", "Zuidoost-Noord-Brabant (CP);CP3600;321", "Zuidoost-Utrecht (CP);CP1704;939", "Zuidwest-Drenthe (CP);CP0900;43", "Zuidwest-Friesland (CP);CP0500;76", "Zuidwest-Gelderland (CP);CP1600;1", "Zuidwest-Overijssel (CP);CP1100;123"],
    "Bubble Map: District": ["Wijk;Statcode;Personen met AOW-uitkering", ";GM0518;2015", "Wijk 01 Oostduinen;WK051801;0", "Wijk 02 Belgisch Park;WK051802;1540", "Wijk 03 Westbroekpark en Duttendel;WK051803;700", "Wijk 04 Benoordenhout;WK051804;3500", "Wijk 05 Archipelbuurt;WK051805;1210", "Wijk 06 Van Stolkpark en Scheveningse Bo;WK051806;240", "Wijk 07 Scheveningen;WK051807;3280", "Wijk 08 Duindorp;WK051808;810", "Wijk 09 Geuzen- en Statenkwartier;WK051809;2510", "Wijk 10 Zorgvliet;WK051810;140", "Wijk 11 Duinoord;WK051811;990", "Wijk 12 Bomen- en Bloemenbuurt;WK051812;2850", "Wijk 13 Vogelwijk;WK051813;990", "Wijk 14 Bohemen en Meer en Bos;WK051814;1740", "Wijk 15 Kijkduin en Ockenburgh;WK051815;700", "Wijk 16 Kraayenstein en de Uithof;WK051816;970", "Wijk 17 Loosduinen;WK051817;3830", "Wijk 18 Waldeck;WK051818;5350", "Wijk 19 Vruchtenbuurt;WK051819;1450", "Wijk 20 Valkenboskwartier;WK051820;1690", "Wijk 21 Regentessekwartier;WK051821;1210", "Wijk 22 Zeeheldenkwartier;WK051822;1050", "Wijk 23 Willemspark;WK051823;250", "Wijk 24 Haagse Bos;WK051824;180", "Wijk 25 Mariahoeve en Marlot;WK051825;3250", "Wijk 26 Bezuidenhout;WK051826;1930", "Wijk 27 Stationsbuurt;WK051827;870", "Wijk 28 Centrum;WK051828;2130", "Wijk 29 Schildersbuurt;WK051829;2780", "Wijk 30 Transvaalkwartier;WK051830;1350", "Wijk 31 Rustenburg en Oostbroek;WK051831;1410", "Wijk 32 Leyenburg;WK051832;2690", "Wijk 33 Bouwlust en Vrederust;WK051833;4460", "Wijk 34 Morgenstond;WK051834;2470", "Wijk 35 Zuiderpark;WK051835;100", "Wijk 36 Moerwijk;WK051836;2280", "Wijk 37 Groente- en Fruitmarkt;WK051837;320", "Wijk 38 Laakkwartier en Spoorwijk;WK051838;3090", "Wijk 39 Binckhorst;WK051839;20", "Wijk 40 Wateringse Veld;WK051840;2050", "Wijk 41 Hoornwijk;WK051841;40", "Wijk 42 Ypenburg;WK051842;1630", "Wijk 43 Forepark;WK051843;40", "Wijk 44 Leidschenveen;WK051844;1540"],
    "Bubble Map: Healthcare": ["GGD;Statcode;Totaal", ";;2017", "GGD Groningen (GG);GG0111;13032", "GGD Drenthe (GG);GG0706;13635", "GGD IJsselland (GG);GG1009;12758", "GGD Regio Twente (GG);GG1106;13416", "GGD Noord- en Oost-Gelderland (GG);GG1413;13423", "Veiligheids- en Gezondheidsregio Gelderland-Midden (GG);GG1911;13160", "GGD Gelderland-Zuid;GG2014;13069", "GGD Flevoland (GG);GG2209;12972", "GGD Regio Utrecht;GG2514;12525", "GGD Hollands-Noorden (GG);GG2707;12725", "GGD Kennemerland (GG);GG3109;13083", "GGD Amsterdam (GG);GG3406;12272", "GGD Gooi en Vechtstreek (GG);GG3606;13278", "GGD Hollands-Midden (GG);GG4506;13193", "GGD Rotterdam-Rijnmond (GG);GG4607;13710", "Dienst Gezondheid & Jeugd ZHZ (GG);GG4816;13765", "GGD Zeeland (GG);GG5006;13381", "GGD West-Brabant (GG);GG5206;13842", "GGD Hart voor Brabant (GG);GG5406;13524", "GGD Brabant-Zuidoost (GG);GG5608;13380", "GGD Limburg-Noord (GG);GG6011;13762", "GGD Zuid-Limburg (GG);GG6106;14020", "GGD Haaglanden (GG);GG7014;13621", "GGD FryslÃ¢n (GG);GG7206;13129", "GGD Zaanstreek/Waterland (GG);GG7306;13559"],
    "Bubble Map: Labor region": ["Regios;Statcode;Arbeidsplaatsen", ";;2016", "Groningen;AM01;6803", "Friesland;AM02;6931", "Drenthe;AM03;6715", "Twente;AM05;6946", "Stedendriehoek en Noordwest Veluwe;AM06;7030", "Midden-Gelderland;AM07;6966", "Rijk van Nijmegen;AM08;6996", "Achterhoek;AM09;6913", "Rivierenland;AM10;7072", "Flevoland;AM11;7208", "Gooi en Vechtstreek;AM12;7007", "Midden-Utrecht;AM13;7276", "Amersfoort;AM14;7256", "Noord-Holland Noord;AM15;7033", "Zaanstreek-Waterland;AM17;7095", "Groot Amsterdam;AM18;7251", "Holland Rijnland;AM19;7214", "Midden-Holland;AM20;7076", "Haaglanden;AM21;6788", "Rijnmond;AM22;6742", "Drechtsteden;AM23;6972", "Zeeland;AM24;6911", "West-Brabant;AM25;6992", "Midden-Brabant;AM26;7137", "Noordoost-Brabant;AM27;7150", "Zuidoost-Brabant;AM28;7070", "Noord-Limburg;AM29;7098", "Zuid-Limburg;AM30;6478", "Food Valley;AM31;7065", "Helmond-De Peel;AM32;7066", "Midden-Limburg;AM33;6793", "Zuid-Holland Centraal;AM34;7114", "Gorinchem;AM35;7109"],
    "Bubble Map: Municipality": ["Gemeente;Statcode;Demografische druk", ";;2015", "Aa en Hunze;GM1680;37", "Aalburg;GM0738;47", "Aalsmeer;GM0358;44", "Aalten;GM0197;40", "Achtkarspelen;GM0059;43", "Alblasserdam;GM0482;48", "Albrandswaard;GM0613;42", "Alkmaar;GM0361;35", "Almelo;GM0141;40", "Almere;GM0034;41", "Alphen aan den Rijn;GM0484;40", "Alphen-Chaam;GM1723;37", "Ameland;GM0060;39", "Amersfoort;GM0307;43", "Amstelveen;GM0362;38", "Amsterdam;GM0363;29", "Apeldoorn;GM0200;38", "Appingedam;GM0003;36", "Arnhem;GM0202;34", "Assen;GM0106;41", "Asten;GM0743;39", "Baarle-Nassau;GM0744;32", "Baarn;GM0308;38", "Barendrecht;GM0489;46", "Barneveld;GM0203;53", "Bedum;GM0005;41", "Beek (L,);GM0888;33", "Beemster;GM0370;39", "Beesel;GM0889;37", "Bellingwedde;GM0007;34", "Bergeijk;GM1724;39", "Bergen (L,);GM0893;35", "Bergen (NH,);GM0373;38", "Bergen op Zoom;GM0748;35", "Berkelland;GM1859;40", "Bernheze;GM1721;43", "Best;GM0753;40", "Beuningen;GM0209;36", "Beverwijk;GM0375;37", "het Bildt;GM0063;42", "De Bilt;GM0310;43", "Binnenmaas;GM0585;37", "Bladel;GM1728;39", "Blaricum;GM0376;42", "Bloemendaal;GM0377;49", "Bodegraven-Reeuwijk;GM1901;44", "Boekel;GM0755;43", "Ten Boer;GM0009;46", "Borger-Odoorn;GM1681;37", "Borne;GM0147;42", "Borsele;GM0654;43", "Boxmeer;GM0756;38", "Boxtel;GM0757;39", "Breda;GM0758;36", "Brielle;GM0501;35", "Bronckhorst;GM1876;39", "Brummen;GM0213;38", "Brunssum;GM0899;31", "Bunnik;GM0312;43", "Bunschoten;GM0313;46", "Buren;GM0214;39", "Bussum;GM0381;45", "Capelle aan den IJssel;GM0502;37", "Castricum;GM0383;40", "Coevorden;GM0109;39", "Cranendonck;GM1706;36", "Cromstrijen;GM0611;37", "Cuijk;GM1684;39", "Culemborg;GM0216;42", "Dalfsen;GM0148;44", "Dantumadiel;GM1891;42", "Delft;GM0503;29", "Delfzijl;GM0010;36", "Deurne;GM0762;38", "Deventer;GM0150;39", "Diemen;GM0384;34", "Dinkelland;GM1774;44", "Doesburg;GM0221;38", "Doetinchem;GM0222;38", "Dongen;GM0766;38", "Dongeradeel;GM0058;43", "Dordrecht;GM0505;37", "Drechterland;GM0498;41", "Drimmelen;GM1719;36", "Dronten;GM0303;43", "Druten;GM0225;40", "Duiven;GM0226;41", "Echt-Susteren;GM1711;31", "Edam-Volendam;GM0385;42", "Ede;GM0228;44", "Eemnes;GM0317;43", "Eemsmond;GM1651;39", "Eersel;GM0770;37", "Eijsden-Margraten;GM1903;35", "Eindhoven;GM0772;32", "Elburg;GM0230;46", "Emmen;GM0114;37", "Enkhuizen;GM0388;36", "Enschede;GM0153;36", "Epe;GM0232;39", "Ermelo;GM0233;40", "Etten-Leur;GM0777;39", "Ferwerderadiel;GM1722;44", "Franekeradeel;GM0070;41", "De Friese Meren;GM1921;42", "Geertruidenberg;GM0779;37", "Geldermalsen;GM0236;44", "Geldrop-Mierlo;GM1771;38", "Gemert-Bakel;GM1652;38", "Gennep;GM0907;37", "Giessenlanden;GM0689;43", "Gilze en Rijen;GM0784;39", "Goeree-Overflakkee;GM1924;40", "Goes;GM0664;36", "Goirle;GM0785;39", "Gorinchem;GM0512;39", "Gouda;GM0513;41", "Grave;GM0786;37", "s-Gravenhage (gemeente);GM0518;36", "Groesbeek;GM0241;36", "Groningen (gemeente);GM0014;27", "Grootegast;GM0015;45", "Gulpen-Wittem;GM1729;29", "Haaksbergen;GM0158;41", "Haaren;GM0788;38", "Haarlem;GM0392;35", "Haarlemmerliede en Spaarnwoude;GM0393;37", "Haarlemmermeer;GM0394;42", "Halderberge;GM1655;35", "Hardenberg;GM0160;44", "Harderwijk;GM0243;42", "Hardinxveld-Giessendam;GM0523;47", "Haren;GM0017;44", "Harlingen;GM0072;40", "Hattem;GM0244;44", "Heemskerk;GM0396;37", "Heemstede;GM0397;46", "Heerde;GM0246;40", "Heerenveen;GM0074;41", "Heerhugowaard;GM0398;43", "Heerlen;GM0917;29", "Heeze-Leende;GM1658;37", "Heiloo;GM0399;42", "Den Helder;GM0400;34", "Hellendoorn;GM0163;41", "Hellevoetsluis;GM0530;36", "Helmond;GM0794;41", "Hendrik-Ido-Ambacht;GM0531;46", "Hengelo (O,);GM0164;39", "s-Hertogenbosch;GM0796;35", "Heumen;GM0252;42", "Heusden;GM0797;39", "Hillegom;GM0534;37", "Hilvarenbeek;GM0798;39", "Hilversum;GM0402;38", "Hof van Twente;GM1735;41", "Hollands Kroon;GM1911;40", "Hoogeveen;GM0118;42", "Hoogezand-Sappemeer;GM0018;38", "Hoorn;GM0405;39", "Horst aan de Maas;GM1507;38", "Houten;GM0321;45", "Huizen;GM0406;39", "Hulst;GM0677;34", "IJsselstein;GM0353;43", "Kaag en Braassem;GM1884;39", "Kampen;GM0166;47", "Kapelle;GM0678;45", "Katwijk;GM0537;44", "Kerkrade;GM0928;28", "Koggenland;GM1598;43", "Kollumerland en Nieuwkruisland;GM0079;42", "Korendijk;GM0588;42", "Krimpen aan den IJssel;GM0542;45", "Laarbeek;GM1659;39", "Landerd;GM1685;41", "Landgraaf;GM0882;30", "Landsmeer;GM0415;38", "Langedijk;GM0416;42", "Lansingerland;GM1621;49", "Laren (NH,);GM0417;43", "Leek;GM0022;42", "Leerdam;GM0545;42", "Leeuwarden;GM0080;35", "Leeuwarderadeel;GM0081;40", "Leiden;GM0546;30", "Leiderdorp;GM0547;41", "Leidschendam-Voorburg;GM1916;36", "Lelystad;GM0995;41", "Leudal;GM1640;35", "Leusden;GM0327;41", "Lingewaal;GM0733;41", "Lingewaard;GM1705;41", "Lisse;GM0553;39", "Littenseradiel;GM0140;44", "Lochem;GM0262;40", "Loon op Zand;GM0809;37", "Lopik;GM0331;46", "Loppersum;GM0024;39", "Losser;GM0168;39", "Maasdriel;GM0263;39", "Maasgouw;GM1641;31", "Maassluis;GM0556;37", "Maastricht;GM0935;28", "De Marne;GM1663;37", "Marum;GM0025;41", "Medemblik;GM0420;41", "Meerssen;GM0938;34", "Menameradiel;GM1908;42", "Menterwolde;GM1987;35", "Meppel;GM0119;41", "Middelburg (Z,);GM0687;40", "Midden-Delfland;GM1842;43", "Midden-Drenthe;GM1731;39", "Mill en Sint Hubert;GM0815;37", "Moerdijk;GM1709;38", "Molenwaard;GM1927;53", "Montferland;GM1955;37", "Montfoort;GM0335;47", "Mook en Middelaar;GM0944;38", "Muiden;GM0424;42", "Naarden;GM0425;53", "Neder-Betuwe;GM1740;51", "Nederweert;GM0946;35", "Neerijnen;GM0304;45", "Nieuwegein;GM0356;35", "Nieuwkoop;GM0569;39", "Nijkerk;GM0267;45", "Nijmegen;GM0268;31", "Noord-Beveland;GM1695;34", "Noordenveld;GM1699;40", "Noordoostpolder;GM0171;45", "Noordwijk;GM0575;34", "Noordwijkerhout;GM0576;39", "Nuenen, Gerwen en Nederwetten;GM0820;39", "Nunspeet;GM0302;46", "Nuth;GM0951;32", "Oegstgeest;GM0579;44", "Oirschot;GM0823;38", "Oisterwijk;GM0824;39", "Oldambt;GM1895;35", "Oldebroek;GM0269;43", "Oldenzaal;GM0173;41", "Olst-Wijhe;GM1773;40", "Ommen;GM0175;40", "Onderbanken;GM0881;32", "Oost Gelre;GM1586;41", "Oosterhout;GM0826;37", "Ooststellingwerf;GM0085;38", "Oostzaan;GM0431;39", "Opmeer;GM0432;42", "Opsterland;GM0086;42", "Oss;GM0828;38", "Oud-Beijerland;GM0584;42", "Oude IJsselstreek;GM1509;39", "Ouder-Amstel;GM0437;42", "Oudewater;GM0589;43", "Overbetuwe;GM1734;44", "Papendrecht;GM0590;41", "Peel en Maas;GM1894;36", "Pekela;GM0765;36", "Pijnacker-Nootdorp;GM1926;49", "Purmerend;GM0439;36", "Putten;GM0273;43", "Raalte;GM0177;40", "Reimerswaal;GM0703;50", "Renkum;GM0274;39", "Renswoude;GM0339;52", "Reusel-De Mierden;GM1667;36", "Rheden;GM0275;37", "Rhenen;GM0340;45", "Ridderkerk;GM0597;35", "Rijnwaarden;GM0196;37", "Rijssen-Holten;GM1742;51", "Rijswijk (ZH,);GM0603;32", "Roerdalen;GM1669;32", "Roermond;GM0957;33", "De Ronde Venen;GM0736;40", "Roosendaal;GM1674;37", "Rotterdam;GM0599;35", "Rozendaal;GM0277;51", "Rucphen;GM0840;29", "Schagen;GM0441;41", "Scherpenzeel;GM0279;50", "Schiedam;GM0606;36", "Schiermonnikoog;GM0088;33", "Schijndel;GM0844;37", "Schinnen;GM0962;34", "Schouwen-Duiveland;GM1676;37", "Simpelveld;GM0965;32", "Sint Anthonis;GM1702;39", "Sint-Michielsgestel;GM0845;41", "Sint-Oedenrode;GM0846;40", "Sittard-Geleen;GM1883;31", "Sliedrecht;GM0610;42", "Slochteren;GM0040;41", "Sluis;GM1714;33", "Smallingerland;GM0090;42", "Soest;GM0342;42", "Someren;GM0847;36", "Son en Breugel;GM0848;45", "Stadskanaal;GM0037;38", "Staphorst;GM0180;58", "Stede Broec;GM0532;42", "Steenbergen;GM0851;34", "Steenwijkerland;GM1708;40", "Stein (L,);GM0971;32", "Stichtse Vecht;GM1904;40", "Strijen;GM0617;34", "SÃºdwest-FryslÃ¢n;GM1900;43", "Terneuzen;GM0715;36", "Terschelling;GM0093;35", "Texel;GM0448;36", "Teylingen;GM1525;43", "Tholen;GM0716;46", "Tiel;GM0281;40", "Tilburg;GM0855;34", "Tubbergen;GM0183;45", "Twenterand;GM1700;45", "Tynaarlo;GM1730;43", "Tytsjerksteradiel;GM0737;43", "Uden;GM0856;39", "Uitgeest;GM0450;43", "Uithoorn;GM0451;41", "Urk;GM0184;71", "Utrecht (gemeente);GM0344;33", "Utrechtse Heuvelrug;GM1581;42", "Vaals;GM0981;28", "Valkenburg aan de Geul;GM0994;30", "Valkenswaard;GM0858;34", "Veendam;GM0047;38", "Veenendaal;GM0345;44", "Veere;GM0717;41", "Veghel;GM0860;40", "Veldhoven;GM0861;37", "Velsen;GM0453;38", "Venlo;GM0983;34", "Venray;GM0984;38", "Vianen;GM0620;41", "Vlaardingen;GM0622;36", "Vlagtwedde;GM0048;37", "Vlieland;GM0096;27", "Vlissingen;GM0718;35", "Voerendaal;GM0986;33", "Voorschoten;GM0626;44", "Voorst;GM0285;38", "Vught;GM0865;40", "Waalre;GM0866;43", "Waalwijk;GM0867;36", "Waddinxveen;GM0627;40", "Wageningen;GM0289;30", "Wassenaar;GM0629;46", "Waterland;GM0852;39", "Weert;GM0988;35", "Weesp;GM0457;36", "Werkendam;GM0870;43", "West Maas en Waal;GM0668;37", "Westerveld;GM1701;37", "Westervoort;GM0293;34", "Westland;GM1783;39", "Weststellingwerf;GM0098;38", "Westvoorne;GM0614;35", "Wierden;GM0189;43", "Wijchen;GM0296;40", "Wijdemeren;GM1696;40", "Wijk bij Duurstede;GM0352;39", "Winsum;GM0053;45", "Winterswijk;GM0294;39", "Woensdrecht;GM0873;36", "Woerden;GM0632;44", "De Wolden;GM1690;41", "Wormerland;GM0880;39", "Woudenberg;GM0351;50", "Woudrichem;GM0874;40", "Zaanstad;GM0479;38", "Zaltbommel;GM0297;47", "Zandvoort;GM0473;31", "Zederik;GM0707;45", "Zeevang;GM0478;39", "Zeewolde;GM0050;46", "Zeist;GM0355;42", "Zevenaar;GM0299;37", "Zoetermeer;GM0637;38", "Zoeterwoude;GM0638;37", "Zuidhorn;GM0056;48", "Zuidplas;GM1892;42", "Zundert;GM0879;33", "Zutphen;GM0301;39", "Zwartewaterland;GM1896;53", "Zwijndrecht;GM0642;38", "Zwolle;GM0193;39"],
    "Bubble Map: Neighborhood": ["Buurt;Statcode;Particuliere huishoudens", ";GM0363;2013", "Burgwallen-Oude Zijde;BU03630000;2960", "Burgwallen-Nieuwe Zijde;BU03630001;3170", "Grachtengordel-West;BU03630002;4600", "Grachtengordel-Zuid;BU03630003;2785", "Nieuwmarkt/Lastage;BU03630004;6210", "Haarlemmerbuurt;BU03630005;5810", "Jordaan;BU03630006;12915", "De Weteringschans;BU03630007;4730", "Weesperbuurt/Plantage;BU03630008;4750", "Oostelijke Eilanden/Kadijken;BU03630009;7785", "Westelijk Havengebied;BU03630110;225", "Bedrijventerrein Sloterdijk;BU03630111;145", "Houthavens;BU03630212;1330", "Spaarndammer- en Zeeheldenbuurt;BU03630213;6205", "Staatsliedenbuurt;BU03630214;7745", "Centrale Markt;BU03630215;1295", "Frederik Hendrikbuurt;BU03630216;5050", "Da Costabuurt;BU03630217;2945", "Kinkerbuurt;BU03630218;3580", "Van Lennepbuurt;BU03630219;4505", "Helmersbuurt;BU03630220;4605", "Overtoomse Sluis;BU03630221;4750", "Vondelbuurt;BU03630222;985", "Sloterdijk;BU03630236;80", "Landlust;BU03630237;10110", "Erasmuspark;BU03630238;3335", "De Kolenkit;BU03630239;4210", "De Krommert;BU03630240;7415", "Van Galenbuurt;BU03630241;3440", "Hoofdweg en omgeving;BU03630242;6040", "Westindische buurt;BU03630243;3940", "Spieringhorn;BU03630375;0", "Slotermeer-Noordoost;BU03630376;4535", "Slotermeer-Zuidwest;BU03630377;7965", "Geuzenveld;BU03630378;6380", "Eendracht;BU03630379;990", "Lutkemeer en Ookmeer;BU03630380;375", "Osdorp-Oost;BU03630381;8405", "Osdorp-Midden;BU03630382;6745", "De Punt;BU03630383;2440", "Middelveldsche Akerpolder en Sloten;BU03630384;5995", "Slotervaart;BU03630385;8460", "Overtoomse Veld;BU03630386;4710", "Westlandgracht;BU03630387;3860", "Sloten- en Riekerpolder;BU03630388;5810", "Oude Pijp;BU03630424;9925", "Nieuwe Pijp;BU03630425;7740", "Diamantbuurt;BU03630426;4855", "Hoofddorppleinbuurt;BU03630444;6800", "Schinkelbuurt;BU03630445;2430", "Willemspark;BU03630446;2785", "Museumkwartier;BU03630447;6165", "Stadionbuurt;BU03630448;6675", "Apollobuurt;BU03630449;4190", "Duivelseiland;BU03630450;875", "Scheldebuurt;BU03630452;8345", "IJselbuurt;BU03630453;3170", "Rijnbuurt;BU03630454;5735", "Station-Zuid WTC en omgeving;BU03630459;745", "Buitenveldert-West;BU03630490;7715", "Buitenveldert-Oost;BU03630491;4145", "Weesperzijde;BU03630527;2905", "Oosterparkbuurt;BU03630528;5975", "Dapperbuurt;BU03630529;4845", "Transvaalbuurt;BU03630530;4795", "Indische Buurt West;BU03630531;7185", "Indische Buurt Oost;BU03630532;5205", "Oostelijk Havengebied;BU03630533;8805", "Zeeburgereiland/Nieuwe Diep;BU03630534;675", "IJburg West;BU03630535;5350", "IJburg Zuid;BU03630551;2545", "Frankendael;BU03630555;5615", "Middenmeer;BU03630556;7185", "Betondorp;BU03630557;1925", "De Omval;BU03630558;1550", "IJburg Oost;BU03630574;0", "Volewijck;BU03630660;4940", "Ijplein/Vogelbuurt;BU03630661;4340", "Tuindorp Nieuwendam;BU03630662;1815", "Tuindorp Buiksloot;BU03630663;935", "Nieuwendammerdijk/Buiksloterdijk;BU03630664;655", "Tuindorp Oostzaan;BU03630665;5180", "Oostzanerwerf;BU03630666;3880", "Kadoelen;BU03630667;1235", "Nieuwendam-Noord;BU03630668;5545", "Buikslotermeer;BU03630669;6355", "Banne Buiksloot;BU03630670;5900", "Buiksloterham;BU03630671;810", "Nieuwendammerham;BU03630672;65", "Waterland;BU03630673;920", "Amstel III/Bullewijk;BU03630792;95", "Bijlmer-Centrum (D, F, H);BU03630793;12550", "Bijlmer-Oost (E, G, K);BU03630794;13420", "Nellestein;BU03630795;1765", "Holendrecht/Reigersbos;BU03630796;8955", "Gein;BU03630797;5570", "Driemond;BU03630798;625"],
    "Bubble Map: Province": ["Provincies;Statcode;Aantal schapen", ";;2015", "Groningen (PV);PV20;35", "Friesland (PV);PV21;40", "Drenthe (PV);PV22;40", "Overijssel (PV);PV23;41", "Flevoland (PV);PV24;43", "Gelderland (PV);PV25;39", "Utrecht (PV);PV26;39", "Noord-Holland (PV);PV27;36", "Zuid-Holland (PV);PV28;38", "Zeeland (PV);PV29;38", "Noord-Brabant (PV);PV30;37", "Limburg (PV);PV31;32"],
    "Bubble Map: Security region": ["Veiligheidsregio;Statcode;Aantal aangiften", ";;2016", "Groningen;VR01;1353", "FryslÃ¢n;VR02;436", "Drenthe;VR03;3823", "IJsselland;VR04;3484", "Twente;VR05;1048", "Noord- en Oost-Gelderland;VR06;1970", "Gelderland-Midden;VR07;1693", "Gelderland-Zuid;VR08;1467", "Utrecht;VR09;1246", "Noord-Holland-Noord;VR10;4450", "Zaanstreek-Waterland;VR11;1651", "Kennemerland;VR12;6250", "Amsterdam-Amstelland;VR13;7129", "Gooi en Vechtstreek;VR14;3334", "Haaglanden;VR15;7041", "Hollands-Midden;VR16;2331", "Rotterdam-Rijnmond;VR17;14878", "Zuid-Holland-Zuid;VR18;3662", "Zeeland;VR19;2343", "Midden- en West-Brabant;VR20;1789", "Brabant-Noord;VR21;2388", "Brabant-Zuidoost;VR22;1706", "Limburg-Noord;VR23;15671", "Limburg-Zuid;VR24;2232", "Flevoland;VR25;4191"],
    "Bubble Map: Tourist": ["Toeristen;Statcode;Totaal verblijfsrecreatie", ";;2017", "Waddeneilanden (TR);TR01;301", "Noordzeebadplaatsen (TR);TR02;812", "IJsselmeerkust (TR);TR03;280", "Deltagebied (TR);TR04;183", "Meren in Gron., Fr. en Noordw.-Ov. (TR);TR05;223", "Hollands-Utrechtse meren (TR);TR06;58", "Utrechtse Heuvelrug en 't Gooi (TR);TR07;78", "Veluwe en Veluwerand (TR);TR08;399", "Gelders Rivierengebied (TR);TR09;104", "Achterhoek (TR);TR10;339", "Twente, Salland en Vechtstreek (TR);TR11;473", "Groningse, Fr. en Dr. Zandgronden (TR);TR12;582", "West- en Midden-Brabant (TR);TR13;428", "Oost-Br., N.- en Midden-L., Nijm. (TR);TR14;477", "Zuid-Limburg (TR);TR15;214", "4 grote steden excl. Noordzeebadpl. (TR);TR16;22", "Overig Nederland (TR);TR17;333"],
    "Bubble Map: Water board": ["Waterschap;Statcode;Aantal bevers", ";;2018", "Stichtse Rijnlanden;WS14;50", "Hollands Noorderkwartier;WS21;21", "Delfland;WS07;7", "Aa en Maas;WS24;24", "Brabantse Delta;WS22;220", "De Dommel;WS10;10", "Hollandse Delta;WS25;25", "Rijnland;WS12;12", "Schieland en Krimpenerwaard;WS26;26", "Amstel, Gooi en Vecht;WS05;5", "Hunze en Aa's;WS16;16", "Noorderzijlvest;WS17;17", "Limburg;WS31;310", "Drents Overijsselse Delta;WS30;56", "Rijn en IJssel;WS02;2", "Rivierenland;WS13;13", "Scheldestromen;WS27;155", "Vechtstromen;WS29;29", "Vallei en Veluwe;WS28;200", "Zuiderzeeland;WS20;20", "Wetterskip FryslÃ¢n;WS23;23"],
    "Bubble Map: Youthcare": ["Jeugdzorg;Statcode;Jeugdreclasseringstrajecten", ";;2017", "Groningen (JZ);JZ01;430", "Friesland (FryslÃ¢n) (JZ);JZ02;305", "Kop van Noord-Holland (JZ);JZ03;70", "Drenthe (JZ);JZ04;290", "West Friesland (JZ);JZ05;95", "Alkmaar (Noord-Kennemerland) (JZ);JZ06;115", "IJsselland (JZ);JZ07;220", "Flevoland (JZ);JZ08;220", "Zaanstreek-Waterland (JZ);JZ09;125", "IJmond (Midden Kennemerland) (JZ);JZ10;70", "Zuid Kennemerland (JZ);JZ11;80", "Noord-Veluwe (JZ);JZ12;65", "Amsterdam-Amstelland (JZ);JZ13;820", "Twente (JZ);JZ14;415", "Haarlemmermeer (JZ);JZ15;50", "Gooi en Vechtstreek (JZ);JZ16;65", "Midden IJssel / Oost Veluwe (JZ);JZ17;180", "Holland Rijnland (JZ);JZ18;225", "Utrecht West (JZ);JZ19;65", "Eemland (JZ);JZ20;110", "Food Valley (JZ);JZ21;130", "Utrecht Stad (JZ);JZ22;260", "Zuidoost Utrecht (JZ);JZ23;55", "Haaglanden (JZ);JZ24;850", "Achterhoek (JZ);JZ25;110", "Lekstroom (JZ);JZ26;75", "Midden Holland (JZ);JZ27;115", "Arnhem (JZ);JZ28;305", "Rijnmond (JZ);JZ29;1240", "Rivierenland (JZ);JZ30;115", "Zuid-Holland Zuid (JZ);JZ31;225", "Nijmegen (JZ);JZ32;180", "Noordoost Brabant (JZ);JZ33;270", "West Brabant Oost (JZ);JZ34;165", "Midden-Brabant (JZ);JZ35;240", "West Brabant West (JZ);JZ36;145", "Noord-Limburg (JZ);JZ37;170", "Zeeland (JZ);JZ38;165", "Zuidoost-Brabant (JZ);JZ39;250", "Zuid-Limburg (JZ);JZ41;370", "Midden-Limburg Oost (JZ);JZ42;50", "Midden-Limburg West (JZ);JZ43;25"]
},
"undefined" == typeof highed)
    var highed = {
        meta: {}
    };
if (highed.meta.chartCBSTemplates = {
    Line: {
        title: "template.line.title",
        templates: {
            line: {
                title: "template.line.subtype.line",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/abywon.svg",
                config: lineConfig("line"),
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            spline: {
                title: "template.line.subtype.spline",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/upafes.svg",
                config: lineConfig("spline"),
                tooltipText: "Requires one column for X values or categories, subsequently one column for each series' Y values."
            },
            combination: {
                title: "template.line.subtype.combination",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ynikoc.svg",
                config: lineConfig("line", "column"),
                tooltipText: "Requires two data columns."
            }
        }
    },
    Area: {
        title: "template.area.title",
        templates: {
            stacked: {
                title: "template.area.subtype.stacked",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/inebav.svg",
                config: areaConfig("normal"),
                tooltipText: "Stacked area chart. Requires one column for X values or categories, subsequently one column for each series' Y values. The first data series is in the top of the stack."
            },
            percentage: {
                title: "template.area.subtype.percentage",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/iporos.svg",
                config: areaConfig("percent"),
                tooltipText: "Stacked percentage area chart. Requires one column for X values or categories, subsequently one column for each series' Y values. The first data series is in the top of the stack."
            }
        }
    },
    Column: {
        title: "template.column.title",
        templates: {
            basic: {
                title: "template.column.subtype.basic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovobiq.svg",
                config: columnConfig(null),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            percentage: {
                title: "template.column.subtype.percent",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovobiq.svg",
                config: columnConfig(null, null, "percent"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            columnstacked: {
                title: "template.column.subtype.stacked",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ycehiz.svg",
                config: columnConfig("normal"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            columnstackedpercentage: {
                title: "template.column.subtype.stacked.percent",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ojixow.svg",
                config: columnConfig("percent"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            columnCombination: {
                title: "template.column.subtype.combination",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ynikoc.svg",
                config: columnConfig(null, "line"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis). The first series will be a line."
            }
        }
    },
    Bar: {
        title: "template.bar.title",
        templates: {
            basic: {
                title: "template.bar.subtype.basic",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovuvul.svg",
                config: barConfig(null),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            percentage: {
                title: "template.bar.subtype.percent",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/ovuvul.svg",
                config: barConfig(null, null, "percent"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstacked: {
                title: "template.bar.subtype.stacked",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/epodat.svg",
                config: barConfig("normal"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barstackedpercentage: {
                title: "template.bar.subtype.stacked.percent",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/yhekaq.svg",
                config: barConfig("percent"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            },
            barnegativestack: {
                title: "template.bar.subtype.stacked.negative",
                urlImg: "./images/barstackednegative.svg",
                config: barConfig("normal", "negative"),
                tooltipText: "Requires one data column for X values or categories (vertical axis), subsequently one data column for each series' Y values (horizontal axis)."
            }
        }
    },
    Donut: {
        title: "template.pie.title",
        templates: {
            donut: {
                title: "template.pie.subtype.donut",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/upaxab.svg",
                config: pieConfig(),
                tooltipText: "Requires a single column (single serie)."
            }
        }
    },
    Polar: {
        title: "template.polar.title",
        templates: {
            spiderLine: {
                title: "template.polar.subtype.spider",
                urlImg: "https://cloud.highcharts.com/static/thumbnails/uqonaj.svg",
                config: polarConfig(),
                tooltipText: "Requires one column for X values or categories (labels around the perimeter), subsequently one column for each series' Y values (plotted from center and out)."
            }
        }
    },
    Choropleet: {
        title: "template.choropleth.title",
        templates: {
            landbouwgebiedenMap: {
                constr: "Map",
                title: "template.maps.subtype.agricultural",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_landbouwgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            coropMap: {
                constr: "Map",
                title: "template.maps.subtype.corop",
                urlImg: "./images/map-corop-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_coropgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            coropplusMap: {
                constr: "Map",
                title: "template.maps.subtype.coropplus",
                urlImg: "./images/map-corop-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_coropplusgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            wijkMap: {
                constr: "Map",
                title: "template.maps.subtype.district",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://geodata.nationaalgeoregister.nl/wijkenbuurten[year]/wfs?service=wfs&version=2.0.0&request=GetFeature&typeName=cbs_wijken_[year]&propertyName=wijkenbuurten[year]:wijkcode,wijkenbuurten[year]:wijknaam,wijkenbuurten[year]:geom&filter=%3CFilter%3E%3CAnd%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:gemeentecode%3C/PropertyName%3E%3CLiteral%3E[gemeentecode]%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:water%3C/PropertyName%3E%3CLiteral%3ENEE%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3C/And%3E%3C/Filter%3E&outputFormat=json&srsName=epsg:3857", .5, {
                    code: "wijkcode",
                    name: "wijknaam"
                }, "district")
            },
            healthserviceMap: {
                constr: "Map",
                title: "template.maps.subtype.healthcare",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_ggdregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            arbeidsRegioMap: {
                constr: "Map",
                title: "template.maps.subtype.laborRegion",
                urlImg: "./images/map-laborregion-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_arbeidsmarktregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            gemeenteMap: {
                constr: "Map",
                title: "template.maps.subtype.municipality",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_gemeente_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            buurtenMap: {
                constr: "Map",
                title: "template.maps.subtype.neighborhood",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://geodata.nationaalgeoregister.nl/wijkenbuurten[year]/wfs?service=wfs&version=2.0.0&request=GetFeature&typeName=cbs_buurten_[year]&propertyName=wijkenbuurten[year]:buurtcode,wijkenbuurten[year]:buurtnaam,wijkenbuurten[year]:geom&filter=%3CFilter%3E%3CAnd%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:gemeentecode%3C/PropertyName%3E%3CLiteral%3E[gemeentecode]%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:water%3C/PropertyName%3E%3CLiteral%3ENEE%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3C/And%3E%3C/Filter%3E&outputFormat=json&srsName=epsg:3857", .5, {
                    code: "buurtcode",
                    name: "buurtnaam"
                }, "neighborhood")
            },
            provincieMap: {
                constr: "Map",
                title: "template.maps.subtype.province",
                urlImg: "./images/map-province-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_provincie_[year].p1.geo.json", 1, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            veiligheidsRegioMap: {
                constr: "Map",
                title: "template.maps.subtype.securityRegion",
                urlImg: "./images/map-safetyregion-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_veiligheidsregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            toeristenMap: {
                constr: "Map",
                title: "template.maps.subtype.tourist",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_toeristengebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            waterMap: {
                constr: "Map",
                title: "template.maps.subtype.water",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapConfig("https://cdn.cbs.nl/maps/waterschappen_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            },
            jeugdzorgMap: {
                constr: "Map",
                title: "template.maps.subtype.youthcare",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapConfig("https://cdn.cbs.nl/maps/cbs_jeugdzorgregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                })
            }
        }
    },
    BubbleChart: {
        title: "template.bubbleChart.title",
        templates: {
            landbouwgebiedenMap: {
                constr: "Map",
                title: "template.maps.subtype.agricultural",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_landbouwgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            coropMap: {
                constr: "Map",
                title: "template.maps.subtype.corop",
                urlImg: "./images/map-corop-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_coropgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            coropplusMap: {
                constr: "Map",
                title: "template.maps.subtype.coropplus",
                urlImg: "./images/map-corop-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_coropplusgebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            wijkMap: {
                constr: "Map",
                title: "template.maps.subtype.district",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://geodata.nationaalgeoregister.nl/wijkenbuurten[year]/wfs?service=wfs&version=2.0.0&request=GetFeature&typeName=cbs_wijken_[year]&propertyName=wijkenbuurten[year]:wijkcode,wijkenbuurten[year]:wijknaam,wijkenbuurten[year]:geom&filter=%3CFilter%3E%3CAnd%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:gemeentecode%3C/PropertyName%3E%3CLiteral%3E[gemeentecode]%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:water%3C/PropertyName%3E%3CLiteral%3ENEE%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3C/And%3E%3C/Filter%3E&outputFormat=json&srsName=epsg:3857", .5, {
                    code: "wijkcode",
                    name: "wijknaam"
                }, "bubbleMapStyle", "district")
            },
            healthserviceMap: {
                constr: "Map",
                title: "template.maps.subtype.healthcare",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_ggdregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            arbeidsRegioMap: {
                constr: "Map",
                title: "template.maps.subtype.laborRegion",
                urlImg: "./images/map-laborregion-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_arbeidsmarktregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            gemeenteMap: {
                constr: "Map",
                title: "template.maps.subtype.municipality",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_gemeente_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            buurtenMap: {
                constr: "Map",
                title: "template.maps.subtype.neighborhood",
                urlImg: "./images/map-municipalities-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://geodata.nationaalgeoregister.nl/wijkenbuurten[year]/wfs?service=wfs&version=2.0.0&request=GetFeature&typeName=cbs_buurten_[year]&propertyName=wijkenbuurten[year]:buurtcode,wijkenbuurten[year]:buurtnaam,wijkenbuurten[year]:geom&filter=%3CFilter%3E%3CAnd%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:gemeentecode%3C/PropertyName%3E%3CLiteral%3E[gemeentecode]%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3Ewijkenbuurten[year]:water%3C/PropertyName%3E%3CLiteral%3ENEE%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3C/And%3E%3C/Filter%3E&outputFormat=json&srsName=epsg:3857", .5, {
                    code: "buurtcode",
                    name: "buurtnaam"
                }, "bubbleMapStyle", "neighborhood")
            },
            provincieMap: {
                constr: "Map",
                title: "template.maps.subtype.province",
                urlImg: "./images/map-province-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_provincie_[year].p1.geo.json", 1, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyleLessThen20Regions")
            },
            veiligheidsRegioMap: {
                constr: "Map",
                title: "template.maps.subtype.securityRegion",
                urlImg: "./images/map-safetyregion-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_veiligheidsregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            toeristenMap: {
                constr: "Map",
                title: "template.maps.subtype.tourist",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_toeristengebied_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            waterMap: {
                constr: "Map",
                title: "template.maps.subtype.water",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for region values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/waterschappen_[year].geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            },
            jeugdzorgMap: {
                constr: "Map",
                title: "template.maps.subtype.youthcare",
                urlImg: "./images/map-netherlands-minified.svg",
                tooltipText: "Requires one column for X values, and one column each for low, lower quartile, median, upper quartile and high values.",
                config: mapBubbleConfig("https://cdn.cbs.nl/maps/cbs_jeugdzorgregio_[year].p1.geo.json", .5, {
                    code: "statcode",
                    name: "statnaam"
                }, "bubbleMapStyle")
            }
        }
    }
},
"undefined" != typeof module && (module.exports = highed.meta.chartCBSTemplates),
highed.CBSChartCustomizer = function(e, t) {
    function i(e, t) {
        var i, o;
        C.resize(e, t),
        i = C.barSize(),
        B.resize(e, t - i.h),
        A.resize(e, t - i.h - 10),
        o = highed.dom.size(B.container),
        highed.dom.style(S, {
            minHeight: o.h + "px"
        })
    }
    function o(e) {
        var t = null;
        j.forEach(function(i) {
            var o = i.listItem
              , n = e && i.enabledFor && i.enabledFor.indexOf(e) < 0
              , a = !e && i.enabledFor && 1 == i.enabledFor.length;
            n || a ? (o.node.style.display = "none",
            o.selected && t.select()) : (o.node.style.display = "block",
            t || (t = o))
        })
    }
    function n(e, t) {
        O = t || {},
        P = t || O,
        P.chart && (E = P.chart.polar ? "polar" : P.chart.type),
        o(E),
        m(),
        B.reselect(),
        F.reselect()
    }
    function a(e, t, i) {
        var o = B.selected()
          , n = o.id
          , a = highed.meta.cbsoptionsExtended.options[n].subs;
        return !!o && (S.innerHTML = "",
        a.forEach(function(o) {
            l(o, !1, !1, e, t, i)
        }),
        void (R = !1))
    }
    function r(e) {
        var t = !0;
        return Object.keys(G.availableSettings || {}).length > 0 ? highed.isArr(e) ? e.forEach(function(e) {
            r(e) || (t = !1)
        }) : highed.isArr(e.options) ? e.options.forEach(function(e) {
            r(e) || (t = !1)
        }) : G.availableSettings[e.id] || (t = !1) : E && e.enableForChartTypes && e.enableForChartTypes.indexOf(E) < 0 && (t = !1),
        t
    }
    function l(e, t, i, o, n, s) {
        var h, m, b, f, v = !0;
        i = i || O;
        var y = 0;
        if (highed.isArr(e.options)) {
            if (v = r(e),
            !v)
                return 0;
            if (t = highed.dom.cr("table", "highed-customizer-table"),
            b = highed.dom.cr("div", "highed-customize-group"),
            f = highed.dom.cr("div", "highed-customize-master-dropdown"),
            e.filteredBy && (s = highed.getAttr(i, e.filteredBy, o),
            i.chart.polar && "line" === s && (s = "polar")),
            e.controlledBy) {
                if (h = highed.DropDown(),
                highed.dom.style(f, {
                    display: "block"
                }),
                highed.isStr(e.controlledBy.options)) {
                    if (m = highed.getAttr(i, e.controlledBy.options, o),
                    e.controlledBy.filteredBy) {
                        var x = [];
                        m.forEach(function(t, i) {
                            (void 0 === t[e.controlledBy.filteredBy] || void 0 !== t[e.controlledBy.filteredBy] && t[e.controlledBy.filteredBy]) && x.push(highed.merge(t, {
                                orgIndex: i
                            }))
                        }),
                        m = x
                    }
                    if (!highed.isArr(m))
                        return 0;
                    if (0 === m.length)
                        return highed.dom.ap(S, highed.dom.cr("i", "", "No data to display..")),
                        0;
                    h.addItems(m.map(function(t) {
                        return e.controlledBy.optionsTitle ? t[e.controlledBy.optionsTitle] : t
                    })),
                    h.on("Change", function(n) {
                        o = n.index(),
                        e.controlledBy.filteredBy && (o = m[n.index()].orgIndex),
                        t.innerHTML = "",
                        e.options.forEach(function(n) {
                            e.filteredBy && (s = highed.getAttr(i, e.filteredBy, o)),
                            y += l(n, t, i, o, e.filteredBy, s)
                        })
                    }),
                    highed.dom.ap(f, h.container),
                    o = o || 0
                }
                h.selectByIndex(o || 0)
            }
            e.controlledBy || e.options.forEach(function(n) {
                y += l(n, t, i, o, e.filteredBy, s)
            }),
            y > 0 && highed.dom.ap(S, highed.dom.ap(b, highed.dom.cr("div", "highed-customizer-table-heading", highed.L(e.text)), f, t))
        } else if ("undefined" != typeof e.id) {
            if (e.subType && e.subType.length && s && !highed.arrToObj(e.subType)[s])
                return 0;
            if (Object.keys(G.availableSettings || {}).length > 0 && !G.availableSettings[e.id])
                return 0;
            "undefined" != typeof e.dataIndex && (o = e.dataIndex),
            highed.dom.ap(t, highed.InspectorField(e.values ? "options" : e.dataType, highed.isNull(highed.getAttr(i, e.id, o)) ? s && e.subTypeDefaults && e.subTypeDefaults[s] ? e.subTypeDefaults[s] : e.defaults : highed.getAttr(i, e.id, o), {
                title: highed.L("option.text." + e.pid),
                tooltip: highed.L("option.tooltip." + e.pid),
                values: e.values,
                custom: e.custom,
                defaults: e.defaults,
                maxLength: e.maxLength,
                attributes: e.attributes || [],
                chartOptions: i
            }, function(t, i) {
                var r = i || e.id;
                if ("cultureSelection" === r)
                    d(e, t);
                else if ("colorSelection" === r)
                    c(e, t);
                else if ("title--color" === r)
                    p(e, t);
                else if ("mapColorSelection" === r)
                    u(e, t);
                else if ("legendLayoutSelection" === r)
                    g(e, t, o);
                else if ("xAxis-labels--hideGrouped" === r)
                    M.emit("PropertyChange", "xAxis-labels--hideGrouped", t, o);
                else if ("sources" === r) {
                    var l = t
                      , s = highed.getLocalizedStr("sourcesPrefix") + " " + l;
                    M.emit("PropertyChange", "sources--text", s, "undefined")
                } else
                    "series--type_l" === r ? (M.emit("PropertyChange", "series--yAxis", 0, o),
                    M.emit("PropertyChange", "series--type", t, o)) : "series--type_r" === r ? (M.emit("PropertyChange", "series--yAxis", 1, o),
                    M.emit("PropertyChange", "series--type", t, o)) : (M.emit("PropertyChange", r, t, o),
                    r === n && a(o, n, t));
                e.reloadOptionsOnChange && B.reselect()
            }, !1, e.id))
        }
        return 1
    }
    function s() {
        d(null, highed.getLocalizedStr("option.culture.dutch"))
    }
    function d(e, t) {
        var i = function(e) {
            return [{
                id: "lang--downloadJPEG",
                value: highed.getLocalizedStrFromLang("downloadJPEG", e),
                index: "undefined"
            }, {
                id: "lang--downloadPDF",
                value: highed.getLocalizedStrFromLang("downloadPDF", e),
                index: "undefined"
            }, {
                id: "lang--downloadPNG",
                value: highed.getLocalizedStrFromLang("downloadPNG", e),
                index: "undefined"
            }, {
                id: "lang--downloadSVG",
                value: highed.getLocalizedStrFromLang("downloadSVG", e),
                index: "undefined"
            }, {
                id: "lang--drillUpText",
                value: highed.getLocalizedStrFromLang("drillUpText", e),
                index: "undefined"
            }, {
                id: "lang--loading",
                value: highed.getLocalizedStrFromLang("loading", e),
                index: "undefined"
            }, {
                id: "lang--noData",
                value: highed.getLocalizedStrFromLang("noData", e),
                index: "undefined"
            }, {
                id: "lang--printChart",
                value: highed.getLocalizedStrFromLang("printChart", e),
                index: "undefined"
            }, {
                id: "lang--resetZoom",
                value: highed.getLocalizedStrFromLang("resetZoom", e),
                index: "undefined"
            }, {
                id: "lang--resetZoomTitle",
                value: highed.getLocalizedStrFromLang("resetZoomTitle", e),
                index: "undefined"
            }, {
                id: "lang--legend--less",
                value: highed.getLocalizedStrFromLang("maps.legend.less", e),
                index: "undefined"
            }, {
                id: "lang--legend--more",
                value: highed.getLocalizedStrFromLang("maps.legend.more", e),
                index: "undefined"
            }, {
                id: "lang--legend--to",
                value: highed.getLocalizedStrFromLang("maps.legend.to", e),
                index: "undefined"
            }, {
                id: "lang--legend--noData",
                value: highed.getLocalizedStrFromLang("maps.legend.noData", e),
                index: "undefined"
            }, {
                id: "lang--tooltip--nullDataMessage",
                value: highed.getLocalizedStrFromLang("maps.tooltip.nullDataMessage", e),
                index: "undefined"
            }]
        };
        t = t || highed.getLocalizedStr(e.defaults);
        var o = "nl";
        t === highed.getLocalizedStr("option.culture.dutch") ? o = "nl" : t === highed.getLocalizedStr("option.culture.english") && (o = "en");
        var n = i(o);
        "nl" === o ? (n.push({
            id: "lang--decimalPoint",
            value: ",",
            index: "undefined"
        }),
        n.push({
            id: "lang--thousandsSep",
            value: " ",
            index: "undefined"
        })) : (n.push({
            id: "lang--decimalPoint",
            value: ".",
            index: "undefined"
        }),
        n.push({
            id: "lang--thousandsSep",
            value: ",",
            index: "undefined"
        })),
        n.push({
            id: "sources--prefix",
            value: highed.getLocalizedStrFromLang("sourcesPrefix", o),
            index: "undefined"
        }),
        n.push({
            id: "cultureSelection",
            value: t,
            index: "undefined"
        }),
        n.push({
            id: "selectedCultureId",
            value: o,
            index: "undefined"
        }),
        M.emit("PropertiesChange", n),
        highed.isNull(e) || M.emit("InitChart")
    }
    function h() {
        var e = P.chart ? P.chart.type : void 0;
        highed.isNull(e) || "map" === e ? u(null, highed.getLocalizedStr("option.color.palette.blue")) : c(null, "Cold")
    }
    function c(e, t) {
        t = t || highed.getLocalizedStr("option.color.palette.cold");
        var i = t == highed.getLocalizedStr("option.color.palette.warm") ? highed.meta.CBScolors.Warm : highed.meta.CBScolors.Cold
          , o = [{
            id: highed.isNull(e) ? "colorSelection" : e.id,
            value: t,
            index: "undefined"
        }, {
            id: "colors",
            value: i,
            index: "undefined"
        }];
        M.emit("PropertiesChange", o),
        highed.isNull(e) || M.emit("InitChart")
    }
    function p(e, t) {
        t = t || highed.getLocalizedStr("option.title.color.black");
        var i = t == highed.getLocalizedStr("option.title.color.black") ? highed.meta.CBSTitlecolors.Black : highed.meta.CBSTitlecolors.Blue
          , o = [{
            id: highed.isNull(e) ? "title--color" : e.id,
            value: t,
            index: "undefined"
        }, {
            id: "title--style--color",
            value: i,
            index: "undefined"
        }];
        M.emit("PropertiesChange", o)
    }
    function u(e, t) {
        t = t || highed.getLocalizedStr("option.color.palette.blue");
        var i = [];
        switch (t) {
        case highed.getLocalizedStr("option.color.palette.purple"):
            i = highed.meta.CBSMapcolors.Purple;
            break;
        case highed.getLocalizedStr("option.color.palette.green"):
            i = highed.meta.CBSMapcolors.Green;
            break;
        case highed.getLocalizedStr("option.color.palette.red"):
            i = highed.meta.CBSMapcolors.Red;
            break;
        default:
            i = highed.meta.CBSMapcolors.Blue
        }
        var o = [{
            id: highed.isNull(e) ? "mapColorSelection" : e.id,
            value: t,
            index: "undefined"
        }, {
            id: "colors",
            value: i,
            index: "undefined"
        }];
        M.emit("PropertiesChange", o),
        highed.isNull(e) || M.emit("InitChart")
    }
    function g(e, t, i) {
        var o = "horizontal";
        switch (t) {
        case highed.getLocalizedStr("option.legend.layout.vertical"):
            o = "vertical";
            break;
        default:
            o = "horizontal"
        }
        var n = [{
            id: e.id,
            value: t,
            index: i
        }, {
            id: "legend--layout",
            value: o,
            index: i
        }];
        M.emit("PropertiesChange", n)
    }
    function m() {
        G.noAdvanced || highed.isNull(highed.meta.optionsAdvanced) ? w.hide() : F.build(highed.meta.optionsAdvanced, P)
    }
    function b() {
        j = [],
        Object.keys(highed.meta.cbsoptionsExtended.options).forEach(function(e) {
            var t = highed.meta.cbsoptionsExtended.options[e];
            if (r(t)) {
                var i = B.addItem({
                    id: e,
                    title: highed.L(e)
                });
                j.push({
                    listItem: i,
                    enabledFor: t.enableForChartTypes
                })
            }
        }),
        m()
    }
    function f(e) {
        if (e) {
            highed.dom.pos(e);
            highed.dom.style(e, {
                border: "2px solid #33aa33"
            }),
            e.focus(),
            e.scrollIntoView(!0),
            window.setTimeout(function() {
                highed.dom.style(e, {
                    border: ""
                })
            }, 2e3)
        }
    }
    function v(e) {
        if (e.indexOf("-") >= 0) {
            var t = L.left.querySelector("#" + e.substr(0, e.indexOf("-")));
            f(S.querySelector("#" + e)),
            f(L.right.querySelector("#" + e)),
            t && t.scrollIntoView({
                block: "end"
            })
        }
    }
    function y(e, t, i) {
        B.select(e.tab),
        F.expandTo(e.id),
        v(e.id)
    }
    function x(e, t, i, o) {
        var n = highed.dom.cr("table", "highed-customizer-table");
        T.innerHTML = "",
        Object.keys(e.entries).forEach(function(a) {
            var r = e.entries[a];
            o && r.subType && !r.subType[o] || r.shortName.length && highed.dom.ap(n, highed.InspectorField(r.values ? "options" : r.dataType || "string", highed.getAttr(P, r.id, i) || r.defaults, {
                title: highed.uncamelize(r.shortName),
                tooltip: r.description,
                values: r.values,
                defaults: r.defaults,
                maxLength: r.maxLength,
                custom: {},
                attributes: r.attributes || []
            }, function(o) {
                M.emit("PropertyChange", r.id, o, i),
                "series--type" === r.id && x(e, t, i, o)
            }, !1, r.id))
        }),
        highed.dom.ap(T, highed.dom.ap(highed.dom.cr("div", "highed-customize-group"), highed.dom.cr("div", "highed-customizer-table-heading", t), n))
    }
    var G = highed.merge({
        noAdvanced: !1,
        availableSettings: []
    }, t)
      , M = highed.events()
      , C = highed.TabControl(e, !0)
      , k = C.createTab({
        title: highed.getLocalizedStr("customizeSimple")
    })
      , w = C.createTab({
        title: highed.getLocalizedStr("customizeAdvanced")
    })
      , A = highed.HSplitter(k.body, {
        leftWidth: 30,
        responsive: !0
    })
      , B = highed.List(A.left, !0)
      , S = A.right
      , L = highed.HSplitter(w.body, {
        leftWidth: 30
    })
      , T = L.right
      , F = highed.Tree(L.left)
      , O = {}
      , P = {}
      , R = !1
      , j = []
      , E = void 0;
    return highed.onPhone() && (G.noAdvanced = !0),
    S.className += " highed-customizer-body",
    G.availableSettings = highed.arrToObj(G.availableSettings),
    B.on("Select", function(e) {
        var t = highed.meta.cbsoptionsExtended.options[e].subs;
        S.innerHTML = "",
        t.forEach(function(e) {
            l(e)
        }),
        R = !1
    }),
    F.on("Select", function(e, t, i, o) {
        "series" === e.id && (o = highed.getAttr(P, "series--type", i)),
        x(e, t, i, o)
    }),
    F.on("DataUpdate", function(e, t) {
        M.emit("PropertyChange", e, t)
    }),
    F.on("Dirty", function() {
        n(O, P)
    }),
    C.on("Focus", function() {
        n(O, P)
    }),
    b(),
    {
        on: M.on,
        resize: i,
        init: n,
        focus: y,
        reselect: B.reselect,
        highlightField: v,
        resetColors: h,
        setDefaultCultureSettings: s
    }
}
,
highed.ChartTemplateSelector = function(e) {
    function t(e, t) {
        d.innerHTML = "",
        Object.keys(e).forEach(function(i) {
            var o = e[i]
              , a = highed.dom.cr("div", "highed-chart-template-preview")
              , r = highed.dom.cr("div", "highed-chart-template-title", o.title);
            "StockChart" === o.constr && "undefined" == typeof Highcharts.StockChart || (h && h.id === t + i + o.title && (a.className = "highed-chart-template-preview highed-chart-template-preview-selected",
            h.node = a),
            highed.dom.style(a, {
                "background-image": "url(" + o.urlImg + ")"
            }),
            highed.dom.showOnHover(a, r),
            highed.dom.on(a, "mouseenter", function() {
                o.tooltipText && (l.innerHTML = o.tooltipText,
                highed.dom.style(l, {
                    display: "block"
                }),
                n.emit("Hover", o))
            }),
            highed.dom.on(a, "mouseleave", function() {
                l.innerHTML = "",
                highed.dom.style(l, {
                    display: "none"
                })
            }),
            highed.dom.on(a, "click", function() {
                h && (h.node.className = "highed-chart-template-preview"),
                a.className = "highed-chart-template-preview highed-chart-template-preview-selected",
                h = {
                    id: t + i + o.title,
                    node: a
                },
                n.emit("Select", e[i])
            }),
            highed.dom.ap(d, highed.dom.ap(a, r)))
        })
    }
    function i(e, t) {
        var i;
        r.resize(e, t),
        s.resize(),
        i = highed.dom.size(s.container),
        highed.dom.style(d, {
            minHeight: i.h + "px"
        })
    }
    function o() {
        s.addItems(Object.keys(highed.meta.chartTemplates).map(function(e) {
            return {
                id: e,
                title: highed.meta.chartTemplates[e].title
            }
        })),
        s.selectFirst()
    }
    var n = highed.events()
      , a = highed.dom.cr("div", "highed-chart-template-container")
      , r = highed.HSplitter(a, {
        leftWidth: 30
    })
      , l = highed.dom.cr("div", "highed-tooltip")
      , s = highed.List(r.left)
      , d = r.right
      , h = !1;
    return highed.dom.style(l, {
        display: "none"
    }),
    highed.dom.ap(e, a),
    s.on("Select", function(e) {
        t(highed.meta.chartTemplates[e].templates, e)
    }),
    o(),
    highed.dom.ap(r.left, l),
    {
        on: n.on,
        resize: i,
        rebuild: o
    }
}
,
highed.ChartCBSTemplateSelector = function(e) {
    function t(e, t) {
        c.innerHTML = "",
        p = [],
        Object.keys(e).forEach(function(o) {
            var n = e[o]
              , a = highed.dom.cr("div", "highed-chart-template-preview")
              , l = highed.dom.cr("div", "highed-chart-template-title", highed.L(n.title));
            if ("StockChart" !== n.constr || "undefined" != typeof Highcharts.StockChart) {
                u && u.id === t + o + n.title && (a.className = "highed-chart-template-preview highed-chart-template-preview-selected",
                u.node = a),
                n.urlImg.indexOf("map") !== -1 ? highed.dom.style(a, {
                    "background-image": "url(" + n.urlImg + ")",
                    height: "25px"
                }) : highed.dom.style(a, {
                    "background-image": "url(" + n.urlImg + ")"
                }),
                highed.dom.on(a, "mouseenter", function() {
                    n.tooltipText && (d.innerHTML = n.tooltipText,
                    highed.dom.style(d, {
                        display: "inline-block"
                    }),
                    r.emit("Hover", n))
                }),
                highed.dom.on(a, "mouseleave", function() {
                    d.innerHTML = "",
                    highed.dom.style(d, {
                        display: "none"
                    })
                }),
                highed.dom.on(a, "click", function() {
                    var e = t + o + n.title;
                    i(a, t, e, n, !0)
                });
                var s = t + o + n.title;
                p.push({
                    masterID: t,
                    id: s,
                    template: n,
                    node: a,
                    titleBar: l
                }),
                highed.dom.ap(c, highed.dom.ap(a, l))
            }
        })
    }
    function i(e, t, i, o, n) {
        u && (u.node.className = "highed-chart-template-preview"),
        e.className = "highed-chart-template-preview highed-chart-template-preview-selected",
        u = {
            masterID: t,
            id: i,
            node: e,
            isManualSelectedTemplate: n
        },
        r.emit("Select", o, u)
    }
    function o(e, t) {
        var i;
        s.resize(e, t),
        h.resize(),
        i = highed.dom.size(h.container),
        highed.dom.style(c, {
            minHeight: i.h + "px"
        })
    }
    function n() {
        h.addItems(Object.keys(highed.meta.chartCBSTemplates).map(function(e) {
            return {
                id: e,
                title: highed.getLocalizedStr(highed.meta.chartCBSTemplates[e].title)
            }
        })),
        h.selectFirst()
    }
    function a(e, t) {
        h.selectById(e);
        var o = p.filter(function(e) {
            return e.id === t
        });
        1 === o.length && i(o[0].node, e, o[0].id, o[0].template, !1)
    }
    var r = highed.events()
      , l = highed.dom.cr("div", "highed-chart-template-container")
      , s = highed.HSplitter(l, {
        leftWidth: 30
    })
      , d = highed.dom.cr("div", "highed-tooltip")
      , h = highed.List(s.left)
      , c = s.right
      , p = []
      , u = !1;
    return highed.dom.style(d, {
        display: "none"
    }),
    highed.dom.ap(e, l),
    h.on("Select", function(e) {
        t(highed.meta.chartCBSTemplates[e].templates, e)
    }),
    n(),
    highed.dom.ap(s.left, d),
    {
        on: r.on,
        resize: o,
        rebuild: n,
        selectTemplate: a
    }
}
,
highed.DefaultContextMenu = function(e) {
    var t, i = highed.events(), o = highed.ContextMenu([{
        title: highed.getLocalizedStr("newChart"),
        id: "btn-newChart",
        icon: "file-o",
        click: function() {
            window.confirm(highed.getLocalizedStr("confirmNewChart")) && i.emit("NewChart")
        }
    }, "-", {
        title: highed.getLocalizedStr("saveProject"),
        id: "btn-save-project",
        icon: "floppy-o",
        click: function() {
            var t = cbs.formatter.fileName(e.options.chart.title.text || "chart");
            highed.download(t + ".json", JSON.stringify(e.toProject()))
        }
    }, {
        title: highed.getLocalizedStr("loadProject"),
        id: "btn-load-project",
        icon: "folder-open-o",
        click: function() {
            highed.readLocalFile({
                type: "text",
                accept: ".json",
                success: function(t) {
                    try {
                        t = JSON.parse(t.data)
                    } catch (e) {
                        return highed.snackBar("Error loading JSON: " + e)
                    }
                    e.loadProject(t)
                }
            })
        }
    }, "-", {
        title: highed.getLocalizedStr("exportPNG"),
        id: "btn-export-png",
        icon: "file-image-o",
        click: function() {
            e.data.export({
                filename: e.options.chart.title.text
            }, {})
        }
    }, {
        title: highed.getLocalizedStr("exportJPEG"),
        id: "btn-export-jpeg",
        icon: "file-image-o",
        click: function() {
            e.data.export({
                type: "image/jpeg",
                filename: e.options.chart.title.text
            }, {})
        }
    }, "-", {
        title: highed.getLocalizedStr("exportPNGPrint"),
        id: "btn-export-pngForPrint",
        icon: "file-image-o",
        click: function() {
            e.data.export(cbs.print.exportOptions("image/png", e.options.chart), cbs.print.exportChartOptions(e.options.chart))
        }
    }, {
        title: highed.getLocalizedStr("exportJPEGPrint"),
        id: "btn-export-jpegForPrint",
        icon: "file-image-o",
        click: function() {
            e.data.export(cbs.print.exportOptions("image/jpeg", e.options.chart), cbs.print.exportChartOptions(e.options.chart))
        }
    }, {
        title: highed.getLocalizedStr("exportSVGPrint"),
        id: "btn-export-svgForPrint",
        icon: "file-image-o",
        click: function() {
            e.data.export(cbs.print.exportOptions("image/svg+xml", e.options.chart), cbs.print.exportChartOptions(e.options.chart))
        }
    }, "-", {
        title: highed.getLocalizedStr("help"),
        id: "btn-help",
        icon: "question-circle",
        click: function() {
            t || (t = highed.OverlayModal(!1, {
                minWidth: 250,
                minHeight: 200
            }),
            t.body.innerHTML = '<div class="help-title"><span class="fa fa-question-circle"></span>' + highed.getLocalizedStr("help.title") + '</div><div class="help-text">' + highed.getLocalizedStr("help.text") + "</div>"),
            t.show()
        }
    }]);
    return {
        on: i.on,
        show: o.show
    }
}
,
highed.ChartCustomizer = function(e, t) {
    function i(e, t) {
        var i, o;
        m.resize(e, t),
        i = m.barSize(),
        y.resize(e, t - i.h),
        v.resize(e, t - i.h - 10),
        o = highed.dom.size(y.container),
        highed.dom.style(x, {
            minHeight: o.h + "px"
        })
    }
    function o(e, t) {
        k = t || {},
        w = t || k,
        y.reselect(),
        l(),
        C.reselect()
    }
    function n(e, t, i) {
        var o = y.selected()
          , n = o.id
          , a = highed.meta.optionsExtended.options[n];
        return !!o && (x.innerHTML = "",
        a.forEach(function(o) {
            r(o, !1, !1, e, t, i)
        }),
        void (A = !1))
    }
    function a(e) {
        var t = !1;
        return !(Object.keys(u.availableSettings || {}).length > 0) || (highed.isArr(e) ? e.forEach(function(e) {
            a(e) && (t = !0)
        }) : highed.isArr(e.options) ? e.options.forEach(function(e) {
            a(e) && (t = !0)
        }) : u.availableSettings[e.id] && (t = !0),
        t)
    }
    function r(e, t, i, o, l, s) {
        var d, h, c, p, m = !0;
        if (i = i || k,
        highed.isArr(e.options)) {
            if (t = highed.dom.cr("table", "highed-customizer-table"),
            m = a(e),
            !m)
                return;
            if (c = highed.dom.cr("div", "highed-customize-group"),
            p = highed.dom.cr("div", "highed-customize-master-dropdown"),
            highed.dom.ap(x, highed.dom.ap(c, highed.dom.cr("div", "highed-customizer-table-heading", highed.L(e.text)), p, t)),
            e.filteredBy && (s = highed.getAttr(i, e.filteredBy, o)),
            e.controlledBy && (d = highed.DropDown(),
            highed.dom.style(p, {
                display: "block"
            }),
            highed.isStr(e.controlledBy.options))) {
                if (h = highed.getAttr(i, e.controlledBy.options, o),
                !highed.isArr(h))
                    return;
                if (0 === h.length)
                    return void highed.dom.ap(x, highed.dom.cr("i", "", "No data to display.."));
                d.addItems(h.map(function(t) {
                    return e.controlledBy.optionsTitle ? t[e.controlledBy.optionsTitle] : t
                })),
                d.selectByIndex(o || 0),
                d.on("Change", function(n) {
                    o = n.index(),
                    t.innerHTML = "",
                    e.options.forEach(function(n) {
                        e.filteredBy && (s = highed.getAttr(i, e.filteredBy, o)),
                        r(n, t, i, o, e.filteredBy, s)
                    })
                }),
                highed.dom.ap(p, d.container),
                o = o || 0
            }
            e.options.forEach(function(n) {
                r(n, t, i, o, e.filteredBy, s)
            })
        } else if ("undefined" != typeof e.id) {
            if (s && e.subType && e.subType.length && !highed.arrToObj(e.subType)[s])
                return;
            if (Object.keys(u.availableSettings || {}).length > 0 && !u.availableSettings[e.id])
                return;
            "undefined" != typeof e.dataIndex && (o = e.dataIndex),
            highed.dom.ap(t, highed.InspectorField(e.values ? "options" : e.dataType, highed.getAttr(i, e.id, o) || (s && e.subTypeDefaults[s] ? e.subTypeDefaults[s] : e.defaults), {
                title: highed.L("option.text." + e.pid),
                tooltip: highed.L("option.tooltip." + e.pid),
                values: e.values,
                custom: e.custom,
                defaults: e.defaults,
                attributes: e.attributes || []
            }, function(t) {
                g.emit("PropertyChange", e.id, t, o),
                e.id === l && n(o, l, t)
            }, !1, e.id))
        }
    }
    function l() {
        u.noAdvanced || highed.isNull(highed.meta.optionsAdvanced) ? f.hide() : C.build(highed.meta.optionsAdvanced, w)
    }
    function s() {
        Object.keys(highed.meta.optionsExtended.options).forEach(function(e) {
            a(highed.meta.optionsExtended.options[e]) && y.addItem({
                id: e,
                title: highed.L(e)
            })
        }),
        l()
    }
    function d(e) {
        if (e) {
            highed.dom.pos(e);
            highed.dom.style(e, {
                border: "2px solid #33aa33"
            }),
            e.focus(),
            e.scrollIntoView(!0),
            window.setTimeout(function() {
                highed.dom.style(e, {
                    border: ""
                })
            }, 2e3)
        }
    }
    function h(e) {
        if (e.indexOf("-") >= 0) {
            var t = G.left.querySelector("#" + e.substr(0, e.indexOf("-")));
            d(x.querySelector("#" + e)),
            d(G.right.querySelector("#" + e)),
            t && t.scrollIntoView({
                block: "end"
            })
        }
    }
    function c(e, t, i) {
        y.select(e.tab),
        C.expandTo(e.id),
        h(e.id)
    }
    function p(e, t, i, o) {
        var n = highed.dom.cr("table", "highed-customizer-table");
        M.innerHTML = "",
        Object.keys(e.entries).forEach(function(a) {
            var r = e.entries[a];
            o && r.subType && !r.subType[o] || r.shortName.length && highed.dom.ap(n, highed.InspectorField(r.values ? "options" : r.dataType || "string", highed.getAttr(w, r.id, i) || r.defaults, {
                title: highed.uncamelize(r.shortName),
                tooltip: r.description,
                values: r.values,
                defaults: r.defaults,
                custom: {},
                attributes: r.attributes || []
            }, function(o) {
                g.emit("PropertyChange", r.id, o, i),
                "series--type" === r.id && p(e, t, i, o)
            }, !1, r.id))
        }),
        highed.dom.ap(M, highed.dom.ap(highed.dom.cr("div", "highed-customize-group"), highed.dom.cr("div", "highed-customizer-table-heading", t), n))
    }
    var u = highed.merge({
        noAdvanced: !1,
        availableSettings: []
    }, t)
      , g = highed.events()
      , m = highed.TabControl(e, !0)
      , b = m.createTab({
        title: highed.getLocalizedStr("customizeSimple")
    })
      , f = m.createTab({
        title: highed.getLocalizedStr("customizeAdvanced")
    })
      , v = highed.HSplitter(b.body, {
        leftWidth: 30,
        responsive: !0
    })
      , y = highed.List(v.left, !0)
      , x = v.right
      , G = highed.HSplitter(f.body, {
        leftWidth: 30
    })
      , M = G.right
      , C = highed.Tree(G.left)
      , k = {}
      , w = {}
      , A = !1;
    return highed.onPhone() && (u.noAdvanced = !0),
    x.className += " highed-customizer-body",
    u.availableSettings = highed.arrToObj(u.availableSettings),
    y.on("Select", function(e) {
        var t = highed.meta.optionsExtended.options[e];
        x.innerHTML = "",
        t.forEach(function(e) {
            r(e)
        }),
        A = !1
    }),
    C.on("Select", function(e, t, i, o) {
        "series" === e.id && (o = highed.getAttr(w, "series--type", i)),
        p(e, t, i, o)
    }),
    C.on("DataUpdate", function(e, t) {
        g.emit("PropertyChange", e, t)
    }),
    C.on("Dirty", function() {
        o(k, w)
    }),
    m.on("Focus", function() {
        o(k, w)
    }),
    s(),
    {
        on: g.on,
        resize: i,
        init: o,
        focus: c,
        reselect: y.reselect,
        highlightField: h
    }
}
,
highed.WizardBar = function(e, t, i) {
    function o(e, t) {
        e.number > 1 ? highed.dom.style(l, {
            opacity: 1,
            "pointer-events": "auto",
            visibility: "visible"
        }) : highed.dom.style(l, {
            opacity: 0,
            "pointer-events": "none",
            visibility: "hidden"
        }),
        e.number < t ? highed.dom.style(r, {
            opacity: 1,
            "pointer-events": "auto",
            visibility: "visible"
        }) : highed.dom.style(r, {
            opacity: 0,
            "pointer-events": "none",
            visibility: "hidden"
        })
    }
    var n = highed.Toolbar(e, {
        additionalCSS: ["highed-wizstepper-bar"]
    })
      , a = highed.WizardStepper(t, n.center)
      , r = highed.dom.cr("span", "highed-wizstepper-next-prev fa fa-arrow-right")
      , l = highed.dom.cr("span", "highed-wizstepper-next-prev fa fa-arrow-left");
    return a.on("Step", o),
    a.on("AddStep", o),
    highed.dom.on(r, "click", a.next),
    highed.dom.on(l, "click", a.previous),
    highed.dom.ap(n.right, r),
    highed.dom.ap(n.left, l),
    highed.dom.style(l, {
        opacity: 0,
        "pointer-events": "none"
    }),
    {
        container: n.container,
        on: a.on,
        next: a.next,
        previous: a.previous,
        addStep: a.addStep,
        selectFirst: a.selectFirst
    }
}
,
function() {
    var e = {};
    highed.plugins.import = {
        install: function(t, i) {
            highed.isNull(e[t]) ? (e[t] = highed.merge({
                title: !1,
                description: "",
                treatAs: "csv",
                fetchAs: "json",
                defaultURL: "",
                dependencies: [],
                options: {},
                filter: function() {}
            }, i),
            e[t].dependencies && highed.include(e[t].dependencies)) : highed.log(1, "tried to register an import plugin which already exists:", t)
        }
    },
    highed.DataImporter = function(t, i) {
        function o() {
            m.options.csv || f.hide(),
            m.options.json || v.hide(),
            0 !== Object.keys(m.plugins).length && m.options.plugins || y.hide(),
            m.options.samples || x.hide(),
            b.selectFirst()
        }
        function n() {
            Object.keys(e).forEach(function(t) {
                function i() {
                    var i = e[t]
                      , o = highed.dom.cr("input", "highed-imp-input-stretch")
                      , n = highed.dom.cr("div", "", "URL")
                      , a = highed.dom.cr("button", "highed-imp-button", "Import " + t + " from URL")
                      , l = highed.dom.cr("table", "highed-customizer-table")
                      , s = {};
                    o.value = i.defaultURL || "",
                    Object.keys(i.options || {}).forEach(function(e) {
                        s[e] = i.options[e].default,
                        highed.dom.ap(l, highed.InspectorField(i.options[e].type, i.options[e].default, {
                            title: i.options[e].label
                        }, function(t) {
                            s[e] = t
                        }, !0))
                    }),
                    i.suppressURL && highed.dom.style([o, n], {
                        display: "none"
                    }),
                    o.placeholder = "Enter URL",
                    highed.dom.on(a, "click", function() {
                        return highed.snackBar("Importing " + t + " data"),
                        highed.isFn(i.request) ? i.request(o.value, s, function(e, t) {
                            return e ? highed.snackBar("import error: " + e) : void g.emit("ImportChartSettings", t)
                        }) : void highed.ajax({
                            url: o.value,
                            type: "get",
                            dataType: i.fetchAs || "text",
                            success: function(e) {
                                i.filter(e, highed.merge({}, s), function(e, t) {
                                    return e ? highed.snackBar("import error: " + e) : void ("csv" === i.treatAs ? (f.focus(),
                                    G.value = t,
                                    r(t)) : h(t))
                                })
                            },
                            error: function(e) {
                                highed.snackBar("import error: " + e)
                            }
                        })
                    }),
                    O.right.innerHTML = "",
                    highed.dom.ap(O.right, highed.dom.ap(highed.dom.cr("div", "highed-plugin-details"), highed.dom.cr("div", "highed-customizer-table-heading", i.title || t), highed.dom.cr("div", "highed-imp-help", i.description), n, o, !!Object.keys(i.options || {}).length && l, highed.dom.cr("br"), a))
                }
                m.plugins[t] && P.addItem({
                    id: t,
                    title: e[t].title || t,
                    click: i
                })
            }),
            P.selectFirst()
        }
        function a() {
            x.innerHTML = "",
            highed.isNull(highed.meta.sampleData) || Object.keys(highed.meta.sampleData).forEach(function(e) {
                var t = highed.meta.sampleData[e].join("\n")
                  , i = highed.dom.cr("button", "highed-box-size highed-imp-button", e);
                i.id = "sample_" + e.replace(/\ |\(|\)/g, "_"),
                highed.dom.style(i, {
                    width: "99%"
                }),
                highed.dom.on(i, "click", function() {
                    r(t),
                    G.value = t,
                    f.focus()
                }),
                highed.dom.ap(x.body, i, highed.dom.cr("br"))
            })
        }
        function r(e) {
            g.emit("ImportCSV", {
                itemDelimiter: k.value,
                firstRowAsNames: B.checked,
                hasGroupedCategories: S.checked,
                dateFormat: w.value,
                csv: e || G.value,
                decimalPoint: A.value
            })
        }
        function l(e) {
            1 == e ? S.checked = !0 : S.checked = !1
        }
        function s(e) {
            G.value = e,
            r()
        }
        function d(e) {
            G.value = e
        }
        function h(e) {
            var t = e;
            if (highed.isStr(t))
                try {
                    t = JSON.parse(e)
                } catch (e) {
                    return highed.snackBar("Error parsing json: " + e),
                    !1
                }
            g.emit("ImportJSON", t),
            highed.snackBar("imported json")
        }
        function c(e, i) {
            var o, n = highed.dom.size(t);
            b.resize(e || n.w, i || n.h),
            o = b.barSize(),
            O.resize(e || n.w, (i || n.h) - o.h - 20),
            P.resize(e || n.w, (i || n.h) - o.h)
        }
        function p() {
            b.show()
        }
        function u() {
            b.hide()
        }
        var g = highed.events()
          , m = highed.merge({
            options: ["csv", "plugins", "samples"],
            plugins: ["CSV", "JSON", "Difi", "Socrata", "Google Spreadsheets"]
        }, i)
          , b = highed.TabControl(t, !1, !0)
          , f = b.createTab({
            title: "CSV"
        })
          , v = b.createTab({
            title: "JSON"
        })
          , y = b.createTab({
            title: "Plugins"
        })
          , x = b.createTab({
            title: "Sample Data",
            id: "sampleDataTab"
        })
          , G = highed.dom.cr("textarea", "highed-imp-pastearea", null, "dataImportTextArea")
          , M = highed.dom.cr("button", "highed-imp-button", "Import", "importCSV")
          , C = highed.dom.cr("button", "highed-imp-button", "Upload & Import File")
          , k = highed.dom.cr("input", "highed-imp-input")
          , w = highed.dom.cr("input", "highed-imp-input")
          , A = highed.dom.cr("input", "highed-imp-input")
          , B = highed.dom.cr("input", "highed-imp-input")
          , S = highed.dom.cr("input", "highed-imp-input", null, "groupedCategoryCheckbox")
          , L = highed.dom.cr("textarea", "highed-imp-pastearea")
          , T = highed.dom.cr("button", "highed-imp-button", "Import")
          , F = highed.dom.cr("button", "highed-imp-button", "Upload & Import File")
          , O = highed.HSplitter(y.body, {
            leftWidth: 30
        })
          , P = highed.List(O.left);
        return L.value = JSON.stringify({}, void 0, 2),
        highed.dom.style(x.body, {
            "overflow-x": "hidden",
            "overflow-y": "auto"
        }),
        m.options = highed.arrToObj(m.options),
        m.plugins = highed.arrToObj(m.plugins),
        Object.keys(m.plugins).forEach(function(t) {
            highed.isNull(e[t]) && delete m.plugins[t]
        }),
        highed.dom.ap(f.body, highed.dom.cr("div", "highed-imp-help", "Paste CSV into the below box, or upload a file. Click Import to import your data."), G, highed.dom.cr("span", "highed-imp-label", "Delimiter"), k, highed.dom.cr("br"), highed.dom.cr("span", "highed-imp-label", "Date Format"), w, highed.dom.cr("br"), highed.dom.cr("span", "highed-imp-label", "Decimal Point Notation"), A, highed.dom.cr("br"), highed.dom.cr("span", "highed-imp-label", "First Row Is Series Names"), B, highed.dom.cr("br"), highed.dom.cr("span", "highed-imp-label", "Second Column Contains Grouped Categories"), S, highed.dom.cr("br"), C, M),
        highed.dom.ap(v.body, highed.dom.cr("div", "highed-imp-help", 'Paste JSON into the below box, or upload a file. Click Import to import your data. <br/><b>The JSON is the data passed to the chart constructor, and may contain any of the valid <a href="http://api.highcharts.com/highcharts/" target="_blank">options</a>.</b>'), L, F, T),
        highed.dom.on(M, "click", function() {
            r()
        }),
        highed.dom.on(G, "keyup", function(e) {
            (13 === e.keyCode || (e.metaKey || e.ctrlKey) && "z" === e.key) && r(G.value)
        }),
        highed.dom.on(C, "click", function() {
            highed.readLocalFile({
                type: "text",
                accept: ".csv",
                success: function(e) {
                    G.value = e.data,
                    highed.snackBar("File uploaded"),
                    r()
                }
            })
        }),
        highed.dom.on(T, "click", function() {
            h(L.value)
        }),
        highed.dom.on(F, "click", function() {
            highed.readLocalFile({
                type: "text",
                accept: ".json",
                success: function(e) {
                    L.value = e.data,
                    h(e.data)
                }
            })
        }),
        a(),
        n(),
        o(),
        k.value = ";",
        B.type = "checkbox",
        A.value = ",",
        B.checked = !0,
        S.type = "checkbox",
        S.checked = !1,
        c(),
        {
            on: g.on,
            loadCSV: s,
            loadCSVFromProject: d,
            setGroupedCategoryCheckbox: l,
            resize: c,
            show: p,
            hide: u
        }
    }
}(),
function() {
    var e = {};
    highed.plugins.export = {
        install: function(t, i) {
            highed.isNull(e[t]) ? (e[t] = highed.merge({
                description: "",
                options: {},
                title: !1,
                downloadOutput: !1
            }, i),
            e[t].dependencies && highed.include(e[t].dependencies)) : highed.log(1, "tried to register an export plugin which already exists:", t)
        }
    },
    highed.Exporter = function(t, i) {
        function o() {
            c.options.html || u.hide(),
            c.options.json || g.hide(),
            c.options.svg || m.hide(),
            c.options.plugins || b.hide(),
            0 === Object.keys(c.plugins) && b.hide(),
            p.selectFirst()
        }
        function n() {
            A || (A = !0,
            Object.keys(e).forEach(function(t) {
                function i() {
                    function e() {
                        highed.isFn(o.export) && w && o.export.apply(S[t], [l, w, function(e, i, n) {
                            return e ? highed.snackBar("Export error: " + e) : (o.downloadOutput && highed.download(n, i),
                            void highed.snackBar((o.title || t) + " export complete"))
                        }
                        , r])
                    }
                    var i = highed.dom.cr("div", "highed-plugin-details")
                      , n = highed.dom.cr("button", "highed-imp-button", o.exportTitle || "Export")
                      , a = highed.dom.cr("table", "highed-customizer-table")
                      , r = highed.dom.cr("div")
                      , l = S[t].options;
                    Object.keys(o.options || {}).forEach(function(e) {
                        l[e] = o.options[e].default,
                        highed.dom.ap(a, highed.InspectorField(o.options[e].type, o.options[e].default, {
                            title: o.options[e].label
                        }, function(i) {
                            l[e] = i,
                            highed.isFn(o.show) && o.show.apply(S[t], [w])
                        }, !0))
                    }),
                    highed.dom.on(n, "click", e),
                    highed.dom.ap(f.right, i),
                    highed.dom.style(i, {
                        display: "none"
                    }),
                    highed.dom.ap(i, highed.dom.cr("div", "highed-customizer-table-heading", o.title || t), highed.dom.cr("div", "highed-imp-help", o.description), !!Object.keys(o.options || {}).length && a, r, !!o.export && n),
                    highed.isFn(o.create) && o.create.apply(S[t], [w, r]),
                    L[t] = {
                        export: e,
                        show: function() {
                            T && T.hide(),
                            highed.dom.style(i, {
                                display: ""
                            }),
                            o.show.apply(S[t], [w]),
                            T = L[t]
                        },
                        hide: function() {
                            highed.dom.style(i, {
                                display: "none"
                            })
                        }
                    }
                }
                var o = e[t];
                return S[t] = {
                    options: {}
                },
                !!c.plugins[t] && (i(),
                void v.addItem({
                    id: t,
                    title: o.title || t,
                    click: L[t].show
                }))
            }))
        }
        function a(e, t, i, o) {
            var a = "_export";
            a = e.title && e.title.text ? e.title.text.replace(/\s/g, "_") + a : "untitled" + a,
            M.value = JSON.stringify(e);
            var r = function(e) {
                e.preventDefault(),
                highed.download(a + ".json", M.value, "application/json")
            };
            "function" == typeof s && s(),
            s = highed.dom.on(y, "click", r),
            C.value = t;
            var l = function(e) {
                e.preventDefault();
                var i = cbs.formatter.fileName(a);
                highed.download(i + ".html", t, "text/html")
            };
            "function" == typeof d && d(),
            d = highed.dom.on(x, "click", l),
            k.value = i;
            var c = function(e) {
                e.preventDefault(),
                highed.download(a + ".svg", i, "image/svg+xml")
            };
            "function" == typeof h && h(),
            h = highed.dom.on(G, "click", c),
            w = o,
            n(),
            T && T.show(),
            B = !0
        }
        function r(e, t) {
            var i;
            p.resize(e, t),
            i = p.barSize(),
            f.resize(e, t - i.h - 20),
            v.resize(e, t - i.h)
        }
        function l(e) {
            highed.dom.on(e, "click", function() {
                e.focus(),
                e.select()
            })
        }
        var s, d, h, c = highed.merge({
            options: "html",
            plugins: "beautify-js beautify-json"
        }, i), p = highed.TabControl(t, !1, !0), u = p.createTab({
            title: highed.getLocalizedStrFromLang("exporter.exportHTML")
        }), g = p.createTab({
            title: highed.getLocalizedStrFromLang("exporter.exportJSON")
        }), m = p.createTab({
            title: highed.getLocalizedStrFromLang("exporter.exportSVG")
        }), b = p.createTab({
            title: highed.getLocalizedStrFromLang("exporter.exportPlugins")
        }), f = highed.HSplitter(b.body, {
            leftWidth: 30
        }), v = highed.List(f.left), y = highed.dom.cr("button", "highed-imp-button", highed.getLocalizedStrFromLang("exporter.downloadButton")), x = highed.dom.cr("button", "highed-imp-button", highed.getLocalizedStrFromLang("exporter.downloadButton"), "export-html-button"), G = highed.dom.cr("button", "highed-imp-button", highed.getLocalizedStrFromLang("exporter.downloadButton")), M = highed.dom.cr("textarea", "highed-imp-pastearea"), C = highed.dom.cr("textarea", "highed-imp-pastearea", "", "stepExportResultTextArea"), k = highed.dom.cr("textarea", "highed-imp-pastearea"), w = !1, A = !1, B = !1, S = {}, L = {}, T = !1;
        return c.options = highed.arrToObj(c.options),
        c.plugins = highed.arrToObj(c.plugins),
        highed.dom.ap(u.body, highed.dom.ap(highed.dom.cr("div", "highed-imp-spacer"), C), x),
        highed.dom.ap(g.body, highed.dom.ap(highed.dom.cr("div", "highed-imp-spacer"), M), y),
        highed.dom.ap(m.body, highed.dom.ap(highed.dom.cr("div", "highed-imp-spacer"), k), G),
        r(),
        o(),
        l(M),
        l(C),
        l(k),
        {
            init: a,
            resize: r,
            buildPluginUI: n
        }
    }
}(),
highed.ChartPreview = function(e, t) {
    function i() {
        Object.keys(Oe).forEach(function(t) {
            highed.dom.on(e.querySelector(t), "click", function(e) {
                return be.emit("RequestEdit", Oe[t], e.clientX, e.clientY),
                e.cancelBubble = !0,
                e.preventDefault(),
                e.stopPropagation(),
                e.stopImmediatePropagation(),
                !1
            })
        })
    }
    function o(e) {
        return !!highed.isFn(e) && e(Ce !== !1 ? Ce : l())
    }
    function n() {
        be.emit("ChartChange", ve),
        window.clearTimeout(Me),
        Me = window.setTimeout(function() {
            be.emit("ChartChangeLately", ve)
        }, 200)
    }
    function a() {
        return {
            minChars: 3,
            source: function() {
                var e = Be.getSelectedItem() ? Be.getSelectedItem().id() : null
                  , t = Se.getSelectedItem() ? Se.getSelectedItem().id() : null;
                if (Ce && e && t)
                    return cbs.exportable.regionSearchInit(Ce, e, t)
            }(),
            onAutoComplete: function(e) {
                var t = Be.getSelectedItem() ? Be.getSelectedItem().id() : null
                  , i = Se.getSelectedItem() ? Se.getSelectedItem().id() : null;
                Ce && t && i && cbs.exportable.onRegionSearchAutoComplete(Ce, e, t, i)
            }
        }
    }
    function r(e) {
        return highed.AutoComplete(e, a(), !0)
    }
    function l(t, o, n) {
        var a;
        t = t || ve;
        var r = t.chart && t.chart.type;
        if (ue && r) {
            if (n && highed.setAttr(t, "plotOptions--series--animation", !1),
            "undefined" == typeof window.Highcharts)
                return void highed.snackBar("Highcharts.JS must be included to use the editor");
            try {
                Ce = new Highcharts[Fe](o || e,t),
                d(),
                Ce && Ce.options && (highed.clearObj(Ge),
                highed.merge(Ge, Ce.options)),
                i(),
                s(),
                highed.dom.ap(o || e, we),
                le(),
                highed.dom.style(we, {
                    display: "none"
                }),
                highed.dom.style(we, {
                    top: "15px"
                }),
                Highcharts.addEvent(Ce, "afterPrint", function() {
                    be.emit("RequestResize"),
                    Pe && highed.dom.insertBefore(e, Ce.container, Ae),
                    highed.dom.ap(o || e, we)
                })
            } catch (e) {
                var l = e.toString();
                highed.log(1, "error initializing chart:", l),
                a = l.indexOf("www."),
                j = l.indexOf("#14"),
                a > 0 ? j > 0 ? highed.snackBar("Check the grouped category checkbox", l.substr(a), function() {
                    window.open("http://" + l.substr(a))
                }) : highed.snackBar("There's a problem with your chart!", l.substr(a), function() {
                    window.open("http://" + l.substr(a))
                }) : (highed.snackBar(l),
                console.error("exception trace:", l.stack)),
                Ce = !1
            }
            return Ce
        }
    }
    function s() {
        o(function(e) {
            e && e.reflow && e.reflow()
        })
    }
    function d() {
        if (xe = xe || {},
        highed.clearObj(ve),
        highed.merge(ve, highed.merge(highed.merge({}, xe), fe)),
        Pe ? (fe.xAxis = {},
        fe.yAxis = {}) : (fe && !highed.isArr(fe.yAxis) && (fe.yAxis = [fe.yAxis || {}]),
        fe && !highed.isArr(fe.xAxis) && (fe.xAxis = [fe.xAxis || {}]),
        xe.yAxis && !highed.isArr(xe.yAxis) && (xe.yAxis = [xe.yAxis]),
        xe.xAxis && !highed.isArr(xe.xAxis) && (xe.xAxis = [xe.xAxis]),
        ve.yAxis && !highed.isArr(ve.yAxis) && (ve.yAxis = [ve.yAxis]),
        ve.xAxis && !highed.isArr(ve.xAxis) && (ve.xAxis = [ve.xAxis]),
        ve.xAxis && xe.xAxis && ve.xAxis.forEach(function(e, t) {
            t < xe.xAxis.length && (highed.merge(e, highed.merge(xe.xAxis[t] || xe.xAxis, fe.xAxis[t])),
            We && (highed.merge(e, {
                tickmarkPlacement: "between"
            }),
            highed.merge(e, {
                labels: {
                    y: void 0
                }
            }),
            e.labels.hideGrouped && (highed.merge(e, {
                labels: {
                    style: {
                        fontSize: "0px"
                    }
                }
            }),
            highed.merge(e, {
                labels: {
                    groupedOptions: [{
                        style: {
                            fontSize: "11px"
                        }
                    }]
                }
            }))))
        }),
        ve.yAxis && xe.yAxis && ve.yAxis.forEach(function(e, t) {
            t < xe.yAxis.length && (highed.merge(e, highed.merge(xe.yAxis[t] || xe.yAxis, fe.yAxis[t])),
            e.tickInterval && (e.tickInterval = parseFloat(e.tickInterval.replace(",", "."))),
            "" == e.tickInterval && (e.tickInterval = null),
            "" == e.min && (e.min = null),
            "" == e.max && (e.max = null),
            e.min > 0 && (highed.merge(e, {
                plotLines: {
                    0: {
                        value: e.min
                    }
                }
            }),
            highed.merge(e, {
                softMin: e.min
            })),
            fe.yAxis[t].plotLines && highed.merge(e, {
                plotLines: {
                    0: {
                        value: fe.yAxis[t].plotLines.value
                    }
                }
            }))
        })),
        ve.series = [],
        fe.series && fe.series.forEach(function(e, t) {
            Pe && e.isSerie && !highed.isNull(xe.chart) && (e.type = xe.chart.mapType,
            e.showInLegend = !1,
            "mapbubble" === xe.chart.mapType && (e.color = highed.getMapColor(xe.chart.mapType, fe.mapColorSelection),
            e.marker = {
                fillOpacity: 1
            })),
            ve.series.push(highed.merge({}, e))
        }),
        xe.series && (ve.series = ve.series || [],
        xe.series.forEach(function(e, t) {
            t < ve.series.length ? highed.merge(ve.series[t], e) : ve.series.push(highed.merge({}, e))
        })),
        highed.merge(ve, highed.option("stickyChartProperties")),
        Pe && ve.series.length > 0) {
            var e = "statcode"
              , t = ve.chart.geoType
              , i = function(e) {
                return parseFloat(e.replace(/,/g, "."))
            };
            void 0 !== ve.chart && void 0 !== ve.chart.geoProperty && (e = ve.chart.geoProperty),
            "district" !== t && "neighborhood" !== t || ve.series[1].data.length < 20 && (ve.plotOptions.map.borderWidth = 1);
            for (var o = 0; o < ve.series.length; o++)
                if (!highed.isNull(ve.series[o].data))
                    if (Array.isArray(ve.series[o].data[0])) {
                        var n = {
                            keys: [e, "value"],
                            joinBy: [e, 0]
                        };
                        highed.merge(ve.series[o], n)
                    } else {
                        if (xe.chart && "mapbubble" === xe.chart.mapType) {
                            var a = ve.mapbubble.legend.minValue ? i(ve.mapbubble.legend.minValue) : void 0;
                            if (!a) {
                                var r = ve.series[1].data.filter(function(e) {
                                    return void 0 !== e.value && null !== e.value && 0 !== e.value
                                }).sort(function(e, t) {
                                    return e.value - t.value
                                });
                                a = r && r.length > 0 ? r[0].value : 1
                            }
                            if (ve.plotOptions.series.zThreshold = a,
                            ve.mapbubble.legend.maxValue || ve.mapbubble.legend.minValue) {
                                var l = ve.mapbubble.legend.maxValue ? i(ve.mapbubble.legend.maxValue) : null
                                  , s = ve.mapbubble.legend.minValue ? i(ve.mapbubble.legend.minValue) : null;
                                ve.series[o].data.forEach(function(e) {
                                    0 !== e.value && (l && e.z > l ? e.z = l : s && e.z < s && (e.z = s))
                                })
                            }
                        }
                        var n = {
                            keys: [e, "value"],
                            joinBy: [e, "statcode"]
                        };
                        highed.merge(ve.series[o], n)
                    }
        }
    }
    function h(e, t) {
        return e && e.config ? (ue = !0,
        Fe = e.constr || "Chart",
        Pe = "Map" === Fe,
        highed.clearObj(xe),
        void o(function(i) {
            e.newStyle ? xe = highed.merge({}, e.config || {}) : (highed.isNull(t) || (Re = {
                masterID: t.masterID,
                id: t.id
            }),
            Object.keys(e.config).forEach(function(t) {
                var i, o = t.indexOf("["), n = 0, a = t;
                o >= 0 && (n = parseInt(t.substr(o + 1, t.indexOf("]") - o - 1), 10),
                t = t.replace("[" + n + "]", ""),
                i = t.substr(0, t.indexOf("-")),
                xe[i] = xe[i] || []),
                highed.setAttr(xe, t, e.config[a], n),
                ye[t] = e.config[a]
            })),
            t && t.isManualSelectedTemplate && (fe = c(xe, fe)),
            d(),
            highed.getAttr(fe, "cultureSelection") || be.emit("SetDefaultCultureSettings"),
            Pe ? ne() : (highed.getAttr(fe, "chart--height") || (fe.chart.height = 450),
            l(ve),
            n()),
            t.isManualSelectedTemplate && be.emit("ResetColors"),
            Ne = t.masterID
        })) : highed.log(1, "chart preview: templates must be an object {config: {...}}")
    }
    function c(e, t) {
        var i = t.settings
          , o = t.title.text
          , n = t.chart.description
          , a = t.tooltip ? t.tooltip.valuePrefix : void 0
          , r = t.tooltip ? t.tooltip.valueSuffix : void 0
          , l = t.chart.height
          , s = t.plotOptions.series ? t.plotOptions.series.dataLabels.enabled : void 0
          , d = t.legend ? t.legend.enabled : void 0
          , h = t.tooltip ? Boolean(t.tooltip.shared) : void 0
          , c = t.sources
          , p = t.footNote ? t.footNote.text : null
          , u = Array.isArray(t.xAxis) ? t.xAxis[0].title : ""
          , g = Array.isArray(t.xAxis) && t.xAxis[0].labels ? t.xAxis[0].labels.hideGrouped : void 0
          , m = Array.isArray(t.yAxis) ? t.yAxis[0].cbsTitle : ""
          , b = Array.isArray(t.yAxis) ? t.yAxis[0].tickInterval : null
          , f = Array.isArray(t.yAxis) ? t.yAxis[0].min : null
          , v = Array.isArray(t.yAxis) ? t.yAxis[0].max : null
          , y = Array.isArray(t.yAxis) && t.yAxis[0].plotLines ? t.yAxis[0].plotLines.value : 0
          , x = t.cultureSelection
          , G = t.lang
          , M = t.selectedCultureId
          , C = highed.merge({}, me.defaultChartOptions);
        return highed.merge(C, {
            chart: {
                height: l
            },
            sources: c,
            footNote: {
                text: p
            },
            settings: i
        }),
        o && highed.merge(C, {
            title: {
                text: o
            }
        }),
        n && highed.merge(C, {
            chart: {
                description: n
            }
        }),
        a && highed.merge(C, {
            tooltip: {
                valuePrefix: a
            }
        }),
        r && highed.merge(C, {
            tooltip: {
                valueSuffix: r
            }
        }),
        highed.isBool(s) && highed.merge(C, {
            plotOptions: {
                series: {
                    dataLabels: {
                        enabled: s
                    }
                }
            }
        }),
        highed.isBool(d) && highed.merge(C, {
            legend: {
                enabled: d
            }
        }),
        highed.isBool(h) && highed.merge(C, {
            tooltip: {
                shared: h
            }
        }),
        x && highed.merge(C, {
            cultureSelection: x,
            selectedCultureId: M,
            lang: G
        }),
        highed.setAttr(C, "series", De),
        e.xAxis && (highed.merge(C, {
            xAxis: [{}]
        }),
        Ee && highed.merge(C.xAxis[0], {
            categories: Ee
        }),
        u && C.xAxis && highed.merge(C.xAxis[0], {
            title: u
        }),
        highed.isBool(g) && highed.merge(C.xAxis[0], {
            labels: {
                hideGrouped: g
            }
        })),
        e.yAxis && (highed.merge(C, {
            yAxis: [{}]
        }),
        m && highed.merge(C.yAxis[0], {
            cbsTitle: m
        }),
        b && highed.merge(C.yAxis[0], {
            tickInterval: b
        }),
        f && highed.merge(C.yAxis[0], {
            min: f
        }),
        v && highed.merge(C.yAxis[0], {
            max: v
        }),
        y && highed.merge(C.yAxis[0], {
            plotLines: {
                value: y
            }
        })),
        C
    }
    function p() {
        o(function(e) {
            return e.options && e.options.series && (fe.series = e.options.series),
            !0
        }) || (fe.series = []),
        d()
    }
    function u(e) {
        return e && e.csv ? void o(function(t) {
            highed.setAttr(fe, "series", []),
            highed.setAttr(ve, "series", []),
            highed.setAttr(fe, "plotOptions--series--animation", !0),
            highed.setAttr(fe, "data--csv", e.csv),
            highed.setAttr(fe, "data--googleSpreadsheetKey", void 0),
            highed.setAttr(fe, "data--itemDelimiter", e.itemDelimiter),
            highed.setAttr(fe, "data--firstRowAsNames", e.firstRowAsNames),
            highed.setAttr(fe, "data--dateFormat", e.dateFormat),
            highed.setAttr(fe, "data--decimalPoint", e.decimalPoint),
            d(),
            l(ve),
            p(),
            n()
        }) : highed.log(1, "chart load csv: data.csv is required")
    }
    function g(e) {
        if (highed.isStr(e))
            try {
                return loadProjectData(JSON.parse(e))
            } catch (e) {
                highed.snackBar("Invalid project")
            }
        e && (xe = {},
        e.template,
        fe = highed.merge({}, me.defaultChartOptions),
        e.options && (fe = highed.merge(fe, e.options)),
        fe.exporting = highed.merge(fe.exporting, me.defaultChartOptions.exporting),
        Array.isArray(fe.yAxis) && fe.yAxis[0].labels && (fe.yAxis[0].labels.formatter = cbs.exportable.yAxisLabelFormatter),
        Array.isArray(fe.yAxis) && fe.yAxis[0].labels && (fe.yAxis[0].labels.formatter = cbs.exportable.yAxisLabelFormatter),
        fe.lang && Highcharts.setOptions({
            lang: fe.lang
        }),
        be.emit("LoadProjectData", e.options, e.selectedTemplate),
        d())
    }
    function m() {
        var e = highed.merge({}, fe);
        return !highed.isNull(xe.chart.map) && xe.chart.map.length > 0 && (e.chart.map = []),
        {
            template: xe,
            options: e,
            selectedTemplate: Re
        }
    }
    function b(e) {
        o(function(t) {
            if (highed.isStr(e))
                try {
                    b(JSON.parse(e))
                } catch (e) {
                    highed.snackBar("invalid json: " + e)
                }
            else
                highed.isBasic(e) ? highed.snackBar("the data is not valid json") : (xe = {},
                highed.clearObj(fe),
                highed.merge(fe, highed.merge({}, e)),
                highed.isNull(e.series) || (fe.series = e.series,
                highed.merge(ve, highed.merge({}, e))),
                d(),
                l(fe),
                p(),
                n())
        })
    }
    function f(e) {
        o(function(t) {
            Object.keys(e || {}).forEach(function(t) {
                highed.setAttr(fe, t, e[t])
            }),
            d(),
            l(ve),
            n()
        })
    }
    function v(e) {
        highed.isArr(e) && (fe.series = fe.series || [],
        e.length < fe.series.length && fe.series.splice(e.length, fe.series.length - e.length),
        e.forEach(function(e, t) {
            e.name && y("series-name", e.name, t),
            e.data && y("series-data", e.data, t)
        }))
    }
    function y(e, t, i) {
        G(e, t, i),
        d(),
        l(ve, !1, !0),
        n()
    }
    function x(e) {
        o(function(t) {
            t && e.forEach(function(e, t) {
                G(e.id, e.value, e.index)
            })
        }),
        d(),
        l(ve, !1, !0)
    }
    function G(e, t, i) {
        if (o(function(o) {
            o && (highed.setAttr(o.options, e, t, i),
            highed.setAttr(o.options, "plotOptions--series--animation", !1, i))
        }),
        highed.setAttr(fe, e, t, i),
        ye[e] = t,
        "legend--noDataEnabled" == e || "colorAxis--dataClasses" == e) {
            var n = !(!ye["legend--noDataEnabled"] && !fe.legend) && fe.legend.noDataEnabled
              , a = ye["colorAxis--dataClasses"] || null
              , r = fe && fe.colorAxis ? fe.colorAxis.dataClasses : null
              , l = r || a || null
              , s = l ? l[l.length - 1] : {};
            n && s.id !== cbs.noDataLegendItemId ? l.push(cbs.noDataLegendElement()) : s.id === cbs.noDataLegendItemId && l.pop()
        } else
            0 === e.indexOf("lang--") && fe.lang ? Highcharts.setOptions({
                lang: fe.lang
            }) : e.indexOf("cbsTitle") > 0 && cbs.renderer.renderAdditionalElements(Ce)
    }
    function M() {
        var e = highed.merge({}, ve);
        return delete e.exporting,
        delete e.chart.events,
        delete e.chart.height,
        highed.isNull(e.chart.map) || (e.chart.map = []),
        highed.isNull(e.data) || (e.data = void 0),
        e.series = ve.series,
        e
    }
    function C() {
        return ["exporting:{", "chartOptions: { isExporting: true},", "buttons:{contextButton:{menuItems:[", '{textKey:"printChart", onclick: function(){ this.print(); } },', "{separator:true},", '{textKey:"downloadPNG", onclick: function(){ this.exportChartLocal(); this.redraw(); } },', '{textKey:"downloadJPEG", onclick: function(){ this.exportChartLocal({type: "image/jpeg"}); this.redraw(); } },', '{textKey:"downloadSVG", onclick: function(){ this.exportChartLocal({type: "image/svg+xml"}); this.redraw(); } },', '{textKey:"downloadCSV", onclick: function(){ this.downloadCSV(); } },', "]}}}"].join("") + "\n"
    }
    function k() {
        return o(function(e) {
            return highed.isFn(e.getSVG) ? e.getSVG() : ""
        })
    }
    function w() {
        return '"events": {"render": function(){ cbs.renderer.renderAdditionalElements(this); }},'
    }
    function A(e) {
        var t = '"chart":{';
        return e.replace(t, t + w())
    }
    function B(e, t, i) {
        var o = A(JSON.stringify(M()));
        return "\n" + ["(function(){ ", "var " + i + "= " + ge + ";", "var chart;", "var windowWidth = undefined;", "jQuery(function () {", V(e, i), "jQuery(window).resize(function() {", "var currentWindowWidth = jQuery(window).width();", "if (chart && windowWidth !== currentWindowWidth) {", "windowWidth = currentWindowWidth;", "chart.reflow();", "chart.legend.update();", "}", "});", "});", "function cl() {", fe.lang ? "Highcharts.setOptions({lang:" + JSON.stringify(fe.lang) + "});" : "", 'Highcharts.wrap(Highcharts.Axis.prototype, "getPlotLinePath", function(proceed) {', "var path = proceed.apply(this, Array.prototype.slice.call(arguments, 1));", "if (path) {", "path.flat = false;", "}", "return path;", "});", "Highcharts.setOptions({", "yAxis: { ", "labels: { ", "formatter: " + i + ".yAxisLabelFormatter", "}", "},", C(), "});", "chart = new Highcharts." + Fe + '("', t, '", ', o, ", function(chart) { ", "Highcharts.setOptions({", "lang: {", "decimalPoint: chart.options.lang.decimalPoint,", "thousandsSep: chart.options.lang.thousandsSep", "},", "tooltip: {", "pointFormatter: " + i + ".chartTooltipFormatter", "}", "});", "chart.update({", "plotOptions: {", "series: {", "events: {", "click: " + i + ".plotOptionsPointEventsClick", "},", "dataLabels: {formatter: " + i + ".dataLabelFormatter }", "}", "}", "});", "}", ");", "}", "", oe(i), "", X(i), "", "})();"].join("") + "\n"
    }
    function S(e) {
        return o(function(t) {
            var i = {
                "https://code.highcharts.com/modules/data.js": 1,
                "https://code.highcharts.com/modules/offline-exporting.js": 1,
                "https://code.highcharts.com/modules/accessibility.js": 1
            }
              , o = (t.options.titles ? t.options.titles.text || "untitled chart" : "untitled chart",
            "cbs");
            return e = e || "",
            "map" === t.options.chart.type ? (i["https://code.highcharts.com/maps/modules/map.js"] = 1,
            Z(i, e, o)) : B(i, e, o)
        })
    }
    function L(e) {
        return o(function(e) {
            var t = "highcharts-" + highed.uuid();
            if ("map" === e.options.chart.type)
                return z(t);
            var i = e.options.chart.polar ? "polar" : e.options.chart.type;
            return "\n" + ["<!-- Made with HC editor version: " + je + "--> \n", '<div class="highchartContainerClass">', '<div id="' + t + '" class="hc-chart hc-chart-' + i + '" ' + T() + ">", "</div>", "</div>"].join("") + "<script>" + S(t) + "</script>"
        })
    }
    function T() {
        var e = Ce.options.chart.height;
        return e ? 'style="height:' + e + 'px"' : ""
    }
    function F() {
        o(function(t) {
            Te || highed.isNull(t) || (highed.dom.style(me.expandTo, {
                width: "100%",
                display: "block"
            }),
            ke = highed.dom.size(e),
            Te = !0,
            l(ve, me.expandTo),
            we.className = "highed-icon highed-chart-preview-expand fa fa-times-circle",
            highed.dom.style(we, {
                display: "inline"
            }))
        })
    }
    function O() {
        o(function(t) {
            ke && Te && (highed.dom.style(me.expandTo, {
                width: "0px",
                display: "none"
            }),
            we.className = "highed-icon highed-chart-preview-expand fa fa-external-link-square",
            Te = !1,
            l(t.options, e))
        })
    }
    function P() {
        highed.clearObj(xe),
        highed.clearObj(fe),
        highed.clearObj(ye),
        highed.merge(fe, me.defaultChartOptions),
        d(),
        l(ve),
        n(),
        be.emit("New")
    }
    function R(e, t) {
        o(function(i) {
            var o = i.exportChartLocal(e, t);
            return i.redraw(),
            o
        })
    }
    function E(t) {
        e = t,
        l()
    }
    function D() {
        return Fe
    }
    function N() {
        if (!highed.isNull(ve.chart.searchForRegionEnabled) && ve.chart.searchForRegionEnabled)
            return Le.embeddable.getEmbeddableHtml()
    }
    function W() {
        var e = [{
            ui: Le,
            htmlFunction: N
        }, {
            ui: Be,
            htmlFunction: Be.embeddable.getEmbeddableHtml
        }, {
            ui: Se,
            htmlFunction: Se.embeddable.getEmbeddableHtml
        }]
          , t = []
          , i = e.filter(function(e) {
            if (e.ui && e.ui.isVisible())
                return e
        }).length
          , o = function(e, t) {
            var i = Math.floor(12 / t);
            return ['<div class="col-lg-' + i + " col-md-" + i + " col-sm-" + i + " col-xs-" + i + '">', e.toString(), "</div>"].join("")
        };
        for (var n in e)
            e[n].ui && e[n].ui.isVisible() && t.push(o(e[n].htmlFunction(), i));
        return t.join("")
    }
    function z(e) {
        return "\n<!-- Made with HC editor version: " + je + '--> \n<div class="highchartContainerClass"><div class="row">' + W() + '</div><div id="' + e + '" class="hc-map hc-map-' + Ce.options.chart.mapType + '" ' + T() + "></div></div><script>" + S(e) + "</script>"
    }
    function I(e, t) {
        return [H(e), ".then(function() {", "return " + t + ".downloadGeoJson(" + t + ".defaultGeoUrl);", "})", ".then(function(data){", "if(data === undefined || data === null)", " return;", 'if(typeof cbs.autoCompletedInit === "function" && typeof cbs.autoCompleteRegionSearch === "function")', "cbs.autoCompleteRegionSearch(cbs.autoCompletedInit(chart, cbs.selectedPeriod, cbs.selectedSerie));", "});"].join("")
    }
    function H(e) {
        return ["jQuery.when().then(function () {", "Highcharts.cbsFormatNumber = " + Highcharts.cbsFormatNumber.toString() + ";", "})"].join("")
    }
    function V(e, t) {
        return [H(e), ".then(function() {", "cl();", "});"].join("")
    }
    function Z(e, t, i) {
        var o = i + ".downloadGeoJson(" + i + ".templateGeoUrl.replace('[year]', " + a + "));"
          , n = i + ".setSerieVisibility();"
          , a = "selectedPeriod"
          , r = "selectedSerie"
          , l = A(JSON.stringify(M()));
        return "\n" + ["(function(){ ", "var " + i + "= " + ge + ";", "var chart;", i + '["templateGeoUrl"] = "' + xe.chart.geoUrl + '";', i + '["defaultGeoUrl"] = "' + ve.chart.geoUrl + '";', "var windowWidth = undefined;", "jQuery(function () {", I(e, i), "jQuery(window).resize(function() {", "var currentWindowWidth = jQuery(window).width();", "if (chart && windowWidth !== currentWindowWidth) {", "windowWidth = currentWindowWidth;", "chart.reflow();", "chart.legend.update();", "}", "});", "});", " function cl(mapData) {", "Highcharts.setOptions({", C(), "});", "chart = new Highcharts." + Fe + '("', t, '", ', l, ", function(chart) { ", "Highcharts.setOptions({", "lang: {", "decimalPoint: chart.options.lang.decimalPoint,", "thousandsSep: chart.options.lang.thousandsSep", "},", "tooltip: {", "pointFormatter: " + i + ".mapTooltipFormatter", "}", "});", "}", ");", "}", "", i + "['noDataLegendItemId'] = '" + cbs.noDataLegendItemId + "';", q(i), "", Be.embeddable.getEmbeddableJavascriptInit(i, a), "", Be.embeddable.getEmbeddableJavascriptOnChange(i, a, o), "", Se.embeddable.getEmbeddableJavascriptInit(i, r), "", Se.embeddable.getEmbeddableJavascriptOnChange(i, r, n), "", highed.isNull(Le) ? "" : Le.embeddable.getEmbeddableJavaScript(i, "cbs.onAutoCompleted(chart, value, cbs.selectedPeriod, cbs.selectedSerie);"), "})();"].join("") + "\n"
    }
    function q(e) {
        var t = [];
        return t.push(Y(e)),
        t.push(_(e)),
        t.push(J(e)),
        t.push(K(e)),
        t.push(ie(e)),
        t.push(U(e)),
        t.join(" ")
    }
    function U(e) {
        if (!highed.isNull(e) && !highed.isNull(ve.chart.searchForRegionEnabled) && ve.chart.searchForRegionEnabled) {
            var t = [];
            return t.push(e + "['onAutoCompleted'] = " + cbs.exportable.onRegionSearchAutoComplete.toString() + ";"),
            t.push(e + "['autoCompletedInit'] = " + cbs.exportable.regionSearchInit.toString() + ";"),
            t.join("")
        }
    }
    function J(e) {
        if (!highed.isNull(e))
            return e + "['downloadGeoJson'] = " + cbs.exportable.downloadGeoJson.toString() + ";"
    }
    function K(e) {
        if (!highed.isNull(e))
            return e + "['setSerieVisibility'] = " + cbs.exportable.setSerieVisibility.toString() + ";"
    }
    function X(e) {
        var t = [];
        if (!highed.isNull(e))
            return t.push(e + ".renderer['renderAdditionalElements'] = " + cbs.renderer.renderAdditionalElements.toString() + ";"),
            t.push(e + "['plotOptionsPointEventsClick'] = " + plotOptionsPointEventsClick.toString() + ";"),
            t.push(e + "['chartTooltipFormatter'] = " + chartTooltipFormatter.toString() + ";"),
            t.push(e + ".renderer['renderHorizontalXAxisLayout'] = " + cbs.renderer.renderHorizontalXAxisLayout.toString() + ";"),
            t.push(e + ".renderer['renderVerticalXAxisLayout'] = " + cbs.renderer.renderVerticalXAxisLayout.toString() + ";"),
            t.push(e + ".renderer['renderDefaultLayout'] = " + cbs.renderer.renderDefaultLayout.toString() + ";"),
            t.push(e + ".renderer['clearCanvas'] = " + cbs.renderer.clearCanvas.toString() + ";"),
            t.push(e + ".renderer['renderLogo'] = " + cbs.renderer.renderLogo.toString() + ";"),
            t.push(e + ".renderer['renderFootNote'] = " + cbs.renderer.renderFootNote.toString() + ";"),
            t.push(e + ".renderer['renderSource'] = " + cbs.renderer.renderSource.toString() + ";"),
            t.push(e + ".renderer['positionLegend'] = " + cbs.renderer.positionLegend.toString() + ";"),
            t.push(e + ".renderer['calculateMarginBottom'] = " + cbs.renderer.calculateMarginBottom.toString() + ";"),
            t.join(" ")
    }
    function Y(e) {
        var t = [];
        if (!highed.isNull(e))
            return t.push(e + ".renderer['renderAdditionalElements'] = " + cbs.renderer.renderAdditionalElements.toString() + ";"),
            t.push(e + "['plotOptionsPointEventsClick'] = " + plotOptionsPointEventsClick.toString() + ";"),
            t.push(e + ".renderer['renderDefaultLayout'] = " + cbs.renderer.renderDefaultLayout.toString() + ";"),
            t.push(e + ".renderer['clearCanvas'] = " + cbs.renderer.clearCanvas.toString() + ";"),
            t.push(e + ".renderer['renderLogo'] = " + cbs.renderer.renderLogo.toString() + ";"),
            t.push(e + ".renderer['renderFootNote'] = " + cbs.renderer.renderFootNote.toString() + ";"),
            t.push(e + ".renderer['renderSource'] = " + cbs.renderer.renderSource.toString() + ";"),
            t.push(e + ".renderer['positionLegend'] = " + cbs.renderer.positionLegend.toString() + ";"),
            t.push(e + ".renderer['calculateMarginBottom'] = " + cbs.renderer.calculateMarginBottom.toString() + ";"),
            t.join(" ")
    }
    function _(e) {
        var t = [];
        return t.push(ee(e)),
        t.push(te(e)),
        t.push(Q(e)),
        t.push($(e)),
        t.join(" ")
    }
    function Q(e) {
        if (!highed.isNull(e))
            return !highed.isNull(ve.legend.labelFormatter) && highed.isFn(ve.legend.labelFormatter) ? e + "['legendLabelFormatter'] = " + ve.legend.labelFormatter.toString() + ";" : void 0
    }
    function $(e) {
        if (!highed.isNull(e))
            return e + "['dataLabelFormatter'] = " + cbs.exportable.dataLabelFormatter.toString() + ";"
    }
    function ee(e) {
        if (!highed.isNull(e))
            return !highed.isNull(ve.accessibility.pointDescriptionFormatter) && highed.isFn(ve.accessibility.pointDescriptionFormatter) ? e + "['pointDescriptionFormatter'] = " + ve.accessibility.pointDescriptionFormatter.toString() + ";" : void 0
    }
    function te(e) {
        var t = [];
        return void 0 !== ve.plotOptions.map.point && void 0 !== ve.plotOptions.map.point.events ? (!highed.isNull(ve.plotOptions.map.point.events.click) && highed.isFn(ve.plotOptions.map.point.events.click) && t.push(e + "['plotOptionsMapPointEventsClick'] = " + ve.plotOptions.map.point.events.click.toString() + ";"),
        !highed.isNull(ve.plotOptions.map.point.events.select) && highed.isFn(ve.plotOptions.map.point.events.select) && t.push(e + "['plotOptionsMapPointEventsSelect'] = " + ve.plotOptions.map.point.events.select.toString() + ";")) : void 0 !== ve.plotOptions.mapbubble.point && void 0 !== ve.plotOptions.mapbubble.point.events ? (!highed.isNull(ve.plotOptions.mapbubble.point.events.click) && highed.isFn(ve.plotOptions.mapbubble.point.events.click) && t.push(e + "['plotOptionsMapPointEventsClick'] = " + ve.plotOptions.mapbubble.point.events.click.toString() + ";"),
        !highed.isNull(ve.plotOptions.mapbubble.point.events.select) && highed.isFn(ve.plotOptions.mapbubble.point.events.select) && t.push(e + "['plotOptionsMapPointEventsSelect'] = " + ve.plotOptions.mapbubble.point.events.select.toString() + ";")) : void 0 !== ve.plotOptions.series && void 0 !== ve.plotOptions.series.events && !highed.isNull(ve.plotOptions.series.events.click) && highed.isFn(ve.plotOptions.series.events.click) && t.push(e + "['plotOptionsPointEventsClick'] = " + ve.plotOptions.series.events.click.toString() + ";"),
        t.join(" ")
    }
    function ie(e) {
        var t = [];
        if (!highed.isNull(e))
            return !highed.isNull(ve.tooltip.pointFormatter) && highed.isFn(ve.tooltip.pointFormatter) && t.push(e + "['mapTooltipFormatter'] = " + cbs.exportable.mapTooltipFormatter.toString() + ";"),
            t.join(" ")
    }
    function oe(e) {
        var t = [];
        if (!highed.isNull(e))
            return highed.isNull(ve.yAxis[0].labels) || highed.isNull(ve.yAxis[0].labels.formatter) || !highed.isFn(ve.yAxis[0].labels.formatter) || (t.push(e + "['yAxisLabelFormatter'] = " + cbs.exportable.yAxisLabelFormatter.toString() + ";"),
            t.push(cbs.exportable.customValueExpressionFormatter.toString() + ";")),
            t.push($(e)),
            t.join(" ")
    }
    function ne() {
        highed.getAttr(fe, "chart--height") || (fe.chart.height = 650),
        Se.clearSelection(),
        Se.selectByIndex(0),
        Be.clearSelection(),
        Be.selectByIndex(0);
        var e = Be.getSelectedItem();
        highed.services.mapLoader.loadMap(ve, fe, xe, e).done(function(e) {
            l(e)
        }).fail(function() {
            be.emit("InitChart", ve),
            highed.snackBar("Unable to load map data"),
            o(function(e) {
                highed.services.mapLoader.errorLoadingMap(e)
            })
        })
    }
    function ae(e, t, i, a, r, s, h) {
        return e ? (We = s,
        void o(function(o) {
            highed.setAttr(fe, "series", []),
            highed.setAttr(ve, "series", []),
            highed.setAttr(fe, "series", e),
            highed.merge(fe, {
                settings: {
                    hasGroupedCategories: s
                }
            }),
            highed.merge(fe, {
                settings: {
                    csvData: h
                }
            }),
            fe.xAxis && fe.xAxis.length > 0 && highed.merge(fe.xAxis[0], {
                categories: t
            }),
            Ee = t,
            De = e,
            a && (he(i),
            de()),
            d(),
            l(ve),
            n()
        })) : highed.log(1, "chart load data: data is required")
    }
    function re() {
        var e = Ce.options.chart.searchForRegionEnabled === !0
          , t = function(e) {
            return !highed.isNull(e)
        }
          , i = t(Le) && Le.isVisible();
        if (!e || t(Le) && i) {
            if (e && i)
                Le.updateTypeAhead(a());
            else if (!e && t(Le) && !highed.isNull(Le.container) && i)
                return void Le.removeTypeAheadFromDom()
        } else
            Le = r(Ae),
            Le.embeddable.refreshEmbedId();
        t(Le) && Le.setPlaceHolderText(highed.getLocalizedStrFromLang("searchRegion", highed.isNull(ve.selectedCultureId) ? "nl" : ve.selectedCultureId))
    }
    function le() {
        Pe ? (Be.embeddable.refreshEmbedId(),
        Se.embeddable.refreshEmbedId(),
        Te || (re(),
        highed.dom.ap(Ae, Be.container),
        highed.dom.ap(Ae, Se.container),
        highed.dom.insertBefore(e, Ce.container, Ae),
        highed.dom.style(we, {
            top: "35px"
        }))) : highed.dom.style(we, {
            top: "2px"
        })
    }
    function se() {
        Be.clear(),
        Be.clearSelection(),
        Se.clear(),
        Se.clearSelection()
    }
    function de() {
        if (void 0 !== fe.series && null !== fe.series) {
            var e = Se.getSelectedItem();
            Se.clear(),
            fe.series.forEach(function(e, t) {
                e.isSerie && Se.addItem(e.name)
            }),
            e && Se.selectById(e.id()),
            Se.selectByIndex(0)
        }
    }
    function he(e) {
        if (void 0 !== e && null !== e) {
            var t = Be.getSelectedItem();
            return Be.clear(),
            e.forEach(function(e, t) {
                Be.addItem(e)
            }),
            t ? void Be.selectById(t.id()) : void Be.selectByIndex(0)
        }
    }
    function ce() {
        o(function(e) {
            Pe && e && e.legend && e.legend.update()
        })
    }
    function pe(e) {
        return e ? void l(e) : void l(ve)
    }
    var ue = !1
      , ge = "{ renderer: {" + cbs.renderer.createExportableVariables() + "} }"
      , me = highed.merge({
        defaultChartOptions: {
            chart: {
                style: {
                    fontFamily: '"Akko W01 Regular", "Calibri Light", sans-serif',
                    fontSize: "12px",
                    color: "#000"
                }
            },
            colorSelection: "Cold",
            colors: highed.meta.CBScolors.Cold,
            title: {
                useHTML: !0,
                style: {
                    fontFamily: '"Soho W01 Medium", "Cambria", sans-serif',
                    fontSize: "17px",
                    color: "#000"
                }
            },
            subtitle: {},
            plotOptions: {
                series: {
                    dataLabels: {
                        formatter: cbs.exportable.dataLabelFormatter
                    }
                }
            },
            exporting: {
                chartOptions: {
                    isExporting: !0
                },
                buttons: {
                    contextButton: {
                        menuItems: [{
                            textKey: "printChart",
                            onclick: function() {
                                this.print()
                            }
                        }, {
                            separator: !0
                        }, {
                            textKey: "downloadPNG",
                            onclick: function() {
                                this.exportChartLocal({
                                    filename: this.title.textStr
                                }),
                                this.redraw()
                            }
                        }, {
                            textKey: "downloadJPEG",
                            onclick: function() {
                                this.exportChartLocal({
                                    filename: this.title.textStr,
                                    type: "image/jpeg"
                                }),
                                this.redraw()
                            }
                        }, {
                            textKey: "downloadSVG",
                            onclick: function() {
                                this.exportChartLocal({
                                    filename: this.title.textStr,
                                    type: "image/svg+xml"
                                }),
                                this.redraw()
                            }
                        }, {
                            textKey: "downloadCSV",
                            onclick: function() {
                                this.downloadCSV()
                            }
                        }]
                    }
                }
            },
            sources: {
                prefix: "",
                text: ""
            },
            legend: {
                noDataEnabled: !1
            },
            credits: !1
        },
        expandTo: e
    }, t)
      , be = highed.events()
      , fe = highed.merge({}, me.defaultChartOptions)
      , ve = {}
      , ye = {}
      , xe = {}
      , Ge = {}
      , Me = !1
      , Ce = !1
      , ke = !1
      , we = highed.dom.cr("div", "highed-icon highed-chart-preview-expand fa fa-external-link-square")
      , Ae = highed.dom.cr("div", "highed-map-dropdown-div")
      , Be = highed.DropDown()
      , Se = highed.DropDown()
      , Le = null
      , Te = !1
      , Fe = "Chart"
      , Oe = {
        "g.highcharts-legend": {
            tab: "Legend",
            id: "legend--enabled"
        },
        "text.highcharts-title": {
            tab: "Titles",
            id: "title--text"
        },
        ".highcharts-yaxis-labels": {
            tab: "Axes",
            id: "yAxis-labels--format"
        },
        ".highcharts-xaxis-labels": {
            tab: "Axes",
            id: "xAxis-labels--format"
        },
        ".highcharts-xaxis .highcharts-axis-title": {
            tab: "Axes",
            id: "xAxis-title--text"
        },
        ".highcharts-yaxis .highcharts-axis-title": {
            tab: "Titles",
            id: "yAxis-title--text"
        },
        "rect.highcharts-background": {
            tab: "Appearance",
            id: "chart--backgroundColor"
        },
        ".highcharts-series": {
            tab: "Data series",
            id: "series"
        },
        "g.highcharts-tooltip": {
            tab: "Tooltip",
            id: "tooltip--enabled"
        }
    }
      , Pe = !1
      , Re = !1
      , je = "v1.0.3.7671"
      , Ee = []
      , De = null
      , Ne = void 0
      , We = !1;
    return Se.on("Change", function(e) {
        void 0 !== fe.series && null !== fe.series || highed.snackBar("error periodDropDown. customizedOptions.series is null");
        var t = Be.getSelectedItem();
        fe.series.forEach(function(i, o) {
            "map" !== highed.getAttr(ve, "chart--type") ? i.visible || (i.visible = !0) : i.isSerie ? i.name === e.id() && t && i.periode === t.id() ? i.visible || (i.visible = !0) : i.visible = !1 : i.visible = !0
        }),
        d(),
        Se.getPreviousSelectedItem() && l(ve)
    }),
    Be.on("Change", function(e) {
        var t = highed.getAttr(xe, "chart--geoUrl");
        if (void 0 !== t) {
            void 0 !== fe.series && null !== fe.series || highed.snackBar("error periodDropDown. customizedOptions.series is null");
            var i = Se.getSelectedItem()
              , n = !1;
            if (fe.series.forEach(function(t, o) {
                "map" !== highed.getAttr(ve, "chart--type") ? t.visible || (t.visible = !0) : t.isSerie ? t.periode === e.id() && i && t.name === i.id() ? t.visible || (t.visible = !0,
                n = !0) : t.visible = !1 : t.visible = !0
            }),
            d(),
            n) {
                var a = Be.getSelectedItem();
                highed.services.mapLoader.loadMap(ve, fe, xe, a).done(function(e) {
                    l(e)
                }).fail(function() {
                    be.emit("InitChart", ve),
                    highed.snackBar("Unable to load map data (" + error + ")"),
                    o(function(e) {
                        highed.services.mapLoader.errorLoadingMap(e)
                    })
                })
            }
            Be.getPreviousSelectedItem() && l(ve)
        }
    }),
    d(),
    l(),
    highed.dom.on(we, "click", function() {
        return Te ? O() : F()
    }),
    {
        getConstructor: D,
        on: be.on,
        expand: F,
        collapse: O,
        new: P,
        changeParent: E,
        loadTemplate: h,
        loadSeries: v,
        resize: s,
        toProject: m,
        loadProject: g,
        clearDropDowns: se,
        initChart: pe,
        updateLegend: ce,
        options: {
            set: y,
            setProperties: x,
            customized: ve,
            flat: ye,
            chart: Ge
        },
        data: {
            csv: u,
            json: b,
            settings: f,
            export: R,
            datatable: ae
        },
        export: {
            html: L,
            json: M,
            svg: k,
            js: S
        }
    }
}
,
function() {
    var e = highed.OverlayModal(!1, {
        showOnInit: !1,
        zIndex: 11e3,
        width: 300,
        height: 400
    });
    highed.dom.ap(e.body, highed.dom.cr("span", "", "License info goes here")),
    highed.licenseInfo = {
        show: e.show
    }
}(),
function() {
    function e(i) {
        i && (highed.isArr(i) ? i.forEach(e) : i.options ? highed.isArr(i.options) ? i.options.forEach(e) : Object.keys(i.options).forEach(function(t) {
            e(i.options[t])
        }) : i.id && (t[i.id] = i))
    }
    var t = {};
    e(highed.meta.optionsExtended),
    highed.SimpleCustomizer = function(e, i) {
        function o(e) {
            s.innerHTML = "",
            d.availableSettings.forEach(function(i) {
                var o = highed.merge({
                    text: i.replace(/\-/g, " "),
                    id: i,
                    tooltipText: !1,
                    dataType: "string",
                    defaults: !1,
                    custom: {},
                    values: !1
                }, t[i]);
                highed.dom.ap(s, highed.InspectorField(o.values ? "options" : o.dataType, highed.getAttr(e, o.id, 0) || o.defaults, {
                    title: o.text,
                    tooltip: o.tooltipText,
                    values: o.values,
                    custom: o.custom,
                    defaults: o.defaults,
                    attributes: o.attributes || []
                }, function(e) {
                    r.emit("PropertyChange", o.id, e, 0)
                }, !1, o.id))
            })
        }
        function n(e) {
            e && (highed.dom.style(e, {
                border: "2px solid #33aa33"
            }),
            e.focus(),
            e.scrollIntoView(!0),
            window.setTimeout(function() {
                highed.dom.style(e, {
                    border: ""
                })
            }, 2e3))
        }
        function a(e, t, i) {
            var o = e.id;
            o.indexOf("-") >= 0 && n(s.querySelector("#" + o))
        }
        var r = highed.events()
          , l = highed.dom.cr("div", "highed-simple-customizer")
          , s = highed.dom.cr("table", "highed-customizer-table")
          , d = highed.merge({
            availableSettings: ["title--text", "subtitle--text", "colors", "chart--backgroundColor", "yAxis-title--style", "yAxis--type", "yAxis--opposite", "yAxis--reversed", "yAxis-labels--format"]
        }, i);
        return highed.ready(function() {
            highed.dom.ap(e, highed.dom.ap(l, highed.dom.cr("div", "highed-customizer-table-heading", "Edit Chart"), s))
        }),
        {
            focus: a,
            on: r.on,
            build: o
        }
    }
}(),
function() {
    function e(e, t) {
        var o = highed.merge({
            meta: {
                version: "unknown",
                author: "unknown",
                homepage: "unknown"
            },
            dependencies: [],
            options: {}
        }, t);
        return o.dependencies.forEach(highed.include),
        highed.isNull(i[e]) ? void (i[e] = o) : highed.log(1, "plugin -", e, "is already installed")
    }
    function t(e, t) {
        var a = i[e]
          , r = {};
        if (highed.isNull(a))
            highed.log(2, "plugin -", e, "is not installed");
        else {
            if (o[e])
                return highed.log(2, "plugin -", e, "is already active");
            Object.keys(a.options).forEach(function(i) {
                var o = a.options[i];
                highed.isBasic(o) || highed.isArr(o) ? highed.log(2, "plugin -", e, "unexpected type definition for option", i, "expected object") : (r[i] = t[i] || a.options[i].default || "",
                o.required && highed.isNull(t[i]) && highed.log(1, "plugin -", e, "option", i, "is required"))
            }),
            o[e] = {
                definition: a,
                options: r
            },
            highed.isFn(a.activate) && o[e].definition.activate(r),
            n.emit("Use", o[e])
        }
    }
    var i = {}
      , o = {}
      , n = highed.events();
    highed.plugins.editor = {
        install: e,
        use: t
    },
    highed.Editor = function(e, t) {
        function i() {
            highed.onPhone() && highed.dom.style(L, {
                "background-image": 'url("data:image/svg+xml;utf8,' + encodeURIComponent(M.export.svg()) + '")'
            })
        }
        function n() {
            var e = s.features;
            e.export || w.hide(),
            e.import || m.hide(),
            e.templates || y.hide(),
            e.customize || C.hide(),
            e.welcome || g.hide(),
            e.done || S.hide(),
            e.data || f.hide(),
            u.selectFirst()
        }
        function a() {
            var e = highed.dom.size(d)
              , t = highed.dom.size(c.container)
              , i = highed.dom.size(u.container);
            s.useHeader || (t = {
                w: 0,
                h: 0
            }),
            k.resize(void 0, e.h - t.h - i.h),
            x.resize(void 0, e.h - t.h - i.h),
            p.resize(e.w, e.h - t.h - i.h),
            A.resize(e.w, e.h - t.h - i.h),
            M.resize(),
            b.resize(e.w, e.h - t.h - i.h),
            v.resize(),
            l.emit("Resized"),
            highed.dom.style(G, {
                "max-height": e.h - t.h - i.h + "px"
            })
        }
        function r() {
            d.parentNode && d.parentNode.removeChild(d)
        }
        var l = highed.events()
          , s = highed.merge({
            defaultChartOptions: {},
            on: {},
            plugins: {},
            features: "export templates customize data",
            includeSVGInHTMLEmbedding: !0,
            importer: {},
            exporter: {},
            availableSettings: !1,
            useContextMenu: !0,
            useHeader: !0
        }, t)
          , d = highed.dom.cr("div", "highed-container")
          , h = highed.dom.cr("div", "highed-expand-container")
          , c = (highed.dom.cr("div"),
        highed.Toolbar(d, {
            additionalCSS: ["highed-header"]
        }))
          , p = highed.HSplitter(d, {
            leftWidth: 60,
            rightClasses: "highed-chart-preview-bar",
            allowResize: !1,
            leftMax: 800
        })
          , u = highed.WizardBar(d, p.left)
          , g = u.addStep({
            title: highed.getLocalizedStr("stepStart")
        })
          , m = u.addStep({
            title: highed.getLocalizedStr("stepImport")
        })
          , b = highed.DataImporter(m.body, s.importer)
          , f = u.addStep({
            title: highed.getLocalizedStr("stepData")
        })
          , v = highed.DataTable(f.body)
          , y = u.addStep({
            title: highed.getLocalizedStr("stepTemplates")
        })
          , x = highed.ChartTemplateSelector(y.body)
          , G = highed.dom.cr("div", "highed-box-size highed-chart-container")
          , M = highed.ChartPreview(G, {
            defaultChartOptions: s.defaultChartOptions,
            expandTo: h
        })
          , C = u.addStep({
            title: highed.getLocalizedStr("stepCustomize"),
            id: "customize"
        })
          , k = highed.ChartCustomizer(C.body, {
            availableSettings: s.availableSettings
        })
          , w = u.addStep({
            title: highed.getLocalizedStr("stepExport"),
            id: "export"
        })
          , A = highed.Exporter(w.body, s.exporter)
          , B = highed.dom.cr("div", "highed-ok-button", highed.getLocalizedStr("doneCaption"))
          , S = u.addStep({
            title: highed.getLocalizedStr("stepDone")
        })
          , L = highed.dom.cr("div", "highed-chart-container-icon")
          , T = highed.DefaultContextMenu(M);
        return T.on("NewChart", function() {
            m.activate()
        }),
        s.features = highed.arrToObj(s.features.split(" ")),
        highed.dom.on(B, "click", function() {
            l.emit("Done")
        }),
        highed.ready(function() {
            e = highed.dom.get(e),
            e ? (highed.dom.ap(e, highed.dom.ap(d, h)),
            highed.dom.ap(p.right, G),
            highed.dom.style(p.right, {}),
            S.body.className += " highed-done-pane",
            highed.dom.ap(S.body, highed.dom.cr("div", "", ["<h2>All done? Great!</h2>", "Click the button below to close the editor"].join("<br/>")), B),
            highed.dom.ap(c.left, highed.dom.style(highed.dom.cr("div", "highed-logo"), {
                "background-image": 'url("data:image/svg+xml;utf8,' + encodeURIComponent(highed.resources.logo) + '")'
            })),
            a(),
            highed.onPhone() || highed.dom.on(window, "resize", a)) : highed.log(1, "no valid parent supplied to editor"),
            highed.dom.style(g.body, {
                padding: "0 20px"
            }),
            highed.dom.ap(g.body, highed.dom.cr("h2", "", "Welcome"), highed.dom.cr("div", "", "This wizard will take you through the process of creating your very own chart."), highed.dom.cr("br"), highed.dom.cr("div", "", "Follow the steps below to get started!"))
        }),
        x.on("Select", M.loadTemplate),
        k.on("PropertyChange", M.options.set),
        k.on("PropertiesChange", M.options.setProperties),
        b.on("ImportCSV", M.data.csv),
        b.on("ImportJSON", M.data.json),
        b.on("ImportChartSettings", M.data.settings),
        M.on("RequestEdit", function(e, t, i) {
            k.focus(e, t, i)
        }),
        s.features.data && v.on("Change", function(e, t) {
            if (t.length) {
                var i = v.toDataSeries();
                M.options.set("xAxis-categories", i.categories, 0),
                M.loadSeries(i.series)
            }
        }),
        u.on("Step", function(e, t, i) {
            "export" === i.id ? (A.init(M.export.json(), M.export.html(s.includeSVGInHTMLEmbedding), M.export.svg(), M),
            A.buildPluginUI()) : "customize" === i.id && k.init(M.options.customized, M.options.chart)
        }),
        M.on("ChartChange", function(e) {
            l.emit("ChartChange", e)
        }),
        M.on("ChartChangeLately", function(e) {
            l.emit("ChartChangeLately", e)
        }),
        highed.isBasic(s.on) ? highed.log(2, "on object in editor properties is not a valid object") : Object.keys(s.on).forEach(function(e) {
            highed.isFn(s.on[e]) ? l.on(e, s.on[e]) : highed.log(2, "tried attaching a non-function to" + e)
        }),
        s.plugins = highed.arrToObj(s.plugins),
        Object.keys(s.plugins).forEach(function(e) {
            highed.plugins.editor.use(e, s.plugins[e] || {})
        }),
        M.on("ChartChangeLately", function(e) {
            i(),
            Object.keys(o).forEach(function(e) {
                var t = o[e];
                highed.isFn(t.definition.chartchange) && t.definition.chartchange.apply(t.options, [{
                    json: highed.merge({}, M.options.customized)
                }, t.options])
            })
        }),
        n(),
        k.init(M.options.customized, M.options.chart),
        c.addIcon({
            css: "fa-bar-chart",
            click: function() {
                M.expand()
            }
        }),
        s.useContextMenu && c.addIcon({
            css: "fa-gear",
            click: function(e) {
                T.show(e.clientX, e.clientY)
            }
        }),
        i(),
        highed.ready(function() {
            a(),
            window.scrollTo(0, 1)
        }),
        s.useHeader || highed.dom.style(c.container, {
            display: "none"
        }),
        M.on("RequestResize", a),
        {
            on: l.on,
            resize: a,
            getEmbeddableHTML: M.export.html,
            getEmbeddableJSON: M.export.json,
            getEmbeddableSVG: M.export.svg,
            destroy: r,
            toolbar: c,
            chart: M,
            importer: b
        }
    }
}(),
highed.SimpleEditor = function(e, t) {
    function i() {
        a.features.import || g.hide(),
        !a.features.preview,
        !a.features.customize
    }
    function o() {
        var e = highed.dom.size(l);
        d.resize(e.w, e.h),
        p.resize(!1, e.h - 60),
        c.resize(e.w, e.h - 60),
        u.resize(),
        g.resize()
    }
    function n() {
        m.build(u.options.customized)
    }
    var a = highed.merge({
        importer: {
            options: "csv"
        },
        features: "import preview customize",
        availableSettings: ["title--text", "subtitle--text", "colors", "chart--backgroundColor", "yAxis-title--style", "yAxis--type", "yAxis--opposite", "yAxis--reversed", "yAxis-labels--format"],
        defaultChartOptions: {}
    }, t)
      , r = highed.events()
      , l = highed.dom.cr("div", "highed-container")
      , s = highed.dom.cr("div", "highed-expand-container")
      , d = highed.VSplitter(l, {
        topHeight: "60px",
        noOverflow: !0
    })
      , h = highed.Toolbar(d.top, {
        additionalCSS: ["highed-header"]
    })
      , c = highed.HSplitter(d.bottom, {
        leftWidth: 60,
        noOverflow: !1
    })
      , p = highed.VSplitter(c.right, {
        noOverflow: !0
    })
      , u = highed.ChartPreview(p.top, {
        defaultChartOptions: a.defaultChartOptions,
        expandTo: s
    })
      , g = highed.DataImporter(p.bottom, a.importer)
      , m = highed.SimpleCustomizer(c.left, {
        availableSettings: a.availableSettings
    })
      , b = highed.DefaultContextMenu(u);
    return a.features = highed.arrToObj(a.features.split(" ")),
    m.on("PropertyChange", function(e, t, i) {
        u.options.set(e, t, i),
        r.emit("Change", u)
    }),
    g.on("ImportCSV", [u.data.csv, n]),
    g.on("ImportJSON", [u.data.json, n]),
    g.on("ImportChartSettings", [u.data.settings, n]),
    u.on("RequestEdit", function(e, t, i) {
        m.focus(e, t, i)
    }),
    u.on("New", n),
    highed.dom.ap(highed.dom.get(e), l, s),
    highed.dom.on(window, "resize", o),
    highed.dom.ap(h.left, highed.dom.style(highed.dom.cr("div", "highed-logo"), {
        "background-image": 'url("data:image/svg+xml;utf8,' + encodeURIComponent('<?xml version="1.0" encoding="utf-8"?><!-- Generator: Adobe Illustrator 16.0.3, SVG Export Plug-In . SVG Version: 6.00 Build 0)  --><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" id="Warstwa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"     width="425.197px" height="141.732px" viewBox="0 0 425.197 141.732" enable-background="new 0 0 425.197 141.732"     xml:space="preserve"><g>    <path fill="#eeeaea" d="M138.475,69.712h-17.02v9.77c0,1.037-0.813,1.851-1.849,1.851c-1.037,0-1.85-0.813-1.85-1.851V57.725        c0-1.037,0.813-1.852,1.85-1.852c1.036,0,1.849,0.813,1.849,1.852v8.436h17.02v-8.436c0-1.037,0.814-1.852,1.85-1.852        c1.036,0,1.85,0.813,1.85,1.852v21.754c0,1.037-0.814,1.851-1.85,1.851c-1.036,0-1.85-0.813-1.85-1.851V69.712z"/>    <path fill="#eeeaea" d="M156.973,79.479c0,1.037-0.814,1.851-1.852,1.851s-1.852-0.813-1.852-1.851V57.725        c0-1.037,0.814-1.852,1.852-1.852s1.852,0.813,1.852,1.852V79.479z"/>    <path fill="#eeeaea" d="M184.125,70.378c0-1.036,0.814-1.774,1.852-1.774c1.034,0,1.852,0.813,1.852,1.849v5.847        c0,0.444-0.226,1.109-0.595,1.479c-2.367,2.369-5.549,3.773-9.176,3.773c-7.178,0-12.949-5.771-12.949-12.948        c0-7.181,5.771-12.949,12.949-12.949c3.627,0,6.809,1.405,9.176,3.771c0.738,0.74,0.738,1.852,0,2.592        c-0.741,0.738-1.922,0.813-2.663,0.072c-1.702-1.699-3.923-2.736-6.513-2.736c-5.104,0-9.249,4.144-9.249,9.25        c0,5.104,4.146,9.25,9.249,9.25c2.367,0,4.441-0.813,6.067-2.222V70.378z"/>    <path fill="#eeeaea" d="M218.162,69.712h-17.019v9.77c0,1.037-0.817,1.851-1.852,1.851c-1.037,0-1.849-0.813-1.849-1.851V57.725        c0-1.037,0.812-1.852,1.849-1.852c1.034,0,1.852,0.813,1.852,1.852v8.436h17.019v-8.436c0-1.037,0.813-1.852,1.849-1.852        c1.037,0,1.852,0.813,1.852,1.852v21.754c0,1.037-0.813,1.851-1.852,1.851c-1.033,0-1.849-0.813-1.849-1.851V69.712z"/>    <path fill="#eeeaea" d="M242.948,81.552c-7.182,0-12.949-5.771-12.949-12.948c0-7.181,5.77-12.949,12.949-12.949        c3.627,0,6.809,1.405,9.176,3.771c0.738,0.74,0.738,1.852,0,2.592c-0.741,0.738-1.925,0.813-2.666,0.072        c-1.699-1.699-3.92-2.736-6.51-2.736c-5.106,0-9.249,4.144-9.249,9.25c0,5.104,4.143,9.25,9.249,9.25        c2.59,0,4.884-0.962,6.586-2.664c0.74-0.741,1.849-0.741,2.59,0c0.738,0.738,0.738,1.85,0,2.589        C249.756,80.146,246.574,81.552,242.948,81.552z"/>    <path fill="#eeeaea" d="M281.569,69.712h-17.02v9.77c0,1.037-0.813,1.851-1.852,1.851c-1.034,0-1.85-0.813-1.85-1.851V57.725        c0-1.037,0.813-1.852,1.85-1.852c1.035,0,1.852,0.813,1.852,1.852v8.436h17.02v-8.436c0-1.037,0.813-1.852,1.853-1.852        c1.034,0,1.849,0.813,1.849,1.852v21.754c0,1.037-0.813,1.851-1.849,1.851c-1.037,0-1.853-0.813-1.853-1.851V69.712z"/>    <path fill="#eeeaea" d="M308.758,57.503l10.507,20.646c0.223,0.443,0.445,1.036,0.445,1.554c0,1.036-0.668,1.628-1.702,1.628        c-0.741,0-1.481-0.222-2.001-1.258l-3.253-6.438h-13.547l-3.183,6.438c-0.517,1.036-1.256,1.258-1.994,1.258        c-1.037,0-1.702-0.593-1.702-1.628c0-0.519,0.22-1.109,0.442-1.554l10.506-20.646c0.668-1.405,2.002-1.628,2.74-1.628        C306.76,55.875,308.09,56.096,308.758,57.503z M300.985,70.083h9.988l-4.957-9.99L300.985,70.083z"/>    <path fill="#eeeaea" d="M340.159,56.023c4.441,0,8.064,3.255,8.064,7.694c0,3.923-2.813,6.884-6.511,7.549l6.731,7.104        c0.664,0.666,0.889,1.85,0.146,2.516c-0.736,0.741-2.145,0.521-2.886-0.296l-8.729-9.176h-6.511v8.142        c0,1.034-0.815,1.774-1.854,1.774c-1.033,0-1.85-0.813-1.85-1.851V57.873c0-1.035,0.814-1.85,1.85-1.85H340.159z M330.468,59.575        v8.288h9.691c2.59,0,4.367-1.776,4.367-4.146c0-2.365-1.777-4.144-4.367-4.144L330.468,59.575L330.468,59.575z"/>    <path fill="#eeeaea" d="M365.047,59.575h-9.249c-1.033,0-1.849-0.74-1.849-1.776c0-1.034,0.813-1.773,1.849-1.773h22.201        c1.037,0,1.852,0.74,1.852,1.773c0,1.037-0.813,1.776-1.852,1.776h-9.249V79.48c0,1.037-0.813,1.851-1.849,1.851        c-1.037,0-1.854-0.813-1.854-1.851V59.575z"/>    <path fill="#eeeaea" d="M388.724,66.013c0-9.25,5.698-10.359,9.99-10.359c1.035,0,1.85,0.813,1.85,1.85        c0,1.036-0.813,1.851-1.85,1.851c-3.479,0-6.29,0.738-6.29,6.66v5.18c0,9.25-5.698,10.358-9.989,10.358        c-1.035,0-1.85-0.813-1.85-1.85s0.814-1.85,1.85-1.85c3.479,0,6.289-0.74,6.289-6.66V66.013z"/></g><polygon fill="#8087E8" points="67.981,30.52 56.757,56.73 42.009,91.171 76.301,76.685 94.465,69.013 "/><polygon fill="#30426B" points="73.7,62.25 76.302,76.685 94.466,69.013 "/><polygon fill="#6699A1" points="67.981,30.52 73.7,62.251 94.465,69.013 "/><polygon fill="#78758C" points="73.7,62.25 94.466,69.013 56.758,56.729 42.009,91.171 76.302,76.685 "/><polygon fill="#A3EDBA" points="42.009,91.171 56.757,56.73 26.442,46.855 "/><polygon fill="#6699A1" points="76.302,76.685 79.628,95.13 94.466,69.013 "/><polygon fill="#8087E8" points="67.981,30.52 56.757,56.73 73.7,62.251 "/></svg>') + '")'
    })),
    h.addIcon({
        css: "fa-gear",
        click: function(e) {
            b.show(e.clientX, e.clientY)
        }
    }),
    i(),
    o(),
    n(),
    {
        resize: o,
        on: r.on,
        toolbar: h,
        chart: u
    }
}
,
highed.ModalEditor = function(e, t, i) {
    function o(t) {
        t = t || e,
        t && (highed.isFn(s) && s(),
        s = highed.dom.on(highed.dom.get(t), "click", r.show))
    }
    function n() {
        highed.isFn(i) && i(l.chart),
        r.hide()
    }
    var a = highed.merge({
        type: "full",
        allowDone: !1
    }, t)
      , r = highed.OverlayModal(!1, {
        width: "95%",
        height: "95%",
        showOnInit: !1
    })
      , l = "full" === a.type ? highed.Editor(r.body, t) : highed.SimpleEditor(r.body, t)
      , s = !1
      , d = highed.dom.cr("button", "highed-done-button", "Close &amp; Use");
    return r.on("Show", l.resize),
    highed.dom.on(d, "click", n),
    o(e),
    a.allowDone && highed.dom.ap(l.toolbar.center, d),
    l.on("Done", n),
    l.resize(),
    {
        show: r.show,
        hide: r.hide,
        on: l.on,
        attachToSummoner: o
    }
}
,
highed.cbsEditor = function(e, t) {
    function i() {
        F.addItem({
            id: "mobile",
            title: "Mobile preview",
            select: function() {
                highed.dom.style(x, {
                    width: "290px"
                }),
                G.resize()
            }
        }),
        F.addItem({
            id: "site",
            title: "Site preview",
            select: function() {
                highed.dom.style(x, {
                    width: "100%",
                    maxWidth: "700px"
                }),
                G.resize()
            }
        })
    }
    function o() {
        highed.onPhone() && highed.dom.style(S, {
            "background-image": 'url("data:image/svg+xml;utf8,' + encodeURIComponent(G.export.svg()) + '")'
        })
    }
    function n() {
        var e = s.features;
        e.export || k.hide(),
        e.import || g.hide(),
        e.templates || v.hide(),
        e.customize || M.hide(),
        e.done || B.hide(),
        e.data || b.hide(),
        u.selectFirst()
    }
    function a() {
        var e = highed.dom.size(h)
          , t = highed.dom.size(c.container)
          , i = highed.dom.size(u.container);
        s.useHeader || (t = {
            w: 0,
            h: 0
        }),
        C.resize(void 0, e.h - t.h - i.h),
        y.resize(void 0, e.h - t.h - i.h),
        p.resize(e.w, e.h - t.h - i.h),
        w.resize(e.w, e.h - t.h - i.h),
        G.resize(),
        m.resize(e.w, e.h - t.h - i.h),
        f.resize(),
        G.updateLegend(),
        l.emit("Resized"),
        highed.dom.style(x, {
            "max-height": e.h - t.h - i.h + "px"
        })
    }
    function r() {
        h.parentNode && h.parentNode.removeChild(h)
    }
    var l = highed.events()
      , s = highed.merge({
        defaultChartOptions: {},
        on: {},
        plugins: {},
        features: "export templates customize data",
        includeSVGInHTMLEmbedding: !0,
        importer: {},
        exporter: {},
        availableSettings: !1,
        useContextMenu: !0,
        useHeader: !0
    }, t)
      , d = {}
      , h = highed.dom.cr("div", "highed-container")
      , c = (highed.dom.cr("div"),
    highed.Toolbar(h, {
        additionalCSS: ["highed-header"]
    }))
      , p = highed.HSplitter(h, {
        leftWidth: 60,
        rightClasses: "highed-chart-preview-bar",
        allowResize: !1,
        leftMax: 800
    })
      , u = highed.WizardBar(h, p.left)
      , g = u.addStep({
        title: highed.getLocalizedStr("stepImport"),
        id: "stepImport"
    })
      , m = highed.DataImporter(g.body, s.importer)
      , b = u.addStep({
        title: highed.getLocalizedStr("stepData"),
        id: "stepData"
    })
      , f = highed.DataTable(b.body)
      , v = u.addStep({
        title: highed.getLocalizedStr("stepTemplates"),
        id: "stepTemplates"
    })
      , y = highed.ChartCBSTemplateSelector(v.body)
      , x = highed.dom.cr("div", "highed-box-size highed-chart-container")
      , G = highed.ChartPreview(x, {
        defaultChartOptions: s.defaultChartOptions
    })
      , M = u.addStep({
        title: highed.getLocalizedStr("stepCustomize"),
        id: "stepCustomize"
    })
      , C = highed.CBSChartCustomizer(M.body, {
        availableSettings: s.availableSettings
    })
      , k = u.addStep({
        title: highed.getLocalizedStr("stepExport"),
        id: "stepExport"
    })
      , w = highed.Exporter(k.body, s.exporter)
      , A = highed.dom.cr("div", "highed-ok-button", highed.getLocalizedStr("doneCaption"))
      , B = u.addStep({
        title: highed.getLocalizedStr("stepDone"),
        id: "stepDone"
    })
      , S = highed.dom.cr("div", "highed-chart-container-icon")
      , L = highed.DefaultContextMenu(G)
      , T = highed.dom.cr("div", "highed-res-preview")
      , F = highed.DropDown(T);
    if (L.on("NewChart", function() {
        location.reload()
    }),
    s.features = highed.arrToObj(s.features.split(" ")),
    i(),
    highed.dom.ap(p.right, T),
    F.selectByIndex(0),
    Highcharts.wrap(Highcharts.PlotLineOrBand.prototype, "render", function(e) {
        var t = this.axis.chart;
        return e.call(this),
        t.seriesGroup || (t.seriesGroup = t.renderer.g("series-group").attr({
            zIndex: 3
        }).add()),
        this.svgElem.parentGroup !== t.seriesGroup && this.svgElem.attr({
            zIndex: this.options.zIndex
        }).add(t.seriesGroup),
        this
    }),
    highed.dom.on(A, "click", function() {
        l.emit("Done")
    }),
    e = highed.dom.get(e)) {
        highed.dom.ap(e, highed.dom.ap(h)),
        highed.dom.ap(p.right, x),
        highed.dom.style(p.right, {}),
        B.body.className += " highed-done-pane",
        highed.dom.ap(B.body, highed.dom.cr("div", "", ["<h2>All done? Great!</h2>", "Click the button below to close the editor"].join("<br/>")), A);
        var O = highed.dom.cr("object", "cbs-logo");
        O.setAttribute("data", "./images/cbs-brand.svg"),
        highed.dom.ap(c.left, O),
        highed.dom.ap(c.center, highed.dom.cr("div", "hc5-cbs-version-nr", "v1.0.3.7671")),
        a(),
        highed.onPhone() || highed.dom.on(window, "resize", a)
    } else
        highed.log(1, "no valid parent supplied to editor");
    return y.on("Select", G.loadTemplate),
    C.on("PropertyChange", G.options.set),
    C.on("PropertiesChange", G.options.setProperties),
    C.on("InitChart", G.initChart),
    m.on("ImportCSV", G.data.csv),
    m.on("ImportJSON", G.data.json),
    m.on("ImportChartSettings", G.data.settings),
    G.on("ResetColors", C.resetColors),
    G.on("SetDefaultCultureSettings", C.setDefaultCultureSettings),
    G.on("RequestEdit", function(e, t, i) {
        C.focus(e, t, i)
    }),
    s.features.data && (G.on("LoadProjectData", function(e, t) {
        var i = e.series
          , o = e.xAxis
          , n = e.lang.decimalPoint || "."
          , a = e.settings.hasGroupedCategories
          , r = e.settings.csvData;
        f.loadProjectData(i, o, n, a, r),
        y.selectTemplate(t.masterID, t.id),
        b.activate()
    }),
    f.on("Change", function(e, t, i, o, n) {
        if (t.length) {
            var a = f.toCBSDataSeries(o);
            G.data.datatable(a.series, a.categories, a.periods, f.isMapData(), i, o, n)
        }
    }),
    f.on("DataImported", function() {
        G.clearDropDowns()
    })),
    u.on("Step", function(e, t, i) {
        "stepExport" === i.id ? (w.init(G.export.json(), G.export.html(s.includeSVGInHTMLEmbedding), "", G),
        w.buildPluginUI()) : "stepData" === i.id ? f.resize() : "stepCustomize" === i.id && C.init(G.options.customized, G.options.chart)
    }),
    G.on("ChartChange", function(e) {
        l.emit("ChartChange", e)
    }),
    G.on("ChartChangeLately", function(e) {
        l.emit("ChartChangeLately", e)
    }),
    highed.isBasic(s.on) ? highed.log(2, "on object in editor properties is not a valid object") : Object.keys(s.on).forEach(function(e) {
        highed.isFn(s.on[e]) ? l.on(e, s.on[e]) : highed.log(2, "tried attaching a non-function to" + e)
    }),
    s.plugins = highed.arrToObj(s.plugins),
    Object.keys(s.plugins).forEach(function(e) {
        highed.plugins.editor.use(e, s.plugins[e] || {})
    }),
    G.on("ChartChangeLately", function(e) {
        o(),
        Object.keys(d).forEach(function(e) {
            var t = d[e];
            highed.isFn(t.definition.chartchange) && t.definition.chartchange.apply(t.options, [{
                json: highed.merge({}, G.options.customized)
            }, t.options])
        })
    }),
    n(),
    C.init(G.options.customized, G.options.chart),
    s.useContextMenu && c.addIcon({
        id: "icon-cog-options",
        css: "fa-gear",
        click: function(e) {
            L.show(e.clientX, e.clientY)
        },
        tooltip: highed.getLocalizedStr("projectIcon.tooltip")
    }),
    o(),
    highed.ready(function() {
        a(),
        window.scrollTo(0, 1)
    }),
    s.useHeader || highed.dom.style(c.container, {
        display: "none"
    }),
    G.on("RequestResize", a),
    {
        on: l.on,
        resize: a,
        getEmbeddableHTML: G.export.html,
        getEmbeddableJSON: G.export.json,
        getEmbeddableSVG: G.export.svg,
        destroy: r,
        toolbar: c,
        chart: G,
        importer: m
    }
}
,
"undefined" == typeof cbs)
    var cbs = {};
cbs.noDataColor = "#e9e9e9",
cbs.noDataLegendItemId = "noDataLegendItemId",
cbs.noDataLegendElement = function() {
    return {
        id: cbs.noDataLegendItemId,
        text: highed.getLocalizedStr("maps.legend.noData"),
        from: "-",
        to: "-",
        color: cbs.noDataColor
    }
}
;
